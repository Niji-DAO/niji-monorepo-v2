// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class MaxQuorumVotesBPSSet extends ethereum.Event {
  get params(): MaxQuorumVotesBPSSet__Params {
    return new MaxQuorumVotesBPSSet__Params(this);
  }
}

export class MaxQuorumVotesBPSSet__Params {
  _event: MaxQuorumVotesBPSSet;

  constructor(event: MaxQuorumVotesBPSSet) {
    this._event = event;
  }

  get oldMaxQuorumVotesBPS(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get newMaxQuorumVotesBPS(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class MinQuorumVotesBPSSet extends ethereum.Event {
  get params(): MinQuorumVotesBPSSet__Params {
    return new MinQuorumVotesBPSSet__Params(this);
  }
}

export class MinQuorumVotesBPSSet__Params {
  _event: MinQuorumVotesBPSSet;

  constructor(event: MinQuorumVotesBPSSet) {
    this._event = event;
  }

  get oldMinQuorumVotesBPS(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get newMinQuorumVotesBPS(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class NewAdmin extends ethereum.Event {
  get params(): NewAdmin__Params {
    return new NewAdmin__Params(this);
  }
}

export class NewAdmin__Params {
  _event: NewAdmin;

  constructor(event: NewAdmin) {
    this._event = event;
  }

  get oldAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewImplementation extends ethereum.Event {
  get params(): NewImplementation__Params {
    return new NewImplementation__Params(this);
  }
}

export class NewImplementation__Params {
  _event: NewImplementation;

  constructor(event: NewImplementation) {
    this._event = event;
  }

  get oldImplementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newImplementation(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewPendingAdmin extends ethereum.Event {
  get params(): NewPendingAdmin__Params {
    return new NewPendingAdmin__Params(this);
  }
}

export class NewPendingAdmin__Params {
  _event: NewPendingAdmin;

  constructor(event: NewPendingAdmin) {
    this._event = event;
  }

  get oldPendingAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newPendingAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewPendingVetoer extends ethereum.Event {
  get params(): NewPendingVetoer__Params {
    return new NewPendingVetoer__Params(this);
  }
}

export class NewPendingVetoer__Params {
  _event: NewPendingVetoer;

  constructor(event: NewPendingVetoer) {
    this._event = event;
  }

  get oldPendingVetoer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newPendingVetoer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewVetoer extends ethereum.Event {
  get params(): NewVetoer__Params {
    return new NewVetoer__Params(this);
  }
}

export class NewVetoer__Params {
  _event: NewVetoer;

  constructor(event: NewVetoer) {
    this._event = event;
  }

  get oldVetoer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newVetoer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProposalCanceled extends ethereum.Event {
  get params(): ProposalCanceled__Params {
    return new ProposalCanceled__Params(this);
  }
}

export class ProposalCanceled__Params {
  _event: ProposalCanceled;

  constructor(event: ProposalCanceled) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ProposalCreated extends ethereum.Event {
  get params(): ProposalCreated__Params {
    return new ProposalCreated__Params(this);
  }
}

export class ProposalCreated__Params {
  _event: ProposalCreated;

  constructor(event: ProposalCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get targets(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get signatures(): Array<string> {
    return this._event.parameters[4].value.toStringArray();
  }

  get calldatas(): Array<Bytes> {
    return this._event.parameters[5].value.toBytesArray();
  }

  get startBlock(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get endBlock(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get description(): string {
    return this._event.parameters[8].value.toString();
  }
}

export class ProposalCreatedWithRequirements extends ethereum.Event {
  get params(): ProposalCreatedWithRequirements__Params {
    return new ProposalCreatedWithRequirements__Params(this);
  }
}

export class ProposalCreatedWithRequirements__Params {
  _event: ProposalCreatedWithRequirements;

  constructor(event: ProposalCreatedWithRequirements) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get targets(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get signatures(): Array<string> {
    return this._event.parameters[4].value.toStringArray();
  }

  get calldatas(): Array<Bytes> {
    return this._event.parameters[5].value.toBytesArray();
  }

  get startBlock(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get endBlock(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get proposalThreshold(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get quorumVotes(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get description(): string {
    return this._event.parameters[10].value.toString();
  }
}

export class ProposalExecuted extends ethereum.Event {
  get params(): ProposalExecuted__Params {
    return new ProposalExecuted__Params(this);
  }
}

export class ProposalExecuted__Params {
  _event: ProposalExecuted;

  constructor(event: ProposalExecuted) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ProposalQueued extends ethereum.Event {
  get params(): ProposalQueued__Params {
    return new ProposalQueued__Params(this);
  }
}

export class ProposalQueued__Params {
  _event: ProposalQueued;

  constructor(event: ProposalQueued) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get eta(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProposalThresholdBPSSet extends ethereum.Event {
  get params(): ProposalThresholdBPSSet__Params {
    return new ProposalThresholdBPSSet__Params(this);
  }
}

export class ProposalThresholdBPSSet__Params {
  _event: ProposalThresholdBPSSet;

  constructor(event: ProposalThresholdBPSSet) {
    this._event = event;
  }

  get oldProposalThresholdBPS(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newProposalThresholdBPS(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProposalVetoed extends ethereum.Event {
  get params(): ProposalVetoed__Params {
    return new ProposalVetoed__Params(this);
  }
}

export class ProposalVetoed__Params {
  _event: ProposalVetoed;

  constructor(event: ProposalVetoed) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class QuorumCoefficientSet extends ethereum.Event {
  get params(): QuorumCoefficientSet__Params {
    return new QuorumCoefficientSet__Params(this);
  }
}

export class QuorumCoefficientSet__Params {
  _event: QuorumCoefficientSet;

  constructor(event: QuorumCoefficientSet) {
    this._event = event;
  }

  get oldQuorumCoefficient(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newQuorumCoefficient(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class QuorumVotesBPSSet extends ethereum.Event {
  get params(): QuorumVotesBPSSet__Params {
    return new QuorumVotesBPSSet__Params(this);
  }
}

export class QuorumVotesBPSSet__Params {
  _event: QuorumVotesBPSSet;

  constructor(event: QuorumVotesBPSSet) {
    this._event = event;
  }

  get oldQuorumVotesBPS(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newQuorumVotesBPS(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RefundableVote extends ethereum.Event {
  get params(): RefundableVote__Params {
    return new RefundableVote__Params(this);
  }
}

export class RefundableVote__Params {
  _event: RefundableVote;

  constructor(event: RefundableVote) {
    this._event = event;
  }

  get voter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get refundAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get refundSent(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class VoteCast extends ethereum.Event {
  get params(): VoteCast__Params {
    return new VoteCast__Params(this);
  }
}

export class VoteCast__Params {
  _event: VoteCast;

  constructor(event: VoteCast) {
    this._event = event;
  }

  get voter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get proposalId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get support(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get votes(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get reason(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class VotingDelaySet extends ethereum.Event {
  get params(): VotingDelaySet__Params {
    return new VotingDelaySet__Params(this);
  }
}

export class VotingDelaySet__Params {
  _event: VotingDelaySet;

  constructor(event: VotingDelaySet) {
    this._event = event;
  }

  get oldVotingDelay(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newVotingDelay(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class VotingPeriodSet extends ethereum.Event {
  get params(): VotingPeriodSet__Params {
    return new VotingPeriodSet__Params(this);
  }
}

export class VotingPeriodSet__Params {
  _event: VotingPeriodSet;

  constructor(event: VotingPeriodSet) {
    this._event = event;
  }

  get oldVotingPeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newVotingPeriod(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sent(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class NounsDAO___withdrawResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): boolean {
    return this.value1;
  }
}

export class NounsDAO__dynamicQuorumVotesInputParamsStruct extends ethereum.Tuple {
  get minQuorumVotesBPS(): i32 {
    return this[0].toI32();
  }

  get maxQuorumVotesBPS(): i32 {
    return this[1].toI32();
  }

  get quorumCoefficient(): BigInt {
    return this[2].toBigInt();
  }
}

export class NounsDAO__getActionsResult {
  value0: Array<Address>;
  value1: Array<BigInt>;
  value2: Array<string>;
  value3: Array<Bytes>;

  constructor(
    value0: Array<Address>,
    value1: Array<BigInt>,
    value2: Array<string>,
    value3: Array<Bytes>,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    map.set("value2", ethereum.Value.fromStringArray(this.value2));
    map.set("value3", ethereum.Value.fromBytesArray(this.value3));
    return map;
  }

  getTargets(): Array<Address> {
    return this.value0;
  }

  getValues(): Array<BigInt> {
    return this.value1;
  }

  getSignatures(): Array<string> {
    return this.value2;
  }

  getCalldatas(): Array<Bytes> {
    return this.value3;
  }
}

export class NounsDAO__getDynamicQuorumParamsAtResultValue0Struct extends ethereum.Tuple {
  get minQuorumVotesBPS(): i32 {
    return this[0].toI32();
  }

  get maxQuorumVotesBPS(): i32 {
    return this[1].toI32();
  }

  get quorumCoefficient(): BigInt {
    return this[2].toBigInt();
  }
}

export class NounsDAO__getReceiptResultValue0Struct extends ethereum.Tuple {
  get hasVoted(): boolean {
    return this[0].toBoolean();
  }

  get support(): i32 {
    return this[1].toI32();
  }

  get votes(): BigInt {
    return this[2].toBigInt();
  }
}

export class NounsDAO__proposalsResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get proposer(): Address {
    return this[1].toAddress();
  }

  get proposalThreshold(): BigInt {
    return this[2].toBigInt();
  }

  get quorumVotes(): BigInt {
    return this[3].toBigInt();
  }

  get eta(): BigInt {
    return this[4].toBigInt();
  }

  get startBlock(): BigInt {
    return this[5].toBigInt();
  }

  get endBlock(): BigInt {
    return this[6].toBigInt();
  }

  get forVotes(): BigInt {
    return this[7].toBigInt();
  }

  get againstVotes(): BigInt {
    return this[8].toBigInt();
  }

  get abstainVotes(): BigInt {
    return this[9].toBigInt();
  }

  get canceled(): boolean {
    return this[10].toBoolean();
  }

  get vetoed(): boolean {
    return this[11].toBoolean();
  }

  get executed(): boolean {
    return this[12].toBoolean();
  }

  get totalSupply(): BigInt {
    return this[13].toBigInt();
  }

  get creationBlock(): BigInt {
    return this[14].toBigInt();
  }
}

export class NounsDAO__quorumParamsCheckpointsResultParamsStruct extends ethereum.Tuple {
  get minQuorumVotesBPS(): i32 {
    return this[0].toI32();
  }

  get maxQuorumVotesBPS(): i32 {
    return this[1].toI32();
  }

  get quorumCoefficient(): BigInt {
    return this[2].toBigInt();
  }
}

export class NounsDAO__quorumParamsCheckpointsResult {
  value0: BigInt;
  value1: NounsDAO__quorumParamsCheckpointsResultParamsStruct;

  constructor(
    value0: BigInt,
    value1: NounsDAO__quorumParamsCheckpointsResultParamsStruct,
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    return map;
  }

  getFromBlock(): BigInt {
    return this.value0;
  }

  getParams(): NounsDAO__quorumParamsCheckpointsResultParamsStruct {
    return this.value1;
  }
}

export class NounsDAO extends ethereum.SmartContract {
  static bind(address: Address): NounsDAO {
    return new NounsDAO("NounsDAO", address);
  }

  BALLOT_TYPEHASH(): Bytes {
    let result = super.call(
      "BALLOT_TYPEHASH",
      "BALLOT_TYPEHASH():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_BALLOT_TYPEHASH(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "BALLOT_TYPEHASH",
      "BALLOT_TYPEHASH():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DOMAIN_TYPEHASH(): Bytes {
    let result = super.call(
      "DOMAIN_TYPEHASH",
      "DOMAIN_TYPEHASH():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DOMAIN_TYPEHASH(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DOMAIN_TYPEHASH",
      "DOMAIN_TYPEHASH():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MAX_PROPOSAL_THRESHOLD_BPS(): BigInt {
    let result = super.call(
      "MAX_PROPOSAL_THRESHOLD_BPS",
      "MAX_PROPOSAL_THRESHOLD_BPS():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MAX_PROPOSAL_THRESHOLD_BPS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_PROPOSAL_THRESHOLD_BPS",
      "MAX_PROPOSAL_THRESHOLD_BPS():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_QUORUM_VOTES_BPS(): BigInt {
    let result = super.call(
      "MAX_QUORUM_VOTES_BPS",
      "MAX_QUORUM_VOTES_BPS():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MAX_QUORUM_VOTES_BPS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_QUORUM_VOTES_BPS",
      "MAX_QUORUM_VOTES_BPS():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_QUORUM_VOTES_BPS_UPPER_BOUND(): BigInt {
    let result = super.call(
      "MAX_QUORUM_VOTES_BPS_UPPER_BOUND",
      "MAX_QUORUM_VOTES_BPS_UPPER_BOUND():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MAX_QUORUM_VOTES_BPS_UPPER_BOUND(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_QUORUM_VOTES_BPS_UPPER_BOUND",
      "MAX_QUORUM_VOTES_BPS_UPPER_BOUND():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_REFUND_BASE_FEE(): BigInt {
    let result = super.call(
      "MAX_REFUND_BASE_FEE",
      "MAX_REFUND_BASE_FEE():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MAX_REFUND_BASE_FEE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_REFUND_BASE_FEE",
      "MAX_REFUND_BASE_FEE():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_REFUND_GAS_USED(): BigInt {
    let result = super.call(
      "MAX_REFUND_GAS_USED",
      "MAX_REFUND_GAS_USED():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MAX_REFUND_GAS_USED(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_REFUND_GAS_USED",
      "MAX_REFUND_GAS_USED():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_REFUND_PRIORITY_FEE(): BigInt {
    let result = super.call(
      "MAX_REFUND_PRIORITY_FEE",
      "MAX_REFUND_PRIORITY_FEE():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MAX_REFUND_PRIORITY_FEE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_REFUND_PRIORITY_FEE",
      "MAX_REFUND_PRIORITY_FEE():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_VOTING_DELAY(): BigInt {
    let result = super.call(
      "MAX_VOTING_DELAY",
      "MAX_VOTING_DELAY():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MAX_VOTING_DELAY(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_VOTING_DELAY",
      "MAX_VOTING_DELAY():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_VOTING_PERIOD(): BigInt {
    let result = super.call(
      "MAX_VOTING_PERIOD",
      "MAX_VOTING_PERIOD():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MAX_VOTING_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_VOTING_PERIOD",
      "MAX_VOTING_PERIOD():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MIN_PROPOSAL_THRESHOLD_BPS(): BigInt {
    let result = super.call(
      "MIN_PROPOSAL_THRESHOLD_BPS",
      "MIN_PROPOSAL_THRESHOLD_BPS():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MIN_PROPOSAL_THRESHOLD_BPS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_PROPOSAL_THRESHOLD_BPS",
      "MIN_PROPOSAL_THRESHOLD_BPS():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MIN_QUORUM_VOTES_BPS_LOWER_BOUND(): BigInt {
    let result = super.call(
      "MIN_QUORUM_VOTES_BPS_LOWER_BOUND",
      "MIN_QUORUM_VOTES_BPS_LOWER_BOUND():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MIN_QUORUM_VOTES_BPS_LOWER_BOUND(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_QUORUM_VOTES_BPS_LOWER_BOUND",
      "MIN_QUORUM_VOTES_BPS_LOWER_BOUND():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MIN_QUORUM_VOTES_BPS_UPPER_BOUND(): BigInt {
    let result = super.call(
      "MIN_QUORUM_VOTES_BPS_UPPER_BOUND",
      "MIN_QUORUM_VOTES_BPS_UPPER_BOUND():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MIN_QUORUM_VOTES_BPS_UPPER_BOUND(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_QUORUM_VOTES_BPS_UPPER_BOUND",
      "MIN_QUORUM_VOTES_BPS_UPPER_BOUND():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MIN_VOTING_DELAY(): BigInt {
    let result = super.call(
      "MIN_VOTING_DELAY",
      "MIN_VOTING_DELAY():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MIN_VOTING_DELAY(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_VOTING_DELAY",
      "MIN_VOTING_DELAY():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MIN_VOTING_PERIOD(): BigInt {
    let result = super.call(
      "MIN_VOTING_PERIOD",
      "MIN_VOTING_PERIOD():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MIN_VOTING_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_VOTING_PERIOD",
      "MIN_VOTING_PERIOD():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  REFUND_BASE_GAS(): BigInt {
    let result = super.call(
      "REFUND_BASE_GAS",
      "REFUND_BASE_GAS():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_REFUND_BASE_GAS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "REFUND_BASE_GAS",
      "REFUND_BASE_GAS():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _withdraw(): NounsDAO___withdrawResult {
    let result = super.call("_withdraw", "_withdraw():(uint256,bool)", []);

    return new NounsDAO___withdrawResult(
      result[0].toBigInt(),
      result[1].toBoolean(),
    );
  }

  try__withdraw(): ethereum.CallResult<NounsDAO___withdrawResult> {
    let result = super.tryCall("_withdraw", "_withdraw():(uint256,bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NounsDAO___withdrawResult(value[0].toBigInt(), value[1].toBoolean()),
    );
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  dynamicQuorumVotes(
    againstVotes: BigInt,
    totalSupply: BigInt,
    params: NounsDAO__dynamicQuorumVotesInputParamsStruct,
  ): BigInt {
    let result = super.call(
      "dynamicQuorumVotes",
      "dynamicQuorumVotes(uint256,uint256,(uint16,uint16,uint32)):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(againstVotes),
        ethereum.Value.fromUnsignedBigInt(totalSupply),
        ethereum.Value.fromTuple(params),
      ],
    );

    return result[0].toBigInt();
  }

  try_dynamicQuorumVotes(
    againstVotes: BigInt,
    totalSupply: BigInt,
    params: NounsDAO__dynamicQuorumVotesInputParamsStruct,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "dynamicQuorumVotes",
      "dynamicQuorumVotes(uint256,uint256,(uint16,uint16,uint32)):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(againstVotes),
        ethereum.Value.fromUnsignedBigInt(totalSupply),
        ethereum.Value.fromTuple(params),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getActions(proposalId: BigInt): NounsDAO__getActionsResult {
    let result = super.call(
      "getActions",
      "getActions(uint256):(address[],uint256[],string[],bytes[])",
      [ethereum.Value.fromUnsignedBigInt(proposalId)],
    );

    return new NounsDAO__getActionsResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray(),
      result[2].toStringArray(),
      result[3].toBytesArray(),
    );
  }

  try_getActions(
    proposalId: BigInt,
  ): ethereum.CallResult<NounsDAO__getActionsResult> {
    let result = super.tryCall(
      "getActions",
      "getActions(uint256):(address[],uint256[],string[],bytes[])",
      [ethereum.Value.fromUnsignedBigInt(proposalId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NounsDAO__getActionsResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray(),
        value[2].toStringArray(),
        value[3].toBytesArray(),
      ),
    );
  }

  getDynamicQuorumParamsAt(
    blockNumber_: BigInt,
  ): NounsDAO__getDynamicQuorumParamsAtResultValue0Struct {
    let result = super.call(
      "getDynamicQuorumParamsAt",
      "getDynamicQuorumParamsAt(uint256):((uint16,uint16,uint32))",
      [ethereum.Value.fromUnsignedBigInt(blockNumber_)],
    );

    return changetype<NounsDAO__getDynamicQuorumParamsAtResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getDynamicQuorumParamsAt(
    blockNumber_: BigInt,
  ): ethereum.CallResult<NounsDAO__getDynamicQuorumParamsAtResultValue0Struct> {
    let result = super.tryCall(
      "getDynamicQuorumParamsAt",
      "getDynamicQuorumParamsAt(uint256):((uint16,uint16,uint32))",
      [ethereum.Value.fromUnsignedBigInt(blockNumber_)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<NounsDAO__getDynamicQuorumParamsAtResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getReceipt(
    proposalId: BigInt,
    voter: Address,
  ): NounsDAO__getReceiptResultValue0Struct {
    let result = super.call(
      "getReceipt",
      "getReceipt(uint256,address):((bool,uint8,uint96))",
      [
        ethereum.Value.fromUnsignedBigInt(proposalId),
        ethereum.Value.fromAddress(voter),
      ],
    );

    return changetype<NounsDAO__getReceiptResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getReceipt(
    proposalId: BigInt,
    voter: Address,
  ): ethereum.CallResult<NounsDAO__getReceiptResultValue0Struct> {
    let result = super.tryCall(
      "getReceipt",
      "getReceipt(uint256,address):((bool,uint8,uint96))",
      [
        ethereum.Value.fromUnsignedBigInt(proposalId),
        ethereum.Value.fromAddress(voter),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<NounsDAO__getReceiptResultValue0Struct>(value[0].toTuple()),
    );
  }

  implementation(): Address {
    let result = super.call("implementation", "implementation():(address)", []);

    return result[0].toAddress();
  }

  try_implementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "implementation",
      "implementation():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  latestProposalIds(param0: Address): BigInt {
    let result = super.call(
      "latestProposalIds",
      "latestProposalIds(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_latestProposalIds(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "latestProposalIds",
      "latestProposalIds(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxQuorumVotes(): BigInt {
    let result = super.call("maxQuorumVotes", "maxQuorumVotes():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxQuorumVotes(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxQuorumVotes",
      "maxQuorumVotes():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minQuorumVotes(): BigInt {
    let result = super.call("minQuorumVotes", "minQuorumVotes():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minQuorumVotes(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minQuorumVotes",
      "minQuorumVotes():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  nouns(): Address {
    let result = super.call("nouns", "nouns():(address)", []);

    return result[0].toAddress();
  }

  try_nouns(): ethereum.CallResult<Address> {
    let result = super.tryCall("nouns", "nouns():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingAdmin(): Address {
    let result = super.call("pendingAdmin", "pendingAdmin():(address)", []);

    return result[0].toAddress();
  }

  try_pendingAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall("pendingAdmin", "pendingAdmin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingVetoer(): Address {
    let result = super.call("pendingVetoer", "pendingVetoer():(address)", []);

    return result[0].toAddress();
  }

  try_pendingVetoer(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "pendingVetoer",
      "pendingVetoer():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proposalCount(): BigInt {
    let result = super.call("proposalCount", "proposalCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_proposalCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposalCount",
      "proposalCount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposalMaxOperations(): BigInt {
    let result = super.call(
      "proposalMaxOperations",
      "proposalMaxOperations():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_proposalMaxOperations(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposalMaxOperations",
      "proposalMaxOperations():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposalThreshold(): BigInt {
    let result = super.call(
      "proposalThreshold",
      "proposalThreshold():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_proposalThreshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposalThreshold",
      "proposalThreshold():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposalThresholdBPS(): BigInt {
    let result = super.call(
      "proposalThresholdBPS",
      "proposalThresholdBPS():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_proposalThresholdBPS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposalThresholdBPS",
      "proposalThresholdBPS():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposals(proposalId: BigInt): NounsDAO__proposalsResultValue0Struct {
    let result = super.call(
      "proposals",
      "proposals(uint256):((uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool,bool,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(proposalId)],
    );

    return changetype<NounsDAO__proposalsResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_proposals(
    proposalId: BigInt,
  ): ethereum.CallResult<NounsDAO__proposalsResultValue0Struct> {
    let result = super.tryCall(
      "proposals",
      "proposals(uint256):((uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool,bool,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(proposalId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<NounsDAO__proposalsResultValue0Struct>(value[0].toTuple()),
    );
  }

  propose(
    targets: Array<Address>,
    values: Array<BigInt>,
    signatures: Array<string>,
    calldatas: Array<Bytes>,
    description: string,
  ): BigInt {
    let result = super.call(
      "propose",
      "propose(address[],uint256[],string[],bytes[],string):(uint256)",
      [
        ethereum.Value.fromAddressArray(targets),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromStringArray(signatures),
        ethereum.Value.fromBytesArray(calldatas),
        ethereum.Value.fromString(description),
      ],
    );

    return result[0].toBigInt();
  }

  try_propose(
    targets: Array<Address>,
    values: Array<BigInt>,
    signatures: Array<string>,
    calldatas: Array<Bytes>,
    description: string,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "propose",
      "propose(address[],uint256[],string[],bytes[],string):(uint256)",
      [
        ethereum.Value.fromAddressArray(targets),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromStringArray(signatures),
        ethereum.Value.fromBytesArray(calldatas),
        ethereum.Value.fromString(description),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  quorumParamsCheckpoints(
    param0: BigInt,
  ): NounsDAO__quorumParamsCheckpointsResult {
    let result = super.call(
      "quorumParamsCheckpoints",
      "quorumParamsCheckpoints(uint256):(uint32,(uint16,uint16,uint32))",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new NounsDAO__quorumParamsCheckpointsResult(
      result[0].toBigInt(),
      changetype<NounsDAO__quorumParamsCheckpointsResultParamsStruct>(
        result[1].toTuple(),
      ),
    );
  }

  try_quorumParamsCheckpoints(
    param0: BigInt,
  ): ethereum.CallResult<NounsDAO__quorumParamsCheckpointsResult> {
    let result = super.tryCall(
      "quorumParamsCheckpoints",
      "quorumParamsCheckpoints(uint256):(uint32,(uint16,uint16,uint32))",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NounsDAO__quorumParamsCheckpointsResult(
        value[0].toBigInt(),
        changetype<NounsDAO__quorumParamsCheckpointsResultParamsStruct>(
          value[1].toTuple(),
        ),
      ),
    );
  }

  quorumVotes(proposalId: BigInt): BigInt {
    let result = super.call("quorumVotes", "quorumVotes(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(proposalId),
    ]);

    return result[0].toBigInt();
  }

  try_quorumVotes(proposalId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "quorumVotes",
      "quorumVotes(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(proposalId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  quorumVotesBPS(): BigInt {
    let result = super.call("quorumVotesBPS", "quorumVotesBPS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_quorumVotesBPS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "quorumVotesBPS",
      "quorumVotesBPS():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  state(proposalId: BigInt): i32 {
    let result = super.call("state", "state(uint256):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(proposalId),
    ]);

    return result[0].toI32();
  }

  try_state(proposalId: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall("state", "state(uint256):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(proposalId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  timelock(): Address {
    let result = super.call("timelock", "timelock():(address)", []);

    return result[0].toAddress();
  }

  try_timelock(): ethereum.CallResult<Address> {
    let result = super.tryCall("timelock", "timelock():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  vetoer(): Address {
    let result = super.call("vetoer", "vetoer():(address)", []);

    return result[0].toAddress();
  }

  try_vetoer(): ethereum.CallResult<Address> {
    let result = super.tryCall("vetoer", "vetoer():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  votingDelay(): BigInt {
    let result = super.call("votingDelay", "votingDelay():(uint256)", []);

    return result[0].toBigInt();
  }

  try_votingDelay(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("votingDelay", "votingDelay():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  votingPeriod(): BigInt {
    let result = super.call("votingPeriod", "votingPeriod():(uint256)", []);

    return result[0].toBigInt();
  }

  try_votingPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("votingPeriod", "votingPeriod():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class _acceptAdminCall extends ethereum.Call {
  get inputs(): _acceptAdminCall__Inputs {
    return new _acceptAdminCall__Inputs(this);
  }

  get outputs(): _acceptAdminCall__Outputs {
    return new _acceptAdminCall__Outputs(this);
  }
}

export class _acceptAdminCall__Inputs {
  _call: _acceptAdminCall;

  constructor(call: _acceptAdminCall) {
    this._call = call;
  }
}

export class _acceptAdminCall__Outputs {
  _call: _acceptAdminCall;

  constructor(call: _acceptAdminCall) {
    this._call = call;
  }
}

export class _acceptVetoerCall extends ethereum.Call {
  get inputs(): _acceptVetoerCall__Inputs {
    return new _acceptVetoerCall__Inputs(this);
  }

  get outputs(): _acceptVetoerCall__Outputs {
    return new _acceptVetoerCall__Outputs(this);
  }
}

export class _acceptVetoerCall__Inputs {
  _call: _acceptVetoerCall;

  constructor(call: _acceptVetoerCall) {
    this._call = call;
  }
}

export class _acceptVetoerCall__Outputs {
  _call: _acceptVetoerCall;

  constructor(call: _acceptVetoerCall) {
    this._call = call;
  }
}

export class _burnVetoPowerCall extends ethereum.Call {
  get inputs(): _burnVetoPowerCall__Inputs {
    return new _burnVetoPowerCall__Inputs(this);
  }

  get outputs(): _burnVetoPowerCall__Outputs {
    return new _burnVetoPowerCall__Outputs(this);
  }
}

export class _burnVetoPowerCall__Inputs {
  _call: _burnVetoPowerCall;

  constructor(call: _burnVetoPowerCall) {
    this._call = call;
  }
}

export class _burnVetoPowerCall__Outputs {
  _call: _burnVetoPowerCall;

  constructor(call: _burnVetoPowerCall) {
    this._call = call;
  }
}

export class _setDynamicQuorumParamsCall extends ethereum.Call {
  get inputs(): _setDynamicQuorumParamsCall__Inputs {
    return new _setDynamicQuorumParamsCall__Inputs(this);
  }

  get outputs(): _setDynamicQuorumParamsCall__Outputs {
    return new _setDynamicQuorumParamsCall__Outputs(this);
  }
}

export class _setDynamicQuorumParamsCall__Inputs {
  _call: _setDynamicQuorumParamsCall;

  constructor(call: _setDynamicQuorumParamsCall) {
    this._call = call;
  }

  get newMinQuorumVotesBPS(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get newMaxQuorumVotesBPS(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get newQuorumCoefficient(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class _setDynamicQuorumParamsCall__Outputs {
  _call: _setDynamicQuorumParamsCall;

  constructor(call: _setDynamicQuorumParamsCall) {
    this._call = call;
  }
}

export class _setMaxQuorumVotesBPSCall extends ethereum.Call {
  get inputs(): _setMaxQuorumVotesBPSCall__Inputs {
    return new _setMaxQuorumVotesBPSCall__Inputs(this);
  }

  get outputs(): _setMaxQuorumVotesBPSCall__Outputs {
    return new _setMaxQuorumVotesBPSCall__Outputs(this);
  }
}

export class _setMaxQuorumVotesBPSCall__Inputs {
  _call: _setMaxQuorumVotesBPSCall;

  constructor(call: _setMaxQuorumVotesBPSCall) {
    this._call = call;
  }

  get newMaxQuorumVotesBPS(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class _setMaxQuorumVotesBPSCall__Outputs {
  _call: _setMaxQuorumVotesBPSCall;

  constructor(call: _setMaxQuorumVotesBPSCall) {
    this._call = call;
  }
}

export class _setMinQuorumVotesBPSCall extends ethereum.Call {
  get inputs(): _setMinQuorumVotesBPSCall__Inputs {
    return new _setMinQuorumVotesBPSCall__Inputs(this);
  }

  get outputs(): _setMinQuorumVotesBPSCall__Outputs {
    return new _setMinQuorumVotesBPSCall__Outputs(this);
  }
}

export class _setMinQuorumVotesBPSCall__Inputs {
  _call: _setMinQuorumVotesBPSCall;

  constructor(call: _setMinQuorumVotesBPSCall) {
    this._call = call;
  }

  get newMinQuorumVotesBPS(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class _setMinQuorumVotesBPSCall__Outputs {
  _call: _setMinQuorumVotesBPSCall;

  constructor(call: _setMinQuorumVotesBPSCall) {
    this._call = call;
  }
}

export class _setPendingAdminCall extends ethereum.Call {
  get inputs(): _setPendingAdminCall__Inputs {
    return new _setPendingAdminCall__Inputs(this);
  }

  get outputs(): _setPendingAdminCall__Outputs {
    return new _setPendingAdminCall__Outputs(this);
  }
}

export class _setPendingAdminCall__Inputs {
  _call: _setPendingAdminCall;

  constructor(call: _setPendingAdminCall) {
    this._call = call;
  }

  get newPendingAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class _setPendingAdminCall__Outputs {
  _call: _setPendingAdminCall;

  constructor(call: _setPendingAdminCall) {
    this._call = call;
  }
}

export class _setPendingVetoerCall extends ethereum.Call {
  get inputs(): _setPendingVetoerCall__Inputs {
    return new _setPendingVetoerCall__Inputs(this);
  }

  get outputs(): _setPendingVetoerCall__Outputs {
    return new _setPendingVetoerCall__Outputs(this);
  }
}

export class _setPendingVetoerCall__Inputs {
  _call: _setPendingVetoerCall;

  constructor(call: _setPendingVetoerCall) {
    this._call = call;
  }

  get newPendingVetoer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class _setPendingVetoerCall__Outputs {
  _call: _setPendingVetoerCall;

  constructor(call: _setPendingVetoerCall) {
    this._call = call;
  }
}

export class _setProposalThresholdBPSCall extends ethereum.Call {
  get inputs(): _setProposalThresholdBPSCall__Inputs {
    return new _setProposalThresholdBPSCall__Inputs(this);
  }

  get outputs(): _setProposalThresholdBPSCall__Outputs {
    return new _setProposalThresholdBPSCall__Outputs(this);
  }
}

export class _setProposalThresholdBPSCall__Inputs {
  _call: _setProposalThresholdBPSCall;

  constructor(call: _setProposalThresholdBPSCall) {
    this._call = call;
  }

  get newProposalThresholdBPS(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _setProposalThresholdBPSCall__Outputs {
  _call: _setProposalThresholdBPSCall;

  constructor(call: _setProposalThresholdBPSCall) {
    this._call = call;
  }
}

export class _setQuorumCoefficientCall extends ethereum.Call {
  get inputs(): _setQuorumCoefficientCall__Inputs {
    return new _setQuorumCoefficientCall__Inputs(this);
  }

  get outputs(): _setQuorumCoefficientCall__Outputs {
    return new _setQuorumCoefficientCall__Outputs(this);
  }
}

export class _setQuorumCoefficientCall__Inputs {
  _call: _setQuorumCoefficientCall;

  constructor(call: _setQuorumCoefficientCall) {
    this._call = call;
  }

  get newQuorumCoefficient(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _setQuorumCoefficientCall__Outputs {
  _call: _setQuorumCoefficientCall;

  constructor(call: _setQuorumCoefficientCall) {
    this._call = call;
  }
}

export class _setVotingDelayCall extends ethereum.Call {
  get inputs(): _setVotingDelayCall__Inputs {
    return new _setVotingDelayCall__Inputs(this);
  }

  get outputs(): _setVotingDelayCall__Outputs {
    return new _setVotingDelayCall__Outputs(this);
  }
}

export class _setVotingDelayCall__Inputs {
  _call: _setVotingDelayCall;

  constructor(call: _setVotingDelayCall) {
    this._call = call;
  }

  get newVotingDelay(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _setVotingDelayCall__Outputs {
  _call: _setVotingDelayCall;

  constructor(call: _setVotingDelayCall) {
    this._call = call;
  }
}

export class _setVotingPeriodCall extends ethereum.Call {
  get inputs(): _setVotingPeriodCall__Inputs {
    return new _setVotingPeriodCall__Inputs(this);
  }

  get outputs(): _setVotingPeriodCall__Outputs {
    return new _setVotingPeriodCall__Outputs(this);
  }
}

export class _setVotingPeriodCall__Inputs {
  _call: _setVotingPeriodCall;

  constructor(call: _setVotingPeriodCall) {
    this._call = call;
  }

  get newVotingPeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _setVotingPeriodCall__Outputs {
  _call: _setVotingPeriodCall;

  constructor(call: _setVotingPeriodCall) {
    this._call = call;
  }
}

export class _withdrawCall extends ethereum.Call {
  get inputs(): _withdrawCall__Inputs {
    return new _withdrawCall__Inputs(this);
  }

  get outputs(): _withdrawCall__Outputs {
    return new _withdrawCall__Outputs(this);
  }
}

export class _withdrawCall__Inputs {
  _call: _withdrawCall;

  constructor(call: _withdrawCall) {
    this._call = call;
  }
}

export class _withdrawCall__Outputs {
  _call: _withdrawCall;

  constructor(call: _withdrawCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get value1(): boolean {
    return this._call.outputValues[1].value.toBoolean();
  }
}

export class CancelCall extends ethereum.Call {
  get inputs(): CancelCall__Inputs {
    return new CancelCall__Inputs(this);
  }

  get outputs(): CancelCall__Outputs {
    return new CancelCall__Outputs(this);
  }
}

export class CancelCall__Inputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelCall__Outputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }
}

export class CastRefundableVoteCall extends ethereum.Call {
  get inputs(): CastRefundableVoteCall__Inputs {
    return new CastRefundableVoteCall__Inputs(this);
  }

  get outputs(): CastRefundableVoteCall__Outputs {
    return new CastRefundableVoteCall__Outputs(this);
  }
}

export class CastRefundableVoteCall__Inputs {
  _call: CastRefundableVoteCall;

  constructor(call: CastRefundableVoteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get support(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class CastRefundableVoteCall__Outputs {
  _call: CastRefundableVoteCall;

  constructor(call: CastRefundableVoteCall) {
    this._call = call;
  }
}

export class CastRefundableVoteWithReasonCall extends ethereum.Call {
  get inputs(): CastRefundableVoteWithReasonCall__Inputs {
    return new CastRefundableVoteWithReasonCall__Inputs(this);
  }

  get outputs(): CastRefundableVoteWithReasonCall__Outputs {
    return new CastRefundableVoteWithReasonCall__Outputs(this);
  }
}

export class CastRefundableVoteWithReasonCall__Inputs {
  _call: CastRefundableVoteWithReasonCall;

  constructor(call: CastRefundableVoteWithReasonCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get support(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get reason(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CastRefundableVoteWithReasonCall__Outputs {
  _call: CastRefundableVoteWithReasonCall;

  constructor(call: CastRefundableVoteWithReasonCall) {
    this._call = call;
  }
}

export class CastVoteCall extends ethereum.Call {
  get inputs(): CastVoteCall__Inputs {
    return new CastVoteCall__Inputs(this);
  }

  get outputs(): CastVoteCall__Outputs {
    return new CastVoteCall__Outputs(this);
  }
}

export class CastVoteCall__Inputs {
  _call: CastVoteCall;

  constructor(call: CastVoteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get support(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class CastVoteCall__Outputs {
  _call: CastVoteCall;

  constructor(call: CastVoteCall) {
    this._call = call;
  }
}

export class CastVoteBySigCall extends ethereum.Call {
  get inputs(): CastVoteBySigCall__Inputs {
    return new CastVoteBySigCall__Inputs(this);
  }

  get outputs(): CastVoteBySigCall__Outputs {
    return new CastVoteBySigCall__Outputs(this);
  }
}

export class CastVoteBySigCall__Inputs {
  _call: CastVoteBySigCall;

  constructor(call: CastVoteBySigCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get support(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get v(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class CastVoteBySigCall__Outputs {
  _call: CastVoteBySigCall;

  constructor(call: CastVoteBySigCall) {
    this._call = call;
  }
}

export class CastVoteWithReasonCall extends ethereum.Call {
  get inputs(): CastVoteWithReasonCall__Inputs {
    return new CastVoteWithReasonCall__Inputs(this);
  }

  get outputs(): CastVoteWithReasonCall__Outputs {
    return new CastVoteWithReasonCall__Outputs(this);
  }
}

export class CastVoteWithReasonCall__Inputs {
  _call: CastVoteWithReasonCall;

  constructor(call: CastVoteWithReasonCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get support(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get reason(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CastVoteWithReasonCall__Outputs {
  _call: CastVoteWithReasonCall;

  constructor(call: CastVoteWithReasonCall) {
    this._call = call;
  }
}

export class ExecuteCall extends ethereum.Call {
  get inputs(): ExecuteCall__Inputs {
    return new ExecuteCall__Inputs(this);
  }

  get outputs(): ExecuteCall__Outputs {
    return new ExecuteCall__Outputs(this);
  }
}

export class ExecuteCall__Inputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExecuteCall__Outputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get timelock_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get nouns_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get vetoer_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get votingPeriod_(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get votingDelay_(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get proposalThresholdBPS_(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get dynamicQuorumParams_(): InitializeCallDynamicQuorumParams_Struct {
    return changetype<InitializeCallDynamicQuorumParams_Struct>(
      this._call.inputValues[6].value.toTuple(),
    );
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCallDynamicQuorumParams_Struct extends ethereum.Tuple {
  get minQuorumVotesBPS(): i32 {
    return this[0].toI32();
  }

  get maxQuorumVotesBPS(): i32 {
    return this[1].toI32();
  }

  get quorumCoefficient(): BigInt {
    return this[2].toBigInt();
  }
}

export class ProposeCall extends ethereum.Call {
  get inputs(): ProposeCall__Inputs {
    return new ProposeCall__Inputs(this);
  }

  get outputs(): ProposeCall__Outputs {
    return new ProposeCall__Outputs(this);
  }
}

export class ProposeCall__Inputs {
  _call: ProposeCall;

  constructor(call: ProposeCall) {
    this._call = call;
  }

  get targets(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get signatures(): Array<string> {
    return this._call.inputValues[2].value.toStringArray();
  }

  get calldatas(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }

  get description(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class ProposeCall__Outputs {
  _call: ProposeCall;

  constructor(call: ProposeCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class QueueCall extends ethereum.Call {
  get inputs(): QueueCall__Inputs {
    return new QueueCall__Inputs(this);
  }

  get outputs(): QueueCall__Outputs {
    return new QueueCall__Outputs(this);
  }
}

export class QueueCall__Inputs {
  _call: QueueCall;

  constructor(call: QueueCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class QueueCall__Outputs {
  _call: QueueCall;

  constructor(call: QueueCall) {
    this._call = call;
  }
}

export class VetoCall extends ethereum.Call {
  get inputs(): VetoCall__Inputs {
    return new VetoCall__Inputs(this);
  }

  get outputs(): VetoCall__Outputs {
    return new VetoCall__Outputs(this);
  }
}

export class VetoCall__Inputs {
  _call: VetoCall;

  constructor(call: VetoCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class VetoCall__Outputs {
  _call: VetoCall;

  constructor(call: VetoCall) {
    this._call = call;
  }
}
