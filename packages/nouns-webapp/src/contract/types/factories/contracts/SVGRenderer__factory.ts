/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SVGRenderer,
  SVGRendererInterface,
} from "../../contracts/SVGRenderer";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "image",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "palette",
                type: "bytes",
              },
            ],
            internalType: "struct ISVGRenderer.Part[]",
            name: "parts",
            type: "tuple[]",
          },
          {
            internalType: "string",
            name: "background",
            type: "string",
          },
        ],
        internalType: "struct ISVGRenderer.SVGParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "generateSVG",
    outputs: [
      {
        internalType: "string",
        name: "svg",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "image",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "palette",
            type: "bytes",
          },
        ],
        internalType: "struct ISVGRenderer.Part",
        name: "part",
        type: "tuple",
      },
    ],
    name: "generateSVGPart",
    outputs: [
      {
        internalType: "string",
        name: "partialSVG",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "image",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "palette",
            type: "bytes",
          },
        ],
        internalType: "struct ISVGRenderer.Part[]",
        name: "parts",
        type: "tuple[]",
      },
    ],
    name: "generateSVGParts",
    outputs: [
      {
        internalType: "string",
        name: "partialSVG",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type SVGRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SVGRendererConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SVGRenderer__factory extends ContractFactory {
  constructor(...args: SVGRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SVGRenderer> {
    return super.deploy(overrides || {}) as Promise<SVGRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SVGRenderer {
    return super.attach(address) as SVGRenderer;
  }
  override connect(signer: Signer): SVGRenderer__factory {
    return super.connect(signer) as SVGRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SVGRendererInterface {
    return new utils.Interface(_abi) as SVGRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SVGRenderer {
    return new Contract(address, _abi, signerOrProvider) as SVGRenderer;
  }
}
