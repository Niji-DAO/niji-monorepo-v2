/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NounsAuctionHouseProxy,
  NounsAuctionHouseProxyInterface,
} from "../../../contracts/proxies/NounsAuctionHouseProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "logic",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "implementation_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234620000c05762000c00803803806200001d81620000db565b9283398101606082820312620000c057620000388262000107565b91620000476020820162000107565b604082015190916001600160401b038211620000c057019282601f85011215620000c057835193620000836200007d866200011c565b620000db565b9385855260208683010111620000c057620000b094620000aa916020808701910162000138565b6200015d565b6040516107679081620004998239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f191682016001600160401b038111838210176200010157604052565b620000c5565b51906001600160a01b0382168203620000c057565b6001600160401b0381116200010157601f01601f191660200190565b60005b8381106200014c5750506000910152565b81810151838201526020016200013b565b91823b1562000212577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b038516908117909155620001e893907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511580159062000209575b620001ea575b50506200026d565b565b6200020091620001f96200033b565b9162000395565b503880620001e0565b506000620001da565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61038054604080516001600160a01b0380841682529094166020850181905292937f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9190a18115620002e7576001600160a01b031916179055565b60405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b60405190606082016001600160401b03811183821017620001015760405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b9190823b15620003e657600081620003da9460208394519201905af43d15620003dd573d90620003c96200007d836200011c565b9182523d6000602084013e6200043a565b90565b6060906200043a565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b9091901562000447575090565b815115620004585750805190602001fd5b6044604051809262461bcd60e51b8252602060048301526200048a815180928160248601526020868601910162000138565b601f01601f19168101030190fdfe60806040526004361015610019575b366102e8575b6102e8565b6000803560e01c9081633659cfe61461006c575080634f1ef286146100675780635c60da1b146100625780638f2839701461005d5763f851a4400361000e576102a6565b6101c7565b610178565b6100dc565b346100be5760203660031901126100be576100856100c1565b6000805160206106f283398151915254336001600160a01b0390911603610014576100bb906100b26103c5565b9083825261042c565b80f35b80fd5b600435906001600160a01b03821682036100d757565b600080fd5b60403660031901126100d7576100f06100c1565b60243567ffffffffffffffff918282116100d757366023830112156100d75781600401359283116100d75736602484840101116100d7576000805160206106f283398151915254336001600160a01b039091160361001457600060208480602461016461015f61017699610410565b6103ea565b9682885201838701378401015261050e565b005b346100d75760003660031901126100d7576000805160206106f2833981519152546001600160a01b03903390821603610014576000805160206107128339815191525460405191168152602090f35b346100d75760203660031901126100d7576101e06100c1565b6000805160206106f283398151915280549091906001600160a01b03903390821603610014577f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604084549281519481851686521693846020820152a18115610252576001600160a01b031916179055005b60405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346100d75760003660031901126100d7576000805160206106f283398151915280546001600160a01b0390339082160361001457905460405191168152602090f35b6000805160206106f2833981519152546001600160a01b0390811633146103395760008051602061071283398151915254166000808092368280378136915af43d82803e15610335573d90f35b3d90fd5b60405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a490fd5b634e487b7160e01b600052604160045260246000fd5b604051906020820182811067ffffffffffffffff8211176103e557604052565b6103af565b6040519190601f01601f1916820167ffffffffffffffff8111838210176103e557604052565b67ffffffffffffffff81116103e557601f01601f191660200190565b803b156104b35760008051602061071283398151915280546001600160a01b0319166001600160a01b0383169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906104ab575b610496575050565b6104a8916104a261057f565b916105d9565b50565b50600061048e565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b803b156104b35760008051602061071283398151915280546001600160a01b0319166001600160a01b0383169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511580159061057757610496575050565b50600161048e565b604051906060820182811067ffffffffffffffff8211176103e55760405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b9190823b15610622576000816106179460208394519201905af43d1561061a573d9061060761015f83610410565b9182523d6000602084013e610676565b90565b606090610676565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b90919015610682575090565b8151156106925750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b8285106106d8575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506106b556feb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca264697066735822122017e5808876bf8ba4410d851d851f0d6fc6569da662f43743d12f0a3f7a0f2ebb64736f6c63430008140033";

type NounsAuctionHouseProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NounsAuctionHouseProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NounsAuctionHouseProxy__factory extends ContractFactory {
  constructor(...args: NounsAuctionHouseProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    logic: PromiseOrValue<string>,
    admin: PromiseOrValue<string>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NounsAuctionHouseProxy> {
    return super.deploy(
      logic,
      admin,
      data,
      overrides || {}
    ) as Promise<NounsAuctionHouseProxy>;
  }
  override getDeployTransaction(
    logic: PromiseOrValue<string>,
    admin: PromiseOrValue<string>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(logic, admin, data, overrides || {});
  }
  override attach(address: string): NounsAuctionHouseProxy {
    return super.attach(address) as NounsAuctionHouseProxy;
  }
  override connect(signer: Signer): NounsAuctionHouseProxy__factory {
    return super.connect(signer) as NounsAuctionHouseProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NounsAuctionHouseProxyInterface {
    return new utils.Interface(_abi) as NounsAuctionHouseProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NounsAuctionHouseProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NounsAuctionHouseProxy;
  }
}
