/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NounsAuctionHouseProxyAdmin,
  NounsAuctionHouseProxyAdminInterface,
} from "../../../contracts/proxies/NounsAuctionHouseProxyAdmin";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361061b90816100618239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90848263204e1c7a146104735750508063715018a6146104155780637eff275e146103935780638da5cb5b1461036b5780639623609d1461024e5783816399a88ec4146101bd57508063f2fde38b146100e95763f3b7dead1461007f57600080fd5b346100e55760203660031901126100e5576001600160a01b039083908190836100a66104b2565b86516303e1469160e61b815291165afa926100bf610596565b93156100e257506100da8360208080965183010191016105c6565b169051908152f35b80fd5b8280fd5b50346100e55760203660031901126100e5576101036104b2565b83546001600160a01b039291839161011e908316331461054b565b1692831561016b575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b9290503461024a578060031936011261024a576101d86104b2565b6101e06104cd565b9060018060a01b0380916101f882885416331461054b565b16803b156102465785928360249286519788958694631b2ce7f360e11b865216908401525af190811561023d575061022d5750f35b610236906104e3565b6100e25780f35b513d84823e3d90fd5b8580fd5b5050fd5b5082906060366003190112610367576102656104b2565b9261026e6104cd565b916044359067ffffffffffffffff8211610363573660238301121561036357818101359161029b8361052f565b926102a88551948561050d565b808452366024828401011161035f5760249291818892602095869301838801378501015285546001600160a01b039788916102e6908316331461054b565b1696873b1561035f5784519563278f794360e11b87521690850152826024850152815191826044860152855b83811061034b5750505082849581606481858983819884010152601f8019910116810103019134905af190811561023d575061022d5750f35b818101830151868201606401528201610312565b8680fd5b8480fd5b5080fd5b505034610367578160031936011261036757905490516001600160a01b039091168152602090f35b5090346100e557806003193601126100e557826103ae6104b2565b6103b66104cd565b82546001600160a01b039283916103d0908316331461054b565b1690813b156104115783602492865197889586946308f2839760e41b865216908401525af190811561023d5750610405575080f35b61040e906104e3565b80f35b8380fd5b83346100e257806003193601126100e257805481906001600160a01b0381169061044033831461054b565b6001600160a01b03191682557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b91509134610367576020366003190112610367576001600160a01b03928291908461049c6104b2565b635c60da1b60e01b8352165afa926100bf610596565b600435906001600160a01b03821682036104c857565b600080fd5b602435906001600160a01b03821682036104c857565b67ffffffffffffffff81116104f757604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176104f757604052565b67ffffffffffffffff81116104f757601f01601f191660200190565b1561055257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b3d156105c1573d906105a78261052f565b916105b5604051938461050d565b82523d6000602084013e565b606090565b908160209103126104c857516001600160a01b03811681036104c8579056fea26469706673582212203865c80ccd3baee85c0b7257f688868a9a22aab70e69df0920bf4059707a284864736f6c63430008140033";

type NounsAuctionHouseProxyAdminConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NounsAuctionHouseProxyAdminConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NounsAuctionHouseProxyAdmin__factory extends ContractFactory {
  constructor(...args: NounsAuctionHouseProxyAdminConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NounsAuctionHouseProxyAdmin> {
    return super.deploy(
      overrides || {}
    ) as Promise<NounsAuctionHouseProxyAdmin>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NounsAuctionHouseProxyAdmin {
    return super.attach(address) as NounsAuctionHouseProxyAdmin;
  }
  override connect(signer: Signer): NounsAuctionHouseProxyAdmin__factory {
    return super.connect(signer) as NounsAuctionHouseProxyAdmin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NounsAuctionHouseProxyAdminInterface {
    return new utils.Interface(_abi) as NounsAuctionHouseProxyAdminInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NounsAuctionHouseProxyAdmin {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NounsAuctionHouseProxyAdmin;
  }
}
