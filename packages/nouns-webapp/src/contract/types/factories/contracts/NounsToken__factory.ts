/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NounsToken,
  NounsTokenInterface,
} from "../../contracts/NounsToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_noundersDAO",
        type: "address",
      },
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
      {
        internalType: "contract INounsDescriptorMinimal",
        name: "_descriptor",
        type: "address",
      },
      {
        internalType: "contract INounsSeeder",
        name: "_seeder",
        type: "address",
      },
      {
        internalType: "contract IProxyRegistry",
        name: "_proxyRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "DescriptorLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract INounsDescriptorMinimal",
        name: "descriptor",
        type: "address",
      },
    ],
    name: "DescriptorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "MinterLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "MinterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NounBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "backDecoration",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "backgroundDecoration",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "special",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "leftHand",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "back",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "clothe",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "choker",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "ear",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "hair",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "hat",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "headphone",
            type: "uint48",
          },
        ],
        indexed: false,
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "NounCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "noundersDAO",
        type: "address",
      },
    ],
    name: "NoundersDAOUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "SeederLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract INounsSeeder",
        name: "seeder",
        type: "address",
      },
    ],
    name: "SeederUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DELEGATION_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nounId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "fromBlock",
        type: "uint32",
      },
      {
        internalType: "uint96",
        name: "votes",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "dataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegator",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "descriptor",
    outputs: [
      {
        internalType: "contract INounsDescriptorMinimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCurrentVotes",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPriorVotes",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isDescriptorLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMinterLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isSeederLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockDescriptor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockSeeder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "noundersDAO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyRegistry",
    outputs: [
      {
        internalType: "contract IProxyRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seeder",
    outputs: [
      {
        internalType: "contract INounsSeeder",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "seeds",
    outputs: [
      {
        internalType: "uint48",
        name: "background",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "backDecoration",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "backgroundDecoration",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "special",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "leftHand",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "back",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "clothe",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "choker",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "ear",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "hair",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "hat",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "headphone",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newContractURIHash",
        type: "string",
      },
    ],
    name: "setContractURIHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INounsDescriptorMinimal",
        name: "_descriptor",
        type: "address",
      },
    ],
    name: "setDescriptor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_noundersDAO",
        type: "address",
      },
    ],
    name: "setNoundersDAO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INounsSeeder",
        name: "_seeder",
        type: "address",
      },
    ],
    name: "setSeeder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegator",
        type: "address",
      },
    ],
    name: "votesToDelegate",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03462000416576001600160401b0390601f19601f6200448138819003828101841685019190868311868410176200041b5780869260a0946040528339810103126200041657620000518362000451565b906020946200006286860162000451565b9060408601519360018060a01b0393848616809603620004165760608801519785891680990362000416576080015198858a168a036200041657620000a662000431565b91600590818452644e6f756e7360d81b83850152620000c462000431565b60048152632727aaa760e11b8482015260008054336001600160a01b0319808316821784559d92959392918c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08780a386518981116200040257806001986200012f8a5462000466565b878111620003c9575b508890878311600114620003685788926200035c575b5050600019600383901b1c191690881b1787555b81519889116200034857908a9796959493929160029162000184835462000466565b8b8682116200030e575b50508691858c116001146200029457509980916d0a0a26a94daa4ca94a2969c9cf4b60931b999a9b879262000288575b5050600019600383901b1c191690871b1781555b620001df60155462000466565b9183831162000264575b50505050605d60155560158152207f516d5a69316e3739467157743274544c7743716979366e4c4d36784c47527345815501551684600f541617600f55168260105416176010558160115416176011556012541617601255608052604051613fc49081620004bd82396080518181816112490152611d9e0152f35b6200027e93601586528686209301901c82019101620004a3565b38808080620001e9565b015190503880620001be565b8387528787209b9291908316875b818110620002f55750916d0a0a26a94daa4ca94a2969c9cf4b60931b9a9b9c91848b959410620002db575b505050811b018155620001d2565b015160001960f88460031b161c19169055388080620002cd565b838301518e559c8a019c8f9c50928901928901620002a2565b6200033691858952878a8a20918b8285018a1c840194106200033e575b01871c0190620004a3565b388b6200018e565b925081926200032b565b634e487b7160e01b85526041600452602485fd5b0151905038806200014e565b90848b941691848a528a8a20928a5b8c828210620003b2575050841162000398575b505050811b01875562000162565b015160001960f88460031b161c191690553880806200038a565b8385015186558e9790950194938401930162000377565b620003f1908b8a528a8a20898086018a1c8201928d8710620003f8575b01891c0190620004a3565b3862000138565b92508192620003e6565b634e487b7160e01b86526041600452602486fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b60408051919082016001600160401b038111838210176200041b57604052565b51906001600160a01b03821682036200041657565b90600182811c9216801562000498575b60208310146200048257565b634e487b7160e01b600052602260045260246000fd5b91607f169162000476565b818110620004af575050565b60008155600101620004a356fe6080604052600436101561001257600080fd5b60003560e01c806301b9a3971461035757806301ffc9a714610352578063058df0ab1461034d57806306fdde03146103485780630754617214610343578063081812fc1461033e578063095ea7b3146103395780631249c58b1461033457806318160ddd1461032f5780631e688e101461032a57806320606b701461032557806323b872dd146103205780632f745c591461031b578063303e74df14610316578063313ce5671461031157806341b5d0de1461030c57806342842e0e1461030757806342966c68146103025780634f6ccce7146102fd578063587cde1e146102f85780635ac1e3bb146102f35780635c19a95c146102ee5780635f295a67146102e95780636352211e146102e4578063655932a4146102df578063684931ed146102da5780636fcfff45146102d557806370a08231146102d0578063715018a6146102cb57806376daebe1146102c6578063782d6fe1146102c15780637ecebe00146102bc5780638da5cb5b146102b757806395d89b41146102b2578063a22cb465146102ad578063b4b5ea57146102a8578063b50cbd9f146102a3578063b88d4fde1461029e578063baedc1c414610299578063c1b8e4e114610294578063c3cda5201461028f578063c87b56dd1461028a578063c8fc0c2314610285578063d50b31eb14610280578063e7a324dc1461027b578063e8a3d48514610276578063e9580e9114610271578063e985e9c51461026c578063f0503e8014610267578063f1127ed814610262578063f2fde38b1461025d5763fca3b5aa1461025857600080fd5b611ba6565b611b0c565b611a93565b6119d0565b611990565b611969565b61187c565b611841565b6117b8565b611792565b611722565b611546565b611520565b6113e4565b61137c565b611233565b61119d565b6110ad565b610fcf565b610fa6565b610f69565b610f2d565b610ebd565b610e5e565b610e2f565b610dec565b610dc3565b610d9a565b610d7c565b610d0c565b610cce565b610c15565b610bee565b610b43565b610a6c565b610a2d565b6109ba565b61099e565b610975565b6108be565b610895565b61082e565b610808565b6107ea565b61075b565b610637565b610607565b6105de565b6105aa565b610496565b61040e565b610372565b6001600160a01b0381160361036d57565b600080fd5b3461036d57602036600319011261036d577f6e66ab22238a5471005895947c8f57db923c2a9c9c73180eff80864c21295c1b60206004356103b28161035c565b6000546001600160a01b0391906103cc9083163314611c30565b6103de60ff60125460a81c1615612066565b16806001600160601b0360a01b6011541617601155604051908152a1005b6001600160e01b031981160361036d57565b3461036d57602036600319011261036d57602060043561042d816103fc565b63ffffffff60e01b1663780e9d6360e01b8114908115610453575b506040519015158152f35b6380ac58cd60e01b811491508115610485575b8115610474575b5038610448565b6301ffc9a760e01b1490503861046d565b635b5e139f60e01b81149150610466565b3461036d57602036600319011261036d576004356104b38161035c565b600f546001600160a01b0391908281163303610509576001600160a01b0319169116908117600f556040519081527f3a0b923617f180781f3530e464cb4a8b9393e69f47607e4eb28d61cd87ce968c90602090a1005b60405162461bcd60e51b815260206004820152601e60248201527f53656e646572206973206e6f7420746865206e6f756e646572732044414f00006044820152606490fd5b60005b8381106105615750506000910152565b8181015183820152602001610551565b9060209161058a8151809281855285808601910161054e565b601f01601f1916010190565b9060206105a7928181520190610571565b90565b3461036d57600036600319011261036d576105da6105c66127a6565b604051918291602083526020830190610571565b0390f35b3461036d57600036600319011261036d576010546040516001600160a01b039091168152602090f35b3461036d57602036600319011261036d57602061062560043561285f565b6040516001600160a01b039091168152f35b3461036d57604036600319011261036d576004356106548161035c565b6024356106608161272e565b6001600160a01b03818116908416811461070c5733149081156106fa575b501561068f5761068d91612dfb565b005b60405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608490fd5b61070691503390611d79565b3861067e565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b3461036d57600036600319011261036d576105da6107b660018060a01b0361078881601054163314611e5b565b60145461071c811115806107df575b6107c6575b5060105416601454906107ae82611ebd565b6014556125c5565b6040519081529081906020820190565b6107d89082600f54166107ae82611ebd565b503861079c565b50600a810615610797565b3461036d57600036600319011261036d576020600954604051908152f35b3461036d57600036600319011261036d57602060ff60125460a01c166040519015158152f35b3461036d57600036600319011261036d5760206040517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8668152f35b606090600319011261036d576004356108818161035c565b9060243561088e8161035c565b9060443590565b3461036d5761068d6108a636610869565b916108b96108b484336129f2565b6128f1565b612c81565b3461036d57604036600319011261036d576004356108db8161035c565b602435906108e8816126b6565b82101561091c576001600160a01b031660009081526007602090815260408083209383529281529082902054915191825290f35b60405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b3461036d57600036600319011261036d576011546040516001600160a01b039091168152602090f35b3461036d57600036600319011261036d57602060405160008152f35b3461036d57600080600319360112610a2a576109e060018060a01b038254163314611c30565b6012546109f360ff8260a81c1615612066565b60ff60a81b1916600160a81b176012557f593e31e306c198bef259d839f7c6dc4ff7fc10c07f76fab193a210b03704105f8180a180f35b80fd5b3461036d57610a3b36610869565b60405191602083019383851067ffffffffffffffff861117610a675761068d9460405260008452612957565b611278565b3461036d57602036600319011261036d5760043560018060a01b03610a9681601054163314611e5b565b610a9f8261272e565b610aa98382613080565b610ab283612da7565b16600081815260046020526040812080549193926000198301928311610b3e5783928592558282526003602052604082206001600160601b0360a01b81541690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a47f806be94a2ac8b92d74e99aa8add5a8e54528a01ec914a9e00d201a6480ed98638280a280f35b611ea7565b3461036d57602036600319011261036d57600435600954811015610b945760096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0154604051908152602090f35b60405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608490fd5b3461036d57602036600319011261036d576020610625600435610c108161035c565b613057565b3461036d57602036600319011261036d57600435600081815260036020526040812054610c859290610c51906001600160a01b03161515611ecc565b60018060a01b0360115416818352601360205260408320916040518095819482936315fef0b960e01b845260048401611f8b565b03915afa8015610cc9576105da91600091610ca8575b5060405191829182610596565b610cc3913d8091833e610cbb81836112c6565b810190611f2c565b38610c9b565b611d6d565b3461036d57602036600319011261036d57600435610ceb8161035c565b6001600160a01b03811615610d05575b61068d903361371f565b5033610cfb565b3461036d57600080600319360112610a2a57610d3260018060a01b038254163314611c30565b601254610d4560ff8260b01c16156120a9565b60ff60b01b1916600160b01b176012557ff59561f22794afcfb1e6be5c4733f5449fd167252a96b74bb06d341fb0dac7ed8180a180f35b3461036d57602036600319011261036d57602061062560043561272e565b3461036d57600036600319011261036d57600f546040516001600160a01b039091168152602090f35b3461036d57600036600319011261036d576012546040516001600160a01b039091168152602090f35b3461036d57602036600319011261036d57600435610e098161035c565b60018060a01b0316600052600d602052602063ffffffff60406000205416604051908152f35b3461036d57602036600319011261036d576020610e56600435610e518161035c565b6126b6565b604051908152f35b3461036d57600080600319360112610a2a57805481906001600160a01b03811690610e8a338314611c30565b6001600160a01b03191682557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b3461036d57600080600319360112610a2a57610ee360018060a01b038254163314611c30565b601254610ef660ff8260a01c1615612027565b60ff60a01b1916600160a01b176012557f192417b3f16b1ce69e0c59b0376549666650245ffc05e4b2569089dda8589b668180a180f35b3461036d57604036600319011261036d576020610f58600435610f4f8161035c565b6024359061351c565b6001600160601b0360405191168152f35b3461036d57602036600319011261036d57600435610f868161035c565b60018060a01b0316600052600e6020526020604060002054604051908152f35b3461036d57600036600319011261036d576000546040516001600160a01b039091168152602090f35b3461036d57600080600319360112610a2a576040519080600254610ff281611cc2565b808552916001918083169081156110835750600114611028575b6105da8561101c818703826112c6565b60405191829182610596565b9250600283527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b82841061106b57505050810160200161101c826105da61100c565b80546020858701810191909152909301928101611050565b8695506105da9693506020925061101c94915060ff191682840152151560051b820101929361100c565b3461036d57604036600319011261036d576004356110ca8161035c565b602435801515810361036d576001600160a01b0382169133831461115857816111156111269233600052600660205260406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b604051901515815233907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190602090a3005b60405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606490fd5b3461036d57602036600319011261036d576004356111ba8161035c565b60018060a01b0316600052600d602052602063ffffffff60406000205416600081151560001461122c57506112176001600160601b0391600c8452611203604060002091613442565b63ffffffff16600052602052604060002090565b54821c166001600160601b0360405191168152f35b9050610f58565b3461036d57600036600319011261036d576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610a6757604052565b6080810190811067ffffffffffffffff821117610a6757604052565b90601f8019910116810190811067ffffffffffffffff821117610a6757604052565b60405190610180820182811067ffffffffffffffff821117610a6757604052565b604051906040820182811067ffffffffffffffff821117610a6757604052565b67ffffffffffffffff8111610a6757601f01601f191660200190565b92919261135182611329565b9161135f60405193846112c6565b82948184528183011161036d578281602093846000960137010152565b3461036d57608036600319011261036d576004356113998161035c565b6024356113a58161035c565b6064359167ffffffffffffffff831161036d573660238401121561036d576113da61068d933690602481600401359101611345565b9160443591612957565b3461036d5760208060031936011261036d5767ffffffffffffffff9060043582811161036d573660238201121561036d57611429903690602481600401359101611345565b9160009161144160018060a01b038454163314611c30565b8351918211610a675761145e82611459601554611cc2565b611cfc565b80601f83116001146114985750829382939261148d575b50508160011b916000199060031b1c19161760155580f35b015190503880611475565b90601f198316946114cb60156000527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47590565b9285905b8782106115085750508360019596106114ef575b505050811b0160155580f35b015160001960f88460031b161c191690553880806114e3565b806001859682949686015181550195019301906114cf565b3461036d57600036600319011261036d57602060ff60125460a81c166040519015158152f35b3461036d5760c036600319011261036d576004356115638161035c565b606435906044359060243560ff8416840361036d5760206116b16115856127a6565b805190830120604080517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681860190815260208101939093524691830191909152306060830152906116789061168490836080820103936115ee601f19958681018352826112c6565b519020604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf8882019081526001600160a01b038b166020820152918201899052606082018b905291949161164f8160808401038481018352826112c6565b5190206040519384918883019687909160429261190160f01b8352600283015260228201520190565b039081018352826112c6565b5190206040805191825260ff90971660208201526084359681019690965260a43560608701526080860190565b856000968792838052039060015afa15610cc95761171a61171f936117128651936116e560018060a01b0386161515613305565b6001600160a01b0385166000908152600e602052604090209081549161170a83611ebd565b905514613370565b4211156133d7565b61371f565b80f35b3461036d57602036600319011261036d57600435600081815260036020526040812054610c85929061175e906001600160a01b03161515611ecc565b60018060a01b03601154168183526013602052604083209160405180958194829363012b674960e31b845260048401611f8b565b3461036d57600036600319011261036d57602060ff60125460b01c166040519015158152f35b3461036d57602036600319011261036d577fb3025222d01ce9a26c7f9d52bc3bfd0352366bd90a793c273fbfe1c81e0e288e60206004356117f88161035c565b6000546001600160a01b03906118119082163314611c30565b6012549161182560ff8460b01c16156120a9565b1680916001600160601b0360a01b1617601255604051908152a1005b3461036d57600036600319011261036d5760206040517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf8152f35b3461036d57600080600319360112610a2a576040519060209066697066733a2f2f60c81b828401528091601554916118b383611cc2565b9260019081811690811561193d57506001146118e1575b6105da8661101c818803601f1981018352826112c6565b9091929350601582527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec4755b8483106119295750505050810160270161101c826105da386118ca565b80548684016027015291830191810161190c565b90508695506105da9693506027925061101c94915060ff191682840152801515028201019293386118ca565b3461036d57602036600319011261036d576020610f5860043561198b8161035c565b612f98565b3461036d57604036600319011261036d5760206119c46004356119b28161035c565b602435906119bf8261035c565b611d79565b6040519015158152f35b565b3461036d57602036600319011261036d5760043560009081526013602090815260409182902080546001820154600290920154845165ffffffffffff8084168252603084811c821696830196909652606084811c821697830197909752609084811c82168884015260c094851c8216608084015281861660a084015285871c8216858401529685901c811660e08301529584901c86166101008201529290911c841661012083015283811661014083015290911c90911661016082015261018090f35b3461036d57604036600319011261036d57600435611ab08161035c565b63ffffffff602435818116810361036d57611af96001600160601b039160409460018060a01b0316600052600c602052846000209063ffffffff16600052602052604060002090565b548351928116835260201c166020820152f35b3461036d57602036600319011261036d57600435611b298161035c565b6000546001600160a01b0390611b429082163314611c30565b811615611b525761068d90611c7b565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b3461036d57602036600319011261036d577fad0f299ec81a386c98df0ac27dae11dd020ed1b56963c53a7292e7a3a314539a6020600435611be68161035c565b6000546001600160a01b039190611c009083163314611c30565b611c1260ff60125460a01c1615612027565b16806001600160601b0360a01b6010541617601055604051908152a1005b15611c3757565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3565b90600182811c92168015611cf2575b6020831014611cdc57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611cd1565b601f8111611d08575050565b600090601582527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475906020601f850160051c83019410611d63575b601f0160051c01915b828110611d5857505050565b818155600101611d4c565b9092508290611d43565b6040513d6000823e3d90fd5b60405163c455279160e01b81526001600160a01b0382811660048301526020826024817f000000000000000000000000000000000000000000000000000000000000000085165afa918215610cc957600092611e1f575b50808416911614611e18576001600160a01b031660009081526006602052604090206105a791611e11919060018060a01b0316600052602052604060002090565b5460ff1690565b5050600190565b90916020823d8211611e53575b81611e39602093836112c6565b81010312610a2a575051611e4c8161035c565b9038611dd0565b3d9150611e2c565b15611e6257565b60405162461bcd60e51b815260206004820152601860248201527f53656e646572206973206e6f7420746865206d696e74657200000000000000006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b6000198114610b3e5760010190565b15611ed357565b60405162461bcd60e51b815260206004820152602b60248201527f4e6f756e73546f6b656e3a2055524920717565727920666f72206e6f6e65786960448201526a39ba32b73a103a37b5b2b760a91b6064820152608490fd5b60208183031261036d5780519067ffffffffffffffff821161036d570181601f8201121561036d578051611f5f81611329565b92611f6d60405194856112c6565b8184526020828401011161036d576105a7916020808501910161054e565b908152815465ffffffffffff8082166020840152603082811c82166040850152606083811c831681860152609084811c8416608087015260c094851c841660a087015260018701548085168688015280841c851660e08801529182901c841661010087015281901c831661012086015290921c8116610140840152600290930154808416610160840152901c9091166101808201526101a00190565b1561202e57565b60405162461bcd60e51b815260206004820152601060248201526f135a5b9d195c881a5cc81b1bd8dad95960821b6044820152606490fd5b1561206d57565b60405162461bcd60e51b815260206004820152601460248201527311195cd8dc9a5c1d1bdc881a5cc81b1bd8dad95960621b6044820152606490fd5b156120b057565b60405162461bcd60e51b815260206004820152601060248201526f14d95959195c881a5cc81b1bd8dad95960821b6044820152606490fd5b519065ffffffffffff8216820361036d57565b908161018091031261036d5761210f6112e8565b90612119816120e8565b8252612127602082016120e8565b6020830152612138604082016120e8565b6040830152612149606082016120e8565b606083015261215a608082016120e8565b608083015261216b60a082016120e8565b60a083015261217c60c082016120e8565b60c083015261218d60e082016120e8565b60e08301526101006121a08183016120e8565b908301526101206121b28183016120e8565b908301526101406121c48183016120e8565b908301526121d66101608092016120e8565b9082015290565b906123d461016060026119ce946122176121fd865165ffffffffffff1690565b825465ffffffffffff191665ffffffffffff909116178255565b61225461222d602087015165ffffffffffff1690565b82546bffffffffffff000000000000191660309190911b65ffffffffffff60301b16178255565b61228e61226a604087015165ffffffffffff1690565b825465ffffffffffff60601b191660609190911b65ffffffffffff60601b16178255565b6122c86122a4606087015165ffffffffffff1690565b825465ffffffffffff60901b191660909190911b65ffffffffffff60901b16178255565b6123026122de608087015165ffffffffffff1690565b825465ffffffffffff60c01b191660c09190911b65ffffffffffff60c01b16178255565b6123946001820161231f6121fd60a089015165ffffffffffff1690565b61233561222d60c089015165ffffffffffff1690565b61234b61226a60e089015165ffffffffffff1690565b6123626122a461010089015165ffffffffffff1690565b61012087015165ffffffffffff16815465ffffffffffff60c01b191660c09190911b65ffffffffffff60c01b16179055565b01926123c76123ad61014083015165ffffffffffff1690565b855465ffffffffffff191665ffffffffffff909116178555565b015165ffffffffffff1690565b65ffffffffffff60301b82549160301b169065ffffffffffff60301b1916179055565b906119ce6124036112e8565b835465ffffffffffff8082168352603082901c81166020840152606082811c82166040850152609083901c82169084015260c09190911c8116608083015290936002906124b983600183015461246682821660a08b019065ffffffffffff169052565b65ffffffffffff603082901c83161660c08a015265ffffffffffff606082901c83161660e08a015265ffffffffffff609082901c8316166101008a015260c01c1661012088019065ffffffffffff169052565b015465ffffffffffff8282161661014086015260301c1661016084019065ffffffffffff169052565b815165ffffffffffff168152610180810192916119ce919060208181015165ffffffffffff169083015260408181015165ffffffffffff169083015260608181015165ffffffffffff169083015260808181015165ffffffffffff169083015260a08181015165ffffffffffff169083015260c08181015165ffffffffffff169083015260e08181015165ffffffffffff16908301526101008181015165ffffffffffff16908301526101208181015165ffffffffffff16908301526101408181015165ffffffffffff16908301526101609081015165ffffffffffff16910152565b60125460115460405163422e2e9960e01b8152600481018590526001600160a01b0391821660248201529161018091829184916044918391165afa928315610cc9576126778561266381967fdd0537b06fdb47e1c62a0778d1d9887f54161c33085887d267d7a1fba37f801d9661268396600092612689575b505061265e612657846000526013602052604060002090565b91826121dd565b6123f7565b6000549093906001600160a01b0316612acb565b604051918291826124e2565b0390a290565b6126a89250803d106126af575b6126a081836112c6565b8101906120fb565b388061263e565b503d612696565b6001600160a01b031680156126d657600052600460205260406000205490565b60405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608490fd5b6000908152600360205260409020546001600160a01b0316801561274f5790565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608490fd5b604051906000826001918254926127bc84611cc2565b8084529381811690811561283d57506001146127e0575b506119ce925003836112c6565b600081815291507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b84831061282257506119ce9350508101602001386127d3565b81935090816020925483858a01015201910190918592612809565b9050602092506119ce94915060ff191682840152151560051b820101386127d3565b6000818152600360205260409020546001600160a01b031615612897576000908152600560205260409020546001600160a01b031690565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b156128f857565b60405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b6064820152608490fd5b9061297b93929161296b6108b484336129f2565b612976838383612c81565b612ed5565b1561298257565b60405162461bcd60e51b81528061299b6004820161299f565b0390fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b6000828152600360205260409020546001600160a01b031615612a6357612a188261272e565b6001600160a01b038281168282168114949091908515612a4b575b5050508215612a4157505090565b6105a79250611d79565b612a58919293955061285f565b161491388080612a33565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b9060018201809211610b3e57565b6001600160a01b03828116929091908315612bd6576000858152600360205260409020546001600160a01b0316612b915780612b0a86612b619361318e565b6001600160a01b0381166000908152600460205260409020612b2c8154612abd565b9055612b42866000526003602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83826000838180a4600080a4565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b600019810191908211610b3e57565b15612c3057565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b90612c8b8361272e565b6001600160a01b038381169290918216839003612d5057612ce5612d2992821694612cb7861515612c29565b612cc28784836131d2565b612ccb87612da7565b6001600160a01b0316600090815260046020526040902090565b612cef8154612c1a565b90556001600160a01b0381166000908152600460205260409020612d138154612abd565b9055612b42856000526003602052604060002090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608490fd5b600081815260056020526040812080546001600160a01b03191690556001600160a01b03612dd48361272e565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258280a4565b600082815260056020526040902080546001600160a01b0319166001600160a01b0383161790556001600160a01b0380612e348461272e565b169116907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4565b9081602091031261036d57516105a7816103fc565b6001600160a01b0391821681529116602082015260408101919091526080606082018190526105a792910190610571565b3d15612ed0573d90612eb682611329565b91612ec460405193846112c6565b82523d6000602084013e565b606090565b92909190823b15612f8f57612f08926020926000604051809681958294630a85bd0160e11b9a8b85523360048601612e74565b03926001600160a01b03165af160009181612f5f575b50612f5157612f2b612ea5565b80519081612f4c5760405162461bcd60e51b81528061299b6004820161299f565b602001fd5b6001600160e01b0319161490565b612f8191925060203d8111612f88575b612f7981836112c6565b810190612e5f565b9038612f1e565b503d612f6f565b50505050600190565b612fa96001600160601b03916126b6565b613014604051612fb88161128e565b603d81527f455243373231436865636b706f696e7461626c653a3a766f746573546f44656c60208201527f65676174653a20616d6f756e74206578636565647320393620626974730000006040820152600160601b8310613d22565b1690565b60008052600b6020527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f76546001600160a01b0316806105a75750600090565b6001600160a01b038181166000908152600b6020526040902054168061307b575090565b905090565b6001600160a01b038116806130b757506130a990610c10836130a46119ce95613e4e565b613eb0565b6130b1613018565b9061398c565b906130c1816126b6565b6000198101908111610b3e576119ce936130a993613135610c1093600092848452600860205260408420549082820361313b575b50508261310c856000526008602052604060002090565b556001600160a01b03861660009081526007602052604090205b90600052602052604060002090565b55613eb0565b8452600760205260408420828552602052613186604085205480613175846131268c60018060a01b03166000526007602052604060002090565b556000526008602052604060002090565b5538806130f5565b6119ce9161319b81613e4e565b6001600160a01b0382166131c3576131b290613eb0565b6130b16131bd613018565b91613057565b6131cd9082613e16565b6131b2565b6001600160a01b038181169390846132285791816119ce956130b1946131fa6131bd95613e4e565b86168061320c575050610c1090613eb0565b03613218575b50613057565b6132229085613e16565b38613212565b8084168503613244575b916131bd916119ce956130b1946131fa565b9161324e816126b6565b600019810192908311610b3e576119ce956130b1946131bd946132b6600091858352600860205260408320548181036132c3575b5082613298876000526008602052604060002090565b556001600160a01b0387166000908152600760205260409020613126565b5592945095509150613232565b8584526007602052604084208285526020526132fe604085205480613175846131268d60018060a01b03166000526007602052604060002090565b5538613282565b1561330c57565b60405162461bcd60e51b815260206004820152603660248201527f455243373231436865636b706f696e7461626c653a3a64656c656761746542796044820152755369673a20696e76616c6964207369676e617475726560501b6064820152608490fd5b1561337757565b60405162461bcd60e51b815260206004820152603260248201527f455243373231436865636b706f696e7461626c653a3a64656c656761746542796044820152715369673a20696e76616c6964206e6f6e636560701b6064820152608490fd5b156133de57565b60405162461bcd60e51b815260206004820152603660248201527f455243373231436865636b706f696e7461626c653a3a64656c6567617465427960448201527514da59ce881cda59db985d1d5c9948195e1c1a5c995960521b6064820152608490fd5b63ffffffff9081166000190191908211610b3e57565b63ffffffff9182169082160391908211610b3e57565b1561347557565b60405162461bcd60e51b815260206004820152603760248201527f455243373231436865636b706f696e7461626c653a3a6765745072696f72566f60448201527f7465733a206e6f74207965742064657465726d696e65640000000000000000006064820152608490fd5b906040516040810181811067ffffffffffffffff821117610a675760405260206001600160601b0382945463ffffffff81168452821c16910152565b61352743831061346e565b6001600160a01b0381166000908152600d6020526040902061354e905b5463ffffffff1690565b9163ffffffff808416156136ea578161359461358b6135446135828760018060a01b0316600052600c602052604060002090565b61120389613442565b63ffffffff1690565b11156136f357816135cf61358b6135446135c08760018060a01b0316600052600c602052604060002090565b60008052602052604060002090565b116136ea57906135e0600094613442565b82851683821611613633575050506001600160a01b03166000908152600c602052604090206105a791613623915b9063ffffffff16600052602052604060002090565b5460201c6001600160601b031690565b6136586136526136468784979697613458565b60011c637fffffff1690565b82613458565b94859061368361367e8861360e8860018060a01b0316600052600c602052604060002090565b6134e0565b9661369561358b895163ffffffff1690565b8086036136b857505050505050505060206105a79101516001600160601b031690565b8596979850949091929394106000146136d6575050935b91906135e0565b909592506136e49150613442565b906136cf565b50505050600090565b50506001600160a01b03166000908152600c602052604090206105a79161362391611203905b91613442565b9061372982613057565b6001600160a01b038381166000818152600b6020526040812080546001600160a01b031916868516179055949092906137909083831694859487169485917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f8a80a4612f98565b9282811415806138c3575b6137a8575b505050505050565b613846575b506137bb575b8080806137a0565b6001600160a01b0382166000908152600d6020526040902061383493906137e190613544565b9063ffffffff82161561383c575061382e61381d6136236138148660018060a01b0316600052600c602052604060002090565b61120385613442565b925b613827613934565b9084613d89565b92613b2f565b3880806137b3565b61382e909261381f565b6001600160a01b0381166000908152600d602052604090206138b6919061386c90613544565b63ffffffff8116156138bc576001600160a01b0382166000908152600c602052604090206138a290613623905b61120384613442565b905b61382e6138af6138d5565b8784613dd8565b386137ad565b86906138a4565b506001600160601b038416151561379b565b604051906138e28261128e565b603782527f617465733a20616d6f756e7420756e646572666c6f77730000000000000000006040837f455243373231436865636b706f696e7461626c653a3a5f6d6f766544656c656760208201520152565b604051906139418261128e565b6036825275617465733a20616d6f756e74206f766572666c6f777360501b6040837f455243373231436865636b706f696e7461626c653a3a5f6d6f766544656c656760208201520152565b6001600160a01b03828116919081168083141580613ab5575b6139b0575b50505050565b613a3c575b506139c3575b8080806139aa565b6001600160a01b0381166000908152600d60205260409020613a3091906139e990613544565b600063ffffffff821615613a3657506001600160a01b0382166000908152600c60205260409020613a1d9061362390613899565b905b61382e613a2a613934565b83613d64565b386139bb565b90613a1f565b6001600160a01b0381166000908152600d60205260409020613aa99190613a6290613544565b600063ffffffff821615613aaf57506001600160a01b0382166000908152600c60205260409020613a969061362390613899565b905b61382e613aa36138d5565b83613db0565b386139b5565b90613a98565b5060016139a5565b6001600160601b0360206119ce93613aec63ffffffff825116859063ffffffff1663ffffffff19825416179055565b015182546fffffffffffffffffffffffff000000001916911660201b640100000000600160801b0316179055565b90600163ffffffff80931601918211610b3e57565b7fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72492939182613bc6604051613b63816112aa565b604481527f455243373231436865636b706f696e7461626c653a3a5f77726974654368656360208201527f6b706f696e743a20626c6f636b206e756d6265722065786365656473203332206040820152636269747360e01b606082015243613d4e565b63ffffffff80841615159081613ce9575b5015613c5757506001600160a01b0383166000908152600c60205260409020613c2f92613c079161120390613719565b90640100000000600160801b0382549160201b1690640100000000600160801b031916179055565b604080516001600160601b0395861681529290941660208301526001600160a01b03169290a2565b613cb7915091613cb2613ce493613c7b613c6f611309565b63ffffffff9092168252565b6001600160601b03871660208201526001600160a01b0386166000908152600c60205260409020613cad90849061360e565b613abd565b613b1a565b6001600160a01b0383166000908152600d602052604090209063ffffffff1663ffffffff19825416179055565b613c2f565b9050613d16613544613d0d8760018060a01b0316600052600c602052604060002090565b61120387613442565b81169082161438613bd7565b15613d2a5750565b60405162461bcd60e51b81526020600482015290819061299b906024830190610571565b61301463ffffffff926401000000008310613d22565b6001600160601b03809116916001830192828411610b3e576105a79284161015613d22565b90916001600160601b03808093169316830192828411610b3e576105a79284161015613d22565b90613dca6001600160601b03809316918260011115613d22565b60001901908111610b3e5790565b9190613df56001600160601b038080951692169282841115613d22565b03908111610b3e5790565b634e487b7160e01b600052603260045260246000fd5b604090613e22816126b6565b9260009160018060a01b0316825260076020528282208483526020528083832055815260086020522055565b60095481600052600a6020528060406000205568010000000000000000811015610a67576001810180600955811015613eab5760096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b613e00565b6009805460001992838201828111610b3e57600092828452600a602052806040852054921015613eab578484527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7ae928382015491831015613eab578492613f4c613f5d9388865280837f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155600052600a602052604060002090565b55600052600a602052604060002090565b558254938415613f7a5784019380851015613eab57838352015555565b634e487b7160e01b83526031600452602483fdfea264697066735822122049782f858a09b7523ab2835e3837deaf45bc8c9d7c6ea48b7e18107f6f3d3f3e64736f6c63430008140033";

type NounsTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NounsTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NounsToken__factory extends ContractFactory {
  constructor(...args: NounsTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _noundersDAO: PromiseOrValue<string>,
    _minter: PromiseOrValue<string>,
    _descriptor: PromiseOrValue<string>,
    _seeder: PromiseOrValue<string>,
    _proxyRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NounsToken> {
    return super.deploy(
      _noundersDAO,
      _minter,
      _descriptor,
      _seeder,
      _proxyRegistry,
      overrides || {}
    ) as Promise<NounsToken>;
  }
  override getDeployTransaction(
    _noundersDAO: PromiseOrValue<string>,
    _minter: PromiseOrValue<string>,
    _descriptor: PromiseOrValue<string>,
    _seeder: PromiseOrValue<string>,
    _proxyRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _noundersDAO,
      _minter,
      _descriptor,
      _seeder,
      _proxyRegistry,
      overrides || {}
    );
  }
  override attach(address: string): NounsToken {
    return super.attach(address) as NounsToken;
  }
  override connect(signer: Signer): NounsToken__factory {
    return super.connect(signer) as NounsToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NounsTokenInterface {
    return new utils.Interface(_abi) as NounsTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NounsToken {
    return new Contract(address, _abi, signerOrProvider) as NounsToken;
  }
}
