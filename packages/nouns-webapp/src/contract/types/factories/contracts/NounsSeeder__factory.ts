/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NounsSeeder,
  NounsSeederInterface,
} from "../../contracts/NounsSeeder";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nounId",
        type: "uint256",
      },
      {
        internalType: "contract INounsDescriptorMinimal",
        name: "descriptor",
        type: "address",
      },
    ],
    name: "generateSeed",
    outputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "backDecoration",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "backgroundDecoration",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "special",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "leftHand",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "back",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "clothe",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "choker",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "ear",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "hair",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "hat",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "headphone",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576108ae908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c63422e2e991461002857600080fd5b3461059057604036600319011261059057602435906001600160a01b0382168203610590576101608161005c60009361080f565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201528261012082015282610140820152015260001943014381116107f957604051916020830191408252600435604084015260408352606083019183831067ffffffffffffffff8411176107e3576040839052835190206308a6381560e31b8352916020816004816001600160a01b0386165afa93841561059d576000946107b2575b50506040516304d9cc7f60e41b8152906020826004816001600160a01b0385165afa91821561059d5760009261077e575b506040516347903db560e11b8152936020856004816001600160a01b0386165afa94851561059d5760009561074a575b5060405163fe0ee37b60e01b8152936020856004816001600160a01b0387165afa94851561059d57600095610716575b506040516328f6d16560e01b8152936020856004816001600160a01b0388165afa94851561059d576000956106e2575b5060405163cd8e74f760e01b8152916020836004816001600160a01b0389165afa92831561059d576000936106ae575b50604051632b60960160e01b8152916020836004816001600160a01b038a165afa92831561059d5760009361067a575b50604051637efa6bd560e01b8152916020836004816001600160a01b038b165afa92831561059d57600093610646575b5060405163039e65fd60e41b8152916020836004816001600160a01b038c165afa92831561059d57600093610612575b50604051635c1f47e760e11b8152956020876004816001600160a01b038d165afa96871561059d576000976105de575b506040516307b3c0f360e21b8152976020896004816001600160a01b038e165afa98891561059d576000996105a9575b50604051630cbdad8760e21b815298996020908a9060049082906001600160a01b03165afa98891561059d57600099610564575b506103399065ffffffffffff851661086e565b65ffffffffffff169b8360301c65ffffffffffff16906103589161086e565b65ffffffffffff169a8360601c65ffffffffffff16906103779161086e565b65ffffffffffff16998360901c65ffffffffffff16906103969161086e565b65ffffffffffff16918360c01c65ffffffffffff16906103b59161086e565b65ffffffffffff169260f01c906103cb9161086e565b65ffffffffffff16926103dd9061084e565b65ffffffffffff16936103ef9061084e565b65ffffffffffff16946104019061084e565b65ffffffffffff16956104139061084e565b65ffffffffffff16966104259061084e565b65ffffffffffff16976104379061084e565b65ffffffffffff16986040519a61044d8c61080f565b8c8c5260208c015260408b015260608a0152608089015260a088015260c087015260e0860152610100850152610120840152610140830152610160820152604051918252602081015165ffffffffffff166020830152604081015165ffffffffffff166040830152606081015165ffffffffffff166060830152608081015165ffffffffffff16608083015260a081015165ffffffffffff1660a083015260c081015165ffffffffffff1660c083015260e081015165ffffffffffff1660e083015261010081015165ffffffffffff1661010083015261012081015165ffffffffffff1661012083015261014081015165ffffffffffff16610140830152610160015165ffffffffffff1661016082015261018090f35b9098506020813d602011610595575b816105806020938361082c565b8101031261059057519738610326565b600080fd5b3d9150610573565b6040513d6000823e3d90fd5b98506020893d6020116105d6575b816105c46020938361082c565b810103126105905797519760206102f2565b3d91506105b7565b9096506020813d60201161060a575b816105fa6020938361082c565b81010312610590575195386102c2565b3d91506105ed565b9092506020813d60201161063e575b8161062e6020938361082c565b8101031261059057519138610292565b3d9150610621565b9092506020813d602011610672575b816106626020938361082c565b8101031261059057519138610262565b3d9150610655565b9092506020813d6020116106a6575b816106966020938361082c565b8101031261059057519138610232565b3d9150610689565b9092506020813d6020116106da575b816106ca6020938361082c565b8101031261059057519138610202565b3d91506106bd565b9094506020813d60201161070e575b816106fe6020938361082c565b81010312610590575193386101d2565b3d91506106f1565b9094506020813d602011610742575b816107326020938361082c565b81010312610590575193386101a2565b3d9150610725565b9094506020813d602011610776575b816107666020938361082c565b8101031261059057519338610172565b3d9150610759565b9091506020813d6020116107aa575b8161079a6020938361082c565b8101031261059057519038610142565b3d915061078d565b602080929395503d83116107dc575b6107cb818561082c565b810103126105905751913880610111565b503d6107c1565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b610180810190811067ffffffffffffffff8211176107e357604052565b90601f8019910116810190811067ffffffffffffffff8211176107e357604052565b1561085857600090565b634e487b7160e01b600052601260045260246000fd5b811561085857069056fea2646970667358221220184271c336170271e7162226482349ad64a60bcbdb9f54d28e461ad20da3100164736f6c63430008140033";

type NounsSeederConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NounsSeederConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NounsSeeder__factory extends ContractFactory {
  constructor(...args: NounsSeederConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NounsSeeder> {
    return super.deploy(overrides || {}) as Promise<NounsSeeder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NounsSeeder {
    return super.attach(address) as NounsSeeder;
  }
  override connect(signer: Signer): NounsSeeder__factory {
    return super.connect(signer) as NounsSeeder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NounsSeederInterface {
    return new utils.Interface(_abi) as NounsSeederInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NounsSeeder {
    return new Contract(address, _abi, signerOrProvider) as NounsSeeder;
  }
}
