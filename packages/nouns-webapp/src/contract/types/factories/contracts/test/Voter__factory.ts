/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Voter, VoterInterface } from "../../../contracts/test/Voter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract NounsDAOLogicV2",
        name: "dao_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "proposalId_",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support_",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "useReason_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dao",
    outputs: [
      {
        internalType: "contract NounsDAOLogicV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "support",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100b057601f6102f738819003918201601f19168301916001600160401b038311848410176100b5578084926080946040528339810103126100b05780516001600160a01b03811691908290036100b057602081015160408201519160ff83168093036100b05760600151928315158094036100b05760018060a01b0319600054161760005560015561ff006002549260081b169161ffff1916171760025560405161022b90816100cc8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600436101561001457600080fd5b60009182803560e01c9182630fb524ce146100b95750508063119f8747146100985780632dfca4451461007a57634162169f1461005057600080fd5b34610076578160031936011261007657905490516001600160a01b039091168152602090f35b5080fd5b50346100765781600319360112610076576020906001549051908152f35b503461007657816003193601126100765760209060ff600254169051908152f35b838291346101c757826003193601126101c75760025460ff8160081c1660001461016f57505060018060a01b038254169060015460ff60025416833b1561016b5760a4859283855196879485936364c0599560e01b85526004850152602484015260606044840152600b60648401526a39b7b6b2903932b0b9b7b760a91b60848401525af1908115610162575061014f57505080f35b610158906101cb565b61015f5780f35b80fd5b513d84823e3d90fd5b8480fd5b60018060a09593951b03825416600154813b156101c3578360449260ff8895869463227d647b60e11b865260048601521660248401525af190811561016257506101b7575080f35b6101c0906101cb565b80f35b8380fd5b5050fd5b67ffffffffffffffff81116101df57604052565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220f6cc2fb9747365f4a28b65b300810f420138f9b2748a3c116e6961a6f7946c0f64736f6c63430008140033";

type VoterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VoterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Voter__factory extends ContractFactory {
  constructor(...args: VoterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    dao_: PromiseOrValue<string>,
    proposalId_: PromiseOrValue<BigNumberish>,
    support_: PromiseOrValue<BigNumberish>,
    useReason_: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Voter> {
    return super.deploy(
      dao_,
      proposalId_,
      support_,
      useReason_,
      overrides || {}
    ) as Promise<Voter>;
  }
  override getDeployTransaction(
    dao_: PromiseOrValue<string>,
    proposalId_: PromiseOrValue<BigNumberish>,
    support_: PromiseOrValue<BigNumberish>,
    useReason_: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      dao_,
      proposalId_,
      support_,
      useReason_,
      overrides || {}
    );
  }
  override attach(address: string): Voter {
    return super.attach(address) as Voter;
  }
  override connect(signer: Signer): Voter__factory {
    return super.connect(signer) as Voter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VoterInterface {
    return new utils.Interface(_abi) as VoterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Voter {
    return new Contract(address, _abi, signerOrProvider) as Voter;
  }
}
