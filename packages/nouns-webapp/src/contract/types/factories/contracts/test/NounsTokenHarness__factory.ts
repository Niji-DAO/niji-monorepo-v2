/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NounsTokenHarness,
  NounsTokenHarnessInterface,
} from "../../../contracts/test/NounsTokenHarness";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "noundersDAO",
        type: "address",
      },
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        internalType: "contract INounsDescriptorMinimal",
        name: "descriptor",
        type: "address",
      },
      {
        internalType: "contract INounsSeeder",
        name: "seeder",
        type: "address",
      },
      {
        internalType: "contract IProxyRegistry",
        name: "proxyRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "DescriptorLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract INounsDescriptorMinimal",
        name: "descriptor",
        type: "address",
      },
    ],
    name: "DescriptorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "MinterLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "MinterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NounBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "backDecoration",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "backgroundDecoration",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "special",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "leftHand",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "back",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "clothe",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "choker",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "ear",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "hair",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "hat",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "headphone",
            type: "uint48",
          },
        ],
        indexed: false,
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "NounCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "noundersDAO",
        type: "address",
      },
    ],
    name: "NoundersDAOUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "SeederLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract INounsSeeder",
        name: "seeder",
        type: "address",
      },
    ],
    name: "SeederUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DELEGATION_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nounId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "fromBlock",
        type: "uint32",
      },
      {
        internalType: "uint96",
        name: "votes",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentNounId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "dataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegator",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "descriptor",
    outputs: [
      {
        internalType: "contract INounsDescriptorMinimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCurrentVotes",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPriorVotes",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isDescriptorLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMinterLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isSeederLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockDescriptor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockSeeder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintMany",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "background",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "backDecoration",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "backgroundDecoration",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "special",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "back",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "clothe",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "choker",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "ear",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "hair",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "hat",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "headphone",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "leftHand",
        type: "uint48",
      },
    ],
    name: "mintSeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "noundersDAO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyRegistry",
    outputs: [
      {
        internalType: "contract IProxyRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seeder",
    outputs: [
      {
        internalType: "contract INounsSeeder",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "seeds",
    outputs: [
      {
        internalType: "uint48",
        name: "background",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "backDecoration",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "backgroundDecoration",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "special",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "leftHand",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "back",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "clothe",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "choker",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "ear",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "hair",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "hat",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "headphone",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newContractURIHash",
        type: "string",
      },
    ],
    name: "setContractURIHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INounsDescriptorMinimal",
        name: "_descriptor",
        type: "address",
      },
    ],
    name: "setDescriptor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_noundersDAO",
        type: "address",
      },
    ],
    name: "setNoundersDAO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INounsSeeder",
        name: "_seeder",
        type: "address",
      },
    ],
    name: "setSeeder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegator",
        type: "address",
      },
    ],
    name: "votesToDelegate",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03462000416576001600160401b0390601f19601f6200474c38819003828101841685019190868311868410176200041b5780869260a0946040528339810103126200041657620000518362000451565b906020946200006286860162000451565b9060408601519360018060a01b0393848616809603620004165760608801519785891680990362000416576080015198858a168a036200041657620000a662000431565b91600590818452644e6f756e7360d81b83850152620000c462000431565b60048152632727aaa760e11b8482015260008054336001600160a01b0319808316821784559d92959392918c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08780a386518981116200040257806001986200012f8a5462000466565b878111620003c9575b508890878311600114620003685788926200035c575b5050600019600383901b1c191690881b1787555b81519889116200034857908a9796959493929160029162000184835462000466565b8b8682116200030e575b50508691858c116001146200029457509980916d0a0a26a94daa4ca94a2969c9cf4b60931b999a9b879262000288575b5050600019600383901b1c191690871b1781555b620001df60155462000466565b9183831162000264575b50505050605d60155560158152207f516d5a69316e3739467157743274544c7743716979366e4c4d36784c47527345815501551684600f541617600f5516826010541617601055816011541617601155601254161760125560805260405161428f9081620004bd823960805181818161130f0152611f590152f35b6200027e93601586528686209301901c82019101620004a3565b38808080620001e9565b015190503880620001be565b8387528787209b9291908316875b818110620002f55750916d0a0a26a94daa4ca94a2969c9cf4b60931b9a9b9c91848b959410620002db575b505050811b018155620001d2565b015160001960f88460031b161c19169055388080620002cd565b838301518e559c8a019c8f9c50928901928901620002a2565b6200033691858952878a8a20918b8285018a1c840194106200033e575b01871c0190620004a3565b388b6200018e565b925081926200032b565b634e487b7160e01b85526041600452602485fd5b0151905038806200014e565b90848b941691848a528a8a20928a5b8c828210620003b2575050841162000398575b505050811b01875562000162565b015160001960f88460031b161c191690553880806200038a565b8385015186558e9790950194938401930162000377565b620003f1908b8a528a8a20898086018a1c8201928d8710620003f8575b01891c0190620004a3565b3862000138565b92508192620003e6565b634e487b7160e01b86526041600452602486fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b60408051919082016001600160401b038111838210176200041b57604052565b51906001600160a01b03821682036200041657565b90600182811c9216801562000498575b60208310146200048257565b634e487b7160e01b600052602260045260246000fd5b91607f169162000476565b818110620004af575050565b60008155600101620004a356fe6080604052600436101561001257600080fd5b60003560e01c806301b9a3971461039757806301ffc9a714610392578063058df0ab1461038d57806306fdde03146103885780630754617214610383578063081812fc1461037e578063095ea7b3146103795780631249c58b1461037457806318160ddd1461036f5780631e688e101461036a57806320606b701461036557806323b872dd146103605780632eec190a1461035b5780632f745c5914610356578063303e74df14610351578063313ce5671461034c57806341b5d0de1461034757806342842e0e1461034257806342966c681461033d5780634f6ccce714610338578063587cde1e146103335780635ac1e3bb1461032e5780635c19a95c146103295780635e830656146103245780635f295a671461031f5780636352211e1461031a578063655932a414610315578063684931ed146103105780636fcfff451461030b57806370a0823114610306578063715018a614610301578063755edd17146102fc57806376daebe1146102f7578063782d6fe1146102f25780637ecebe00146102ed5780638da5cb5b146102e857806395d89b41146102e3578063a22cb465146102de578063b4b5ea57146102d9578063b50cbd9f146102d4578063b88d4fde146102cf578063baedc1c4146102ca578063c1b8e4e1146102c5578063c3cda520146102c0578063c87b56dd146102bb578063c8fc0c23146102b6578063c93133ca146102b1578063d50b31eb146102ac578063e7a324dc146102a7578063e8a3d485146102a2578063e9580e911461029d578063e985e9c514610298578063f0503e8014610293578063f1127ed81461028e578063f2fde38b146102895763fca3b5aa1461028457600080fd5b611d61565b611cc7565b611c4e565b611b8b565b611b4d565b611b26565b611a39565b6119fe565b611975565b6118c3565b611863565b6117f3565b611617565b6115f1565b6114b5565b61144d565b6112f9565b611263565b611173565b611095565b61106c565b61102f565b610ff3565b610f83565b610f5e565b610eff565b610ed0565b610e8d565b610e64565b610e3b565b610e1d565b610dad565b610d6a565b610d2c565b610c73565b610c4c565b610ba1565b610aca565b610a8b565b610a18565b6109fc565b6109d3565b61091c565b6108fe565b6108d5565b61086e565b610848565b61082a565b61079b565b610677565b610647565b61061e565b6105ea565b6104d6565b61044e565b6103b2565b6001600160a01b038116036103ad57565b600080fd5b346103ad5760203660031901126103ad577f6e66ab22238a5471005895947c8f57db923c2a9c9c73180eff80864c21295c1b60206004356103f28161039c565b6000546001600160a01b03919061040c9083163314611deb565b61041e60ff60125460a81c1615612221565b16806001600160601b0360a01b6011541617601155604051908152a1005b6001600160e01b03198116036103ad57565b346103ad5760203660031901126103ad57602060043561046d8161043c565b63ffffffff60e01b1663780e9d6360e01b8114908115610493575b506040519015158152f35b6380ac58cd60e01b8114915081156104c5575b81156104b4575b5038610488565b6301ffc9a760e01b149050386104ad565b635b5e139f60e01b811491506104a6565b346103ad5760203660031901126103ad576004356104f38161039c565b600f546001600160a01b0391908281163303610549576001600160a01b0319169116908117600f556040519081527f3a0b923617f180781f3530e464cb4a8b9393e69f47607e4eb28d61cd87ce968c90602090a1005b60405162461bcd60e51b815260206004820152601e60248201527f53656e646572206973206e6f7420746865206e6f756e646572732044414f00006044820152606490fd5b60005b8381106105a15750506000910152565b8181015183820152602001610591565b906020916105ca8151809281855285808601910161058e565b601f01601f1916010190565b9060206105e79281815201906105b1565b90565b346103ad5760003660031901126103ad5761061a610606612959565b6040519182916020835260208301906105b1565b0390f35b346103ad5760003660031901126103ad576010546040516001600160a01b039091168152602090f35b346103ad5760203660031901126103ad576020610665600435612a12565b6040516001600160a01b039091168152f35b346103ad5760403660031901126103ad576004356106948161039c565b6024356106a0816128e1565b6001600160a01b03818116908416811461074c57331490811561073a575b50156106cf576106cd91612fae565b005b60405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608490fd5b61074691503390611f34565b386106be565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b346103ad5760003660031901126103ad5761061a6107f660018060a01b036107c881601054163314612016565b60145461071c8111158061081f575b610806575b5060105416601454906107ee82612078565b601455612778565b6040519081529081906020820190565b6108189082600f54166107ee82612078565b50386107dc565b50600a8106156107d7565b346103ad5760003660031901126103ad576020600954604051908152f35b346103ad5760003660031901126103ad57602060ff60125460a01c166040519015158152f35b346103ad5760003660031901126103ad5760206040517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8668152f35b60609060031901126103ad576004356108c18161039c565b906024356108ce8161039c565b9060443590565b346103ad576106cd6108e6366108a9565b916108f96108f48433612ba5565b612aa4565b612e34565b346103ad5760003660031901126103ad576020601654604051908152f35b346103ad5760403660031901126103ad576004356109398161039c565b6024359061094681612869565b82101561097a576001600160a01b031660009081526007602090815260408083209383529281529082902054915191825290f35b60405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b346103ad5760003660031901126103ad576011546040516001600160a01b039091168152602090f35b346103ad5760003660031901126103ad57602060405160008152f35b346103ad57600080600319360112610a8857610a3e60018060a01b038254163314611deb565b601254610a5160ff8260a81c1615612221565b60ff60a81b1916600160a81b176012557f593e31e306c198bef259d839f7c6dc4ff7fc10c07f76fab193a210b03704105f8180a180f35b80fd5b346103ad57610a99366108a9565b60405191602083019383851067ffffffffffffffff861117610ac5576106cd9460405260008452612b0a565b61133e565b346103ad5760203660031901126103ad5760043560018060a01b03610af481601054163314612016565b610afd826128e1565b610b078382613233565b610b1083612f5a565b16600081815260046020526040812080549193926000198301928311610b9c5783928592558282526003602052604082206001600160601b0360a01b81541690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a47f806be94a2ac8b92d74e99aa8add5a8e54528a01ec914a9e00d201a6480ed98638280a280f35b612062565b346103ad5760203660031901126103ad57600435600954811015610bf25760096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0154604051908152602090f35b60405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608490fd5b346103ad5760203660031901126103ad576020610665600435610c6e8161039c565b61320a565b346103ad5760203660031901126103ad57600435600081815260036020526040812054610ce39290610caf906001600160a01b03161515612087565b60018060a01b0360115416818352601360205260408320916040518095819482936315fef0b960e01b845260048401612146565b03915afa8015610d275761061a91600091610d06575b50604051918291826105d6565b610d21913d8091833e610d1981836113a9565b8101906120e7565b38610cf9565b611f28565b346103ad5760203660031901126103ad57600435610d498161039c565b6001600160a01b03811615610d63575b6106cd90336138d2565b5033610d59565b346103ad5760403660031901126103ad57600435610d878161039c565b60243560005b818110610d9657005b610da890610da384614141565b612078565b610d8d565b346103ad57600080600319360112610a8857610dd360018060a01b038254163314611deb565b601254610de660ff8260b01c1615612264565b60ff60b01b1916600160b01b176012557ff59561f22794afcfb1e6be5c4733f5449fd167252a96b74bb06d341fb0dac7ed8180a180f35b346103ad5760203660031901126103ad5760206106656004356128e1565b346103ad5760003660031901126103ad57600f546040516001600160a01b039091168152602090f35b346103ad5760003660031901126103ad576012546040516001600160a01b039091168152602090f35b346103ad5760203660031901126103ad57600435610eaa8161039c565b60018060a01b0316600052600d602052602063ffffffff60406000205416604051908152f35b346103ad5760203660031901126103ad576020610ef7600435610ef28161039c565b612869565b604051908152f35b346103ad57600080600319360112610a8857805481906001600160a01b03811690610f2b338314611deb565b6001600160a01b03191682557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b346103ad5760203660031901126103ad576106cd600435610f7e8161039c565b614141565b346103ad57600080600319360112610a8857610fa960018060a01b038254163314611deb565b601254610fbc60ff8260a01c16156121e2565b60ff60a01b1916600160a01b176012557f192417b3f16b1ce69e0c59b0376549666650245ffc05e4b2569089dda8589b668180a180f35b346103ad5760403660031901126103ad57602061101e6004356110158161039c565b602435906136cf565b6001600160601b0360405191168152f35b346103ad5760203660031901126103ad5760043561104c8161039c565b60018060a01b0316600052600e6020526020604060002054604051908152f35b346103ad5760003660031901126103ad576000546040516001600160a01b039091168152602090f35b346103ad57600080600319360112610a885760405190806002546110b881611e7d565b8085529160019180831690811561114957506001146110ee575b61061a856110e2818703826113a9565b604051918291826105d6565b9250600283527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b8284106111315750505081016020016110e28261061a6110d2565b80546020858701810191909152909301928101611116565b86955061061a969350602092506110e294915060ff191682840152151560051b82010192936110d2565b346103ad5760403660031901126103ad576004356111908161039c565b60243580151581036103ad576001600160a01b0382169133831461121e57816111db6111ec9233600052600660205260406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b604051901515815233907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190602090a3005b60405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606490fd5b346103ad5760203660031901126103ad576004356112808161039c565b60018060a01b0316600052600d602052602063ffffffff6040600020541660008115156000146112f257506112dd6001600160601b0391600c84526112c96040600020916135f5565b63ffffffff16600052602052604060002090565b54821c166001600160601b0360405191168152f35b905061101e565b346103ad5760003660031901126103ad576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b634e487b7160e01b600052604160045260246000fd5b610180810190811067ffffffffffffffff821117610ac557604052565b6060810190811067ffffffffffffffff821117610ac557604052565b6080810190811067ffffffffffffffff821117610ac557604052565b90601f8019910116810190811067ffffffffffffffff821117610ac557604052565b604051906113d882611354565b565b604051906040820182811067ffffffffffffffff821117610ac557604052565b67ffffffffffffffff8111610ac557601f01601f191660200190565b929192611422826113fa565b9161143060405193846113a9565b8294818452818301116103ad578281602093846000960137010152565b346103ad5760803660031901126103ad5760043561146a8161039c565b6024356114768161039c565b6064359167ffffffffffffffff83116103ad57366023840112156103ad576114ab6106cd933690602481600401359101611416565b9160443591612b0a565b346103ad576020806003193601126103ad5767ffffffffffffffff906004358281116103ad57366023820112156103ad576114fa903690602481600401359101611416565b9160009161151260018060a01b038454163314611deb565b8351918211610ac55761152f8261152a601554611e7d565b611eb7565b80601f83116001146115695750829382939261155e575b50508160011b916000199060031b1c19161760155580f35b015190503880611546565b90601f1983169461159c60156000527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47590565b9285905b8782106115d95750508360019596106115c0575b505050811b0160155580f35b015160001960f88460031b161c191690553880806115b4565b806001859682949686015181550195019301906115a0565b346103ad5760003660031901126103ad57602060ff60125460a81c166040519015158152f35b346103ad5760c03660031901126103ad576004356116348161039c565b606435906044359060243560ff841684036103ad576020611782611656612959565b805190830120604080517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681860190815260208101939093524691830191909152306060830152906117499061175590836080820103936116bf601f19958681018352826113a9565b519020604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf8882019081526001600160a01b038b166020820152918201899052606082018b90529194916117208160808401038481018352826113a9565b5190206040519384918883019687909160429261190160f01b8352600283015260228201520190565b039081018352826113a9565b5190206040805191825260ff90971660208201526084359681019690965260a43560608701526080860190565b856000968792838052039060015afa15610d27576117eb6117f0936117e38651936117b660018060a01b03861615156134b8565b6001600160a01b0385166000908152600e60205260409020908154916117db83612078565b905514613523565b42111561358a565b6138d2565b80f35b346103ad5760203660031901126103ad57600435600081815260036020526040812054610ce3929061182f906001600160a01b03161515612087565b60018060a01b03601154168183526013602052604083209160405180958194829363012b674960e31b845260048401612146565b346103ad5760003660031901126103ad57602060ff60125460b01c166040519015158152f35b65ffffffffffff8116036103ad57565b61014435906113d882611889565b61016435906113d882611889565b61018435906113d882611889565b346103ad576101a03660031901126103ad576106cd6004356118e48161039c565b6024356118f081611889565b6044356118fc81611889565b60643561190881611889565b60843561191481611889565b60a43561192081611889565b60c43561192c81611889565b60e4359161193983611889565b610104359361194785611889565b610124359561195587611889565b61195d611899565b976119666118a7565b9961196f6118b5565b9b61415c565b346103ad5760203660031901126103ad577fb3025222d01ce9a26c7f9d52bc3bfd0352366bd90a793c273fbfe1c81e0e288e60206004356119b58161039c565b6000546001600160a01b03906119ce9082163314611deb565b601254916119e260ff8460b01c1615612264565b1680916001600160601b0360a01b1617601255604051908152a1005b346103ad5760003660031901126103ad5760206040517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf8152f35b346103ad57600080600319360112610a88576040519060209066697066733a2f2f60c81b82840152809160155491611a7083611e7d565b92600190818116908115611afa5750600114611a9e575b61061a866110e2818803601f1981018352826113a9565b9091929350601582527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec4755b848310611ae6575050505081016027016110e28261061a38611a87565b805486840160270152918301918101611ac9565b905086955061061a969350602792506110e294915060ff19168284015280151502820101929338611a87565b346103ad5760203660031901126103ad57602061101e600435611b488161039c565b61314b565b346103ad5760403660031901126103ad576020611b81600435611b6f8161039c565b60243590611b7c8261039c565b611f34565b6040519015158152f35b346103ad5760203660031901126103ad5760043560009081526013602090815260409182902080546001820154600290920154845165ffffffffffff8084168252603084811c821696830196909652606084811c821697830197909752609084811c82168884015260c094851c8216608084015281861660a084015285871c8216858401529685901c811660e08301529584901c86166101008201529290911c841661012083015283811661014083015290911c90911661016082015261018090f35b346103ad5760403660031901126103ad57600435611c6b8161039c565b63ffffffff60243581811681036103ad57611cb46001600160601b039160409460018060a01b0316600052600c602052846000209063ffffffff16600052602052604060002090565b548351928116835260201c166020820152f35b346103ad5760203660031901126103ad57600435611ce48161039c565b6000546001600160a01b0390611cfd9082163314611deb565b811615611d0d576106cd90611e36565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346103ad5760203660031901126103ad577fad0f299ec81a386c98df0ac27dae11dd020ed1b56963c53a7292e7a3a314539a6020600435611da18161039c565b6000546001600160a01b039190611dbb9083163314611deb565b611dcd60ff60125460a01c16156121e2565b16806001600160601b0360a01b6010541617601055604051908152a1005b15611df257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3565b90600182811c92168015611ead575b6020831014611e9757565b634e487b7160e01b600052602260045260246000fd5b91607f1691611e8c565b601f8111611ec3575050565b600090601582527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475906020601f850160051c83019410611f1e575b601f0160051c01915b828110611f1357505050565b818155600101611f07565b9092508290611efe565b6040513d6000823e3d90fd5b60405163c455279160e01b81526001600160a01b0382811660048301526020826024817f000000000000000000000000000000000000000000000000000000000000000085165afa918215610d2757600092611fda575b50808416911614611fd3576001600160a01b031660009081526006602052604090206105e791611fcc919060018060a01b0316600052602052604060002090565b5460ff1690565b5050600190565b90916020823d821161200e575b81611ff4602093836113a9565b81010312610a885750516120078161039c565b9038611f8b565b3d9150611fe7565b1561201d57565b60405162461bcd60e51b815260206004820152601860248201527f53656e646572206973206e6f7420746865206d696e74657200000000000000006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b6000198114610b9c5760010190565b1561208e57565b60405162461bcd60e51b815260206004820152602b60248201527f4e6f756e73546f6b656e3a2055524920717565727920666f72206e6f6e65786960448201526a39ba32b73a103a37b5b2b760a91b6064820152608490fd5b6020818303126103ad5780519067ffffffffffffffff82116103ad570181601f820112156103ad57805161211a816113fa565b9261212860405194856113a9565b818452602082840101116103ad576105e7916020808501910161058e565b908152815465ffffffffffff8082166020840152603082811c82166040850152606083811c831681860152609084811c8416608087015260c094851c841660a087015260018701548085168688015280841c851660e08801529182901c841661010087015281901c831661012086015290921c8116610140840152600290930154808416610160840152901c9091166101808201526101a00190565b156121e957565b60405162461bcd60e51b815260206004820152601060248201526f135a5b9d195c881a5cc81b1bd8dad95960821b6044820152606490fd5b1561222857565b60405162461bcd60e51b815260206004820152601460248201527311195cd8dc9a5c1d1bdc881a5cc81b1bd8dad95960621b6044820152606490fd5b1561226b57565b60405162461bcd60e51b815260206004820152601060248201526f14d95959195c881a5cc81b1bd8dad95960821b6044820152606490fd5b51906113d882611889565b90816101809103126103ad576122c26113cb565b906122cc816122a3565b82526122da602082016122a3565b60208301526122eb604082016122a3565b60408301526122fc606082016122a3565b606083015261230d608082016122a3565b608083015261231e60a082016122a3565b60a083015261232f60c082016122a3565b60c083015261234060e082016122a3565b60e08301526101006123538183016122a3565b908301526101206123658183016122a3565b908301526101406123778183016122a3565b908301526123896101608092016122a3565b9082015290565b9061258761016060026113d8946123ca6123b0865165ffffffffffff1690565b825465ffffffffffff191665ffffffffffff909116178255565b6124076123e0602087015165ffffffffffff1690565b82546bffffffffffff000000000000191660309190911b65ffffffffffff60301b16178255565b61244161241d604087015165ffffffffffff1690565b825465ffffffffffff60601b191660609190911b65ffffffffffff60601b16178255565b61247b612457606087015165ffffffffffff1690565b825465ffffffffffff60901b191660909190911b65ffffffffffff60901b16178255565b6124b5612491608087015165ffffffffffff1690565b825465ffffffffffff60c01b191660c09190911b65ffffffffffff60c01b16178255565b612547600182016124d26123b060a089015165ffffffffffff1690565b6124e86123e060c089015165ffffffffffff1690565b6124fe61241d60e089015165ffffffffffff1690565b61251561245761010089015165ffffffffffff1690565b61012087015165ffffffffffff16815465ffffffffffff60c01b191660c09190911b65ffffffffffff60c01b16179055565b019261257a61256061014083015165ffffffffffff1690565b855465ffffffffffff191665ffffffffffff909116178555565b015165ffffffffffff1690565b65ffffffffffff60301b82549160301b169065ffffffffffff60301b1916179055565b906113d86125b66113cb565b835465ffffffffffff8082168352603082901c81166020840152606082811c82166040850152609083901c82169084015260c09190911c81166080830152909360029061266c83600183015461261982821660a08b019065ffffffffffff169052565b65ffffffffffff603082901c83161660c08a015265ffffffffffff606082901c83161660e08a015265ffffffffffff609082901c8316166101008a015260c01c1661012088019065ffffffffffff169052565b015465ffffffffffff8282161661014086015260301c1661016084019065ffffffffffff169052565b815165ffffffffffff168152610180810192916113d8919060208181015165ffffffffffff169083015260408181015165ffffffffffff169083015260608181015165ffffffffffff169083015260808181015165ffffffffffff169083015260a08181015165ffffffffffff169083015260c08181015165ffffffffffff169083015260e08181015165ffffffffffff16908301526101008181015165ffffffffffff16908301526101208181015165ffffffffffff16908301526101408181015165ffffffffffff16908301526101609081015165ffffffffffff16910152565b60125460115460405163422e2e9960e01b8152600481018590526001600160a01b0391821660248201529161018091829184916044918391165afa928315610d275761282a8561281681967fdd0537b06fdb47e1c62a0778d1d9887f54161c33085887d267d7a1fba37f801d966128369660009261283c575b505061281161280a846000526013602052604060002090565b9182612390565b6125aa565b6000549093906001600160a01b0316612c7e565b60405191829182612695565b0390a290565b61285b9250803d10612862575b61285381836113a9565b8101906122ae565b38806127f1565b503d612849565b6001600160a01b0316801561288957600052600460205260406000205490565b60405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608490fd5b6000908152600360205260409020546001600160a01b031680156129025790565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608490fd5b6040519060008260019182549261296f84611e7d565b808452938181169081156129f05750600114612993575b506113d8925003836113a9565b600081815291507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8483106129d557506113d8935050810160200138612986565b81935090816020925483858a010152019101909185926129bc565b9050602092506113d894915060ff191682840152151560051b82010138612986565b6000818152600360205260409020546001600160a01b031615612a4a576000908152600560205260409020546001600160a01b031690565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b15612aab57565b60405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b6064820152608490fd5b90612b2e939291612b1e6108f48433612ba5565b612b29838383612e34565b613088565b15612b3557565b60405162461bcd60e51b815280612b4e60048201612b52565b0390fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b6000828152600360205260409020546001600160a01b031615612c1657612bcb826128e1565b6001600160a01b038281168282168114949091908515612bfe575b5050508215612bf457505090565b6105e79250611f34565b612c0b9192939550612a12565b161491388080612be6565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b9060018201809211610b9c57565b6001600160a01b03828116929091908315612d89576000858152600360205260409020546001600160a01b0316612d445780612cbd86612d1493613341565b6001600160a01b0381166000908152600460205260409020612cdf8154612c70565b9055612cf5866000526003602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83826000838180a4600080a4565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b600019810191908211610b9c57565b15612de357565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b90612e3e836128e1565b6001600160a01b038381169290918216839003612f0357612e98612edc92821694612e6a861515612ddc565b612e75878483613385565b612e7e87612f5a565b6001600160a01b0316600090815260046020526040902090565b612ea28154612dcd565b90556001600160a01b0381166000908152600460205260409020612ec68154612c70565b9055612cf5856000526003602052604060002090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608490fd5b600081815260056020526040812080546001600160a01b03191690556001600160a01b03612f87836128e1565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258280a4565b600082815260056020526040902080546001600160a01b0319166001600160a01b0383161790556001600160a01b0380612fe7846128e1565b169116907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4565b908160209103126103ad57516105e78161043c565b6001600160a01b0391821681529116602082015260408101919091526080606082018190526105e7929101906105b1565b3d15613083573d90613069826113fa565b9161307760405193846113a9565b82523d6000602084013e565b606090565b92909190823b15613142576130bb926020926000604051809681958294630a85bd0160e11b9a8b85523360048601613027565b03926001600160a01b03165af160009181613112575b50613104576130de613058565b805190816130ff5760405162461bcd60e51b815280612b4e60048201612b52565b602001fd5b6001600160e01b0319161490565b61313491925060203d811161313b575b61312c81836113a9565b810190613012565b90386130d1565b503d613122565b50505050600190565b61315c6001600160601b0391612869565b6131c760405161316b81611371565b603d81527f455243373231436865636b706f696e7461626c653a3a766f746573546f44656c60208201527f65676174653a20616d6f756e74206578636565647320393620626974730000006040820152600160601b8310613ed5565b1690565b60008052600b6020527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f76546001600160a01b0316806105e75750600090565b6001600160a01b038181166000908152600b6020526040902054168061322e575090565b905090565b6001600160a01b0381168061326a575061325c90610c6e836132576113d895614001565b614063565b6132646131cb565b90613b3f565b9061327481612869565b6000198101908111610b9c576113d89361325c936132e8610c6e9360009284845260086020526040842054908282036132ee575b5050826132bf856000526008602052604060002090565b556001600160a01b03861660009081526007602052604090205b90600052602052604060002090565b55614063565b8452600760205260408420828552602052613339604085205480613328846132d98c60018060a01b03166000526007602052604060002090565b556000526008602052604060002090565b5538806132a8565b6113d89161334e81614001565b6001600160a01b0382166133765761336590614063565b6132646133706131cb565b9161320a565b6133809082613fc9565b613365565b6001600160a01b038181169390846133db5791816113d895613264946133ad61337095614001565b8616806133bf575050610c6e90614063565b036133cb575b5061320a565b6133d59085613fc9565b386133c5565b80841685036133f7575b91613370916113d895613264946133ad565b9161340181612869565b600019810192908311610b9c576113d895613264946133709461346960009185835260086020526040832054818103613476575b508261344b876000526008602052604060002090565b556001600160a01b03871660009081526007602052604090206132d9565b55929450955091506133e5565b8584526007602052604084208285526020526134b1604085205480613328846132d98d60018060a01b03166000526007602052604060002090565b5538613435565b156134bf57565b60405162461bcd60e51b815260206004820152603660248201527f455243373231436865636b706f696e7461626c653a3a64656c656761746542796044820152755369673a20696e76616c6964207369676e617475726560501b6064820152608490fd5b1561352a57565b60405162461bcd60e51b815260206004820152603260248201527f455243373231436865636b706f696e7461626c653a3a64656c656761746542796044820152715369673a20696e76616c6964206e6f6e636560701b6064820152608490fd5b1561359157565b60405162461bcd60e51b815260206004820152603660248201527f455243373231436865636b706f696e7461626c653a3a64656c6567617465427960448201527514da59ce881cda59db985d1d5c9948195e1c1a5c995960521b6064820152608490fd5b63ffffffff9081166000190191908211610b9c57565b63ffffffff9182169082160391908211610b9c57565b1561362857565b60405162461bcd60e51b815260206004820152603760248201527f455243373231436865636b706f696e7461626c653a3a6765745072696f72566f60448201527f7465733a206e6f74207965742064657465726d696e65640000000000000000006064820152608490fd5b906040516040810181811067ffffffffffffffff821117610ac55760405260206001600160601b0382945463ffffffff81168452821c16910152565b6136da438310613621565b6001600160a01b0381166000908152600d60205260409020613701905b5463ffffffff1690565b9163ffffffff8084161561389d578161374761373e6136f76137358760018060a01b0316600052600c602052604060002090565b6112c9896135f5565b63ffffffff1690565b11156138a6578161378261373e6136f76137738760018060a01b0316600052600c602052604060002090565b60008052602052604060002090565b1161389d57906137936000946135f5565b828516838216116137e6575050506001600160a01b03166000908152600c602052604090206105e7916137d6915b9063ffffffff16600052602052604060002090565b5460201c6001600160601b031690565b61380b6138056137f9878497969761360b565b60011c637fffffff1690565b8261360b565b948590613836613831886137c18860018060a01b0316600052600c602052604060002090565b613693565b9661384861373e895163ffffffff1690565b80860361386b57505050505050505060206105e79101516001600160601b031690565b859697985094909192939410600014613889575050935b9190613793565b9095925061389791506135f5565b90613882565b50505050600090565b50506001600160a01b03166000908152600c602052604090206105e7916137d6916112c9905b916135f5565b906138dc8261320a565b6001600160a01b038381166000818152600b6020526040812080546001600160a01b031916868516179055949092906139439083831694859487169485917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f8a80a461314b565b928281141580613a76575b61395b575b505050505050565b6139f9575b5061396e575b808080613953565b6001600160a01b0382166000908152600d602052604090206139e79390613994906136f7565b9063ffffffff8216156139ef57506139e16139d06137d66139c78660018060a01b0316600052600c602052604060002090565b6112c9856135f5565b925b6139da613ae7565b9084613f3c565b92613ce2565b388080613966565b6139e190926139d2565b6001600160a01b0381166000908152600d60205260409020613a699190613a1f906136f7565b63ffffffff811615613a6f576001600160a01b0382166000908152600c60205260409020613a55906137d6905b6112c9846135f5565b905b6139e1613a62613a88565b8784613f8b565b38613960565b8690613a57565b506001600160601b038416151561394e565b60405190613a9582611371565b603782527f617465733a20616d6f756e7420756e646572666c6f77730000000000000000006040837f455243373231436865636b706f696e7461626c653a3a5f6d6f766544656c656760208201520152565b60405190613af482611371565b6036825275617465733a20616d6f756e74206f766572666c6f777360501b6040837f455243373231436865636b706f696e7461626c653a3a5f6d6f766544656c656760208201520152565b6001600160a01b03828116919081168083141580613c68575b613b63575b50505050565b613bef575b50613b76575b808080613b5d565b6001600160a01b0381166000908152600d60205260409020613be39190613b9c906136f7565b600063ffffffff821615613be957506001600160a01b0382166000908152600c60205260409020613bd0906137d690613a4c565b905b6139e1613bdd613ae7565b83613f17565b38613b6e565b90613bd2565b6001600160a01b0381166000908152600d60205260409020613c5c9190613c15906136f7565b600063ffffffff821615613c6257506001600160a01b0382166000908152600c60205260409020613c49906137d690613a4c565b905b6139e1613c56613a88565b83613f63565b38613b68565b90613c4b565b506001613b58565b6001600160601b0360206113d893613c9f63ffffffff825116859063ffffffff1663ffffffff19825416179055565b015182546fffffffffffffffffffffffff000000001916911660201b640100000000600160801b0316179055565b90600163ffffffff80931601918211610b9c57565b7fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72492939182613d79604051613d168161138d565b604481527f455243373231436865636b706f696e7461626c653a3a5f77726974654368656360208201527f6b706f696e743a20626c6f636b206e756d6265722065786365656473203332206040820152636269747360e01b606082015243613f01565b63ffffffff80841615159081613e9c575b5015613e0a57506001600160a01b0383166000908152600c60205260409020613de292613dba916112c9906138cc565b90640100000000600160801b0382549160201b1690640100000000600160801b031916179055565b604080516001600160601b0395861681529290941660208301526001600160a01b03169290a2565b613e6a915091613e65613e9793613e2e613e226113da565b63ffffffff9092168252565b6001600160601b03871660208201526001600160a01b0386166000908152600c60205260409020613e609084906137c1565b613c70565b613ccd565b6001600160a01b0383166000908152600d602052604090209063ffffffff1663ffffffff19825416179055565b613de2565b9050613ec96136f7613ec08760018060a01b0316600052600c602052604060002090565b6112c9876135f5565b81169082161438613d8a565b15613edd5750565b60405162461bcd60e51b815260206004820152908190612b4e9060248301906105b1565b6131c763ffffffff926401000000008310613ed5565b6001600160601b03809116916001830192828411610b9c576105e79284161015613ed5565b90916001600160601b03808093169316830192828411610b9c576105e79284161015613ed5565b90613f7d6001600160601b03809316918260011115613ed5565b60001901908111610b9c5790565b9190613fa86001600160601b038080951692169282841115613ed5565b03908111610b9c5790565b634e487b7160e01b600052603260045260246000fd5b604090613fd581612869565b9260009160018060a01b0316825260076020528282208483526020528083832055815260086020522055565b60095481600052600a6020528060406000205568010000000000000000811015610ac557600181018060095581101561405e5760096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b613fb3565b6009805460001992838201828111610b9c57600092828452600a60205280604085205492101561405e578484527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7ae92838201549183101561405e5784926140ff6141109388865280837f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155600052600a602052604060002090565b55600052600a602052604060002090565b55825493841561412d578401938085101561405e57838352015555565b634e487b7160e01b83526031600452602483fd5b6016546141599161415182612078565b601655612778565b50565b9b92909a99989796959493916040519b6141758d611354565b65ffffffffffff168c5265ffffffffffff1660208c015265ffffffffffff1660408b015265ffffffffffff1660608a015265ffffffffffff16608089015265ffffffffffff1660a088015265ffffffffffff1660c087015265ffffffffffff1660e086015265ffffffffffff1661010085015265ffffffffffff1661012084015265ffffffffffff1661014083015265ffffffffffff16610160820152601654614229906000526013602052604060002090565b9061423391612390565b6000546001600160a01b0316906016549061424d82612078565b6016556113d892612c7e56fea26469706673582212207452a64263c1605ad86a089c930d6e6596da953b33e80822f826b059fdd89a0664736f6c63430008140033";

type NounsTokenHarnessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NounsTokenHarnessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NounsTokenHarness__factory extends ContractFactory {
  constructor(...args: NounsTokenHarnessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    noundersDAO: PromiseOrValue<string>,
    minter: PromiseOrValue<string>,
    descriptor: PromiseOrValue<string>,
    seeder: PromiseOrValue<string>,
    proxyRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NounsTokenHarness> {
    return super.deploy(
      noundersDAO,
      minter,
      descriptor,
      seeder,
      proxyRegistry,
      overrides || {}
    ) as Promise<NounsTokenHarness>;
  }
  override getDeployTransaction(
    noundersDAO: PromiseOrValue<string>,
    minter: PromiseOrValue<string>,
    descriptor: PromiseOrValue<string>,
    seeder: PromiseOrValue<string>,
    proxyRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      noundersDAO,
      minter,
      descriptor,
      seeder,
      proxyRegistry,
      overrides || {}
    );
  }
  override attach(address: string): NounsTokenHarness {
    return super.attach(address) as NounsTokenHarness;
  }
  override connect(signer: Signer): NounsTokenHarness__factory {
    return super.connect(signer) as NounsTokenHarness__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NounsTokenHarnessInterface {
    return new utils.Interface(_abi) as NounsTokenHarnessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NounsTokenHarness {
    return new Contract(address, _abi, signerOrProvider) as NounsTokenHarness;
  }
}
