/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NounsArt, NounsArtInterface } from "../../contracts/NounsArt";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_descriptor",
        type: "address",
      },
      {
        internalType: "contract IInflator",
        name: "_inflator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BadDecompressedLength",
    type: "error",
  },
  {
    inputs: [],
    name: "BadImageCount",
    type: "error",
  },
  {
    inputs: [],
    name: "BadPaletteLength",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyBytes",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyPalette",
    type: "error",
  },
  {
    inputs: [],
    name: "ImageNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "PaletteNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderIsNotDescriptor",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "count",
        type: "uint16",
      },
    ],
    name: "BackDecorationsAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "count",
        type: "uint16",
      },
    ],
    name: "BackgroundDecorationsAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "BackgroundsAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "count",
        type: "uint16",
      },
    ],
    name: "BacksAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "count",
        type: "uint16",
      },
    ],
    name: "ChokersAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "count",
        type: "uint16",
      },
    ],
    name: "ClothesAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldDescriptor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newDescriptor",
        type: "address",
      },
    ],
    name: "DescriptorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "count",
        type: "uint16",
      },
    ],
    name: "EarsAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "count",
        type: "uint16",
      },
    ],
    name: "HairsAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "count",
        type: "uint16",
      },
    ],
    name: "HatsAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "count",
        type: "uint16",
      },
    ],
    name: "HeadphonesAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldInflator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newInflator",
        type: "address",
      },
    ],
    name: "InflatorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "count",
        type: "uint16",
      },
    ],
    name: "LeftHandsAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "paletteIndex",
        type: "uint8",
      },
    ],
    name: "PaletteSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "count",
        type: "uint16",
      },
    ],
    name: "SpecialsAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addBackDecorations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addBackDecorationsFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_background",
        type: "string",
      },
    ],
    name: "addBackground",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addBackgroundDecorations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addBackgroundDecorationsFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addBacks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addBacksFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addChokers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addChokersFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addClothes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addClothesFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addEars",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addEarsFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addHairs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addHairsFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addHats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addHatsFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addHeadphones",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addHeadphonesFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addLeftHands",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addLeftHandsFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_backgrounds",
        type: "string[]",
      },
    ],
    name: "addManyBackgrounds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addSpecials",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addSpecialsFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "backCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backDecorationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "backDecorations",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backDecorationsTrait",
    outputs: [
      {
        internalType: "uint256",
        name: "storedImagesCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backgroundCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backgroundDecorationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "backgroundDecorations",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backgroundDecorationsTrait",
    outputs: [
      {
        internalType: "uint256",
        name: "storedImagesCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "backgrounds",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "backs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backsTrait",
    outputs: [
      {
        internalType: "uint256",
        name: "storedImagesCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chokerCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "chokers",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chokersTrait",
    outputs: [
      {
        internalType: "uint256",
        name: "storedImagesCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "clotheCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "clothes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "clothesTrait",
    outputs: [
      {
        internalType: "uint256",
        name: "storedImagesCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "descriptor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "earCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ears",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "earsTrait",
    outputs: [
      {
        internalType: "uint256",
        name: "storedImagesCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBackDecorationsTrait",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "imageCount",
                type: "uint16",
              },
              {
                internalType: "uint80",
                name: "decompressedLength",
                type: "uint80",
              },
              {
                internalType: "address",
                name: "pointer",
                type: "address",
              },
            ],
            internalType: "struct INounsArt.NounArtStoragePage[]",
            name: "storagePages",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "storedImagesCount",
            type: "uint256",
          },
        ],
        internalType: "struct INounsArt.Trait",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBackgroundDecorationsTrait",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "imageCount",
                type: "uint16",
              },
              {
                internalType: "uint80",
                name: "decompressedLength",
                type: "uint80",
              },
              {
                internalType: "address",
                name: "pointer",
                type: "address",
              },
            ],
            internalType: "struct INounsArt.NounArtStoragePage[]",
            name: "storagePages",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "storedImagesCount",
            type: "uint256",
          },
        ],
        internalType: "struct INounsArt.Trait",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBacksTrait",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "imageCount",
                type: "uint16",
              },
              {
                internalType: "uint80",
                name: "decompressedLength",
                type: "uint80",
              },
              {
                internalType: "address",
                name: "pointer",
                type: "address",
              },
            ],
            internalType: "struct INounsArt.NounArtStoragePage[]",
            name: "storagePages",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "storedImagesCount",
            type: "uint256",
          },
        ],
        internalType: "struct INounsArt.Trait",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChokersTrait",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "imageCount",
                type: "uint16",
              },
              {
                internalType: "uint80",
                name: "decompressedLength",
                type: "uint80",
              },
              {
                internalType: "address",
                name: "pointer",
                type: "address",
              },
            ],
            internalType: "struct INounsArt.NounArtStoragePage[]",
            name: "storagePages",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "storedImagesCount",
            type: "uint256",
          },
        ],
        internalType: "struct INounsArt.Trait",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getClothesTrait",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "imageCount",
                type: "uint16",
              },
              {
                internalType: "uint80",
                name: "decompressedLength",
                type: "uint80",
              },
              {
                internalType: "address",
                name: "pointer",
                type: "address",
              },
            ],
            internalType: "struct INounsArt.NounArtStoragePage[]",
            name: "storagePages",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "storedImagesCount",
            type: "uint256",
          },
        ],
        internalType: "struct INounsArt.Trait",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEarsTrait",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "imageCount",
                type: "uint16",
              },
              {
                internalType: "uint80",
                name: "decompressedLength",
                type: "uint80",
              },
              {
                internalType: "address",
                name: "pointer",
                type: "address",
              },
            ],
            internalType: "struct INounsArt.NounArtStoragePage[]",
            name: "storagePages",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "storedImagesCount",
            type: "uint256",
          },
        ],
        internalType: "struct INounsArt.Trait",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHairsTrait",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "imageCount",
                type: "uint16",
              },
              {
                internalType: "uint80",
                name: "decompressedLength",
                type: "uint80",
              },
              {
                internalType: "address",
                name: "pointer",
                type: "address",
              },
            ],
            internalType: "struct INounsArt.NounArtStoragePage[]",
            name: "storagePages",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "storedImagesCount",
            type: "uint256",
          },
        ],
        internalType: "struct INounsArt.Trait",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHatsTrait",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "imageCount",
                type: "uint16",
              },
              {
                internalType: "uint80",
                name: "decompressedLength",
                type: "uint80",
              },
              {
                internalType: "address",
                name: "pointer",
                type: "address",
              },
            ],
            internalType: "struct INounsArt.NounArtStoragePage[]",
            name: "storagePages",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "storedImagesCount",
            type: "uint256",
          },
        ],
        internalType: "struct INounsArt.Trait",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHeadphonesTrait",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "imageCount",
                type: "uint16",
              },
              {
                internalType: "uint80",
                name: "decompressedLength",
                type: "uint80",
              },
              {
                internalType: "address",
                name: "pointer",
                type: "address",
              },
            ],
            internalType: "struct INounsArt.NounArtStoragePage[]",
            name: "storagePages",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "storedImagesCount",
            type: "uint256",
          },
        ],
        internalType: "struct INounsArt.Trait",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLeftHandsTrait",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "imageCount",
                type: "uint16",
              },
              {
                internalType: "uint80",
                name: "decompressedLength",
                type: "uint80",
              },
              {
                internalType: "address",
                name: "pointer",
                type: "address",
              },
            ],
            internalType: "struct INounsArt.NounArtStoragePage[]",
            name: "storagePages",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "storedImagesCount",
            type: "uint256",
          },
        ],
        internalType: "struct INounsArt.Trait",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSpecialsTrait",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "imageCount",
                type: "uint16",
              },
              {
                internalType: "uint80",
                name: "decompressedLength",
                type: "uint80",
              },
              {
                internalType: "address",
                name: "pointer",
                type: "address",
              },
            ],
            internalType: "struct INounsArt.NounArtStoragePage[]",
            name: "storagePages",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "storedImagesCount",
            type: "uint256",
          },
        ],
        internalType: "struct INounsArt.Trait",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hairCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "hairs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hairsTrait",
    outputs: [
      {
        internalType: "uint256",
        name: "storedImagesCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hatCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "hats",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hatsTrait",
    outputs: [
      {
        internalType: "uint256",
        name: "storedImagesCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "headphoneCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "headphones",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "headphonesTrait",
    outputs: [
      {
        internalType: "uint256",
        name: "storedImagesCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inflator",
    outputs: [
      {
        internalType: "contract IInflator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "leftHandCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "leftHands",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "leftHandsTrait",
    outputs: [
      {
        internalType: "uint256",
        name: "storedImagesCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "paletteIndex",
        type: "uint8",
      },
    ],
    name: "palettes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "palettesPointers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_descriptor",
        type: "address",
      },
    ],
    name: "setDescriptor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IInflator",
        name: "_inflator",
        type: "address",
      },
    ],
    name: "setInflator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "paletteIndex",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "palette",
        type: "bytes",
      },
    ],
    name: "setPalette",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "paletteIndex",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
    ],
    name: "setPalettePointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "specialCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "specials",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "specialsTrait",
    outputs: [
      {
        internalType: "uint256",
        name: "storedImagesCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200009157601f620038fa38819003918201601f19168301916001600160401b0383118484101762000096578084926040948552833981010312620000915780516001600160a01b039182821691829003620000915760200151918216809203620000915760018060a01b031990816000541617600055600154161760015560405161384d9081620000ad8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806301b9a397146104c0578063029b20d4146104bb57806303e811e0146104b657806304bde4dd146104b1578063057ac32e146104ac578063058f5a33146104a757806309a4bb3e146104165780630a3bfd67146104a25780630faa83871461048e5780631b04924a1461049d5780631ecf03cc146103b7578063261f5c5e1461037657806328f6d165146103c65780632b6096011461047a5780632be5db99146104985780632e0975ab14610434578063303e74df1461049357806332f6b61c1461048e57806334703fb11461048957806335e6738e1461048457806339e65fd0146103df5780633c9d023e1461047f5780633f87de091461047a5780634531c0a81461047557806346fe1a031461047057806348369fe21461046b5780634a66e164146104665780634c041c37146104615780634d1f22bf1461045c5780634d9cc7f0146103bc5780634da5f471146104575780635331d29a146104525780635e70664c1461044d57806364f750b8146103d057806372aa4a961461044857806372c84d3f1461044357806379f44e4f1461043e5780637c4c1b2b146104395780637efa6bd514610434578063837724e11461042f578063866771031461042a5780638834308b146104255780638b104ace146104205780638bd54c061461041b5780638f207b6a146104165780638f22db231461041157806391b7916a1461040c57806398293d6f14610407578063a2eecb7014610402578063a937e91b146103fd578063aff96adc146103f8578063b83e8fce146103f8578063b8e19635146103f3578063bc2d45fe146103ee578063bca747b5146103e9578063c1c8eeba146103e4578063c73b0c0d146103df578063c808c487146103da578063ccb1c291146103d5578063cd8e74f7146103d0578063cd946f40146103cb578063d3e4a7a4146103c6578063d4b1900d146103c1578063d5d77445146103bc578063dfe34a26146103b7578063e1bf8c51146103b2578063e1d46ae6146103ad578063e79c9ea6146103a8578063e989de7d146103a3578063ed8aba5a1461039e578063edfc124214610399578063ee4b140e14610394578063eecf8a361461038f578063f3b768271461038a578063f527556814610385578063f6b6d99314610380578063fbf4da1f1461037b5763fe0ee37b1461037657600080fd5b610e4a565b6128a6565b61288b565b6127ea565b612714565b612673565b612658565b61259e565b612583565b612568565b612455565b61242c565b612411565b610e2c565b61151b565b612370565b610e68565b6122b6565b61170c565b612215565b61213f565b61111c565b612069565b61204e565b611fd0565b611fb5565b611f97565b611edd565b611e3c565b611e21565b611d30565b611c76565b610c57565b611be0565b611b3f565b611a85565b6119af565b611994565b610f45565b6118be565b611804565b6117c8565b61172a565b611694565b6115da565b611539565b61147a565b6113a4565b611303565b6112e8565b61122e565b611210565b610e86565b61113a565b611062565b610f8c565b610d3e565b610f63565b610ea4565b610d5c565b610c75565b610b9d565b610afc565b6109cc565b610750565b6105f8565b6104db565b6001600160a01b038116036104d657565b600080fd5b346104d65760203660031901126104d6576004356104f8816104c5565b6000546001600160a01b03808216903382900361056c576001600160a01b031990921691909216908117600055604080516001600160a01b0393841681529290911660208301527f6a470e5dd4b354979dc3b984575294975f737cb9ee3ae3cca949e998dbc7cee99190819081015b0390a1005b604051631b7c44cd60e01b8152600490fd5b602091828252606092838301918051946040938484870152865180915283608087019701916000905b8282106105ba5750505050015191015290565b8351805161ffff168a52808701516001600160501b0316878b01528701516001600160a01b0316878a015297880197928501926001909101906105a7565b346104d65760003660031901126104d65761061161297c565b506040805161061f81610914565b600e549161062c83612996565b6106388251918261094f565b83815260209081810194600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd956000905b8282106106935750505061068f94508352600f5490830152519182918261057e565b0390f35b600185819288516106a381610934565b8b5461ffff811682526001600160501b038160101c168483015260601c8a82015281520198019101909661066d565b9181601f840112156104d6578235916001600160401b0383116104d657602083818601950101116104d657565b60606003198201126104d657600435906001600160401b0382116104d657610729916004016106d2565b90916024356001600160501b03811681036104d6579060443561ffff811681036104d65790565b346104d65761075e366106ff565b6000546001600160a01b039492939192908516330361056c57811561083857610794610799916001600160501b039336916129ed565b613722565b92169081156108265761ffff16928315610814576107d192604051926107be84610934565b8584526020840152166040820152612e3e565b60195481810180911161080f577f20722bcf9a0fefa422fc28ef7f543871719e4255f90cdf9681790f37f7776ef591602091601955604051908152a1005b6129ad565b604051635066be4560e11b8152600490fd5b60405163cce3526160e01b8152600490fd5b6040516330d22c4360e21b8152600490fd5b60209060031901126104d65760043590565b634e487b7160e01b600052603260045260246000fd5b6002548110156108a95760026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b61085c565b634e487b7160e01b600052600060045260246000fd5b90600182811c921680156108f4575b60208310146108de57565b634e487b7160e01b600052602260045260246000fd5b91607f16916108d3565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761092f57604052565b6108fe565b606081019081106001600160401b0382111761092f57604052565b90601f801991011681019081106001600160401b0382111761092f57604052565b60005b8381106109835750506000910152565b8181015183820152602001610973565b906020916109ac81518092818552858086019101610970565b601f01601f1916010190565b9060206109c9928181520190610993565b90565b346104d6576109da3661084a565b6002548110156104d65760026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01604051600091805490610a1d826108c4565b908184526001928381169081600014610a965750600114610a55575b61068f84610a498188038261094f565b604051918291826109b8565b90935060005260209283600020916000925b828410610a83575050508161068f93610a499282010193610a39565b8054858501870152928501928101610a67565b61068f9650610a499450602092508593915060ff191682840152151560051b82010193610a39565b60609060031901126104d657600435610ad6816104c5565b906024356001600160501b03811681036104d6579060443561ffff811681036104d65790565b346104d657610b0a36610abe565b60005490926001600160a01b039290918316330361056c576001600160501b03169283156108265761ffff16908115610814577fc283a17a72d45f1b0104011f0cee5279ac1f7937f1825cc7cd3b7c5a26cdac5f93602093610b859260405192610b7384610934565b85845286840152166040820152612b68565b610b918160115461309b565b601155604051908152a1005b346104d657610bab366106ff565b6000546001600160a01b039492939192908516330361056c57811561083857610794610be1916001600160501b039336916129ed565b92169081156108265761ffff1692831561081457610c199260405192610c0684610934565b8584526020840152166040820152612c5a565b60095481810180911161080f577fafa7222c5da1e02ad94d251c424cc4cc7b2d9b02611cf6c7ea095a44e1adbbc691602091600955604051908152a1005b346104d65760003660031901126104d6576020600754604051908152f35b346104d657610cd66000610c90610c8b3661084a565b6130bc565b919054610c9f8160601c6137e7565b906001600160501b0360018060a01b0360015416916040519687948593849363132dbfbf60e11b855260101c16906004840161365a565b03915afa908115610d3957610d04610d099261068f94600091610d16575b506020808251830101910161368d565b6130a8565b51604051918291826109b8565b610d31913d8091833e610d29818361094f565b810190613624565b905038610cf4565b613681565b346104d65760003660031901126104d6576020601954604051908152f35b346104d65760003660031901126104d657610d7561297c565b5060408051610d8381610914565b6010918254610d9181612996565b610d9d8351918261094f565b818152602091828201866000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6726000915b838310610ded578488526011548689015286518061068f8a8261057e565b60018681928951610dfd81610934565b8c6001600160501b038754809261ffff821685521c168483015260601c8b820152815201920192019190610dcf565b346104d65760003660031901126104d6576020601754604051908152f35b346104d65760003660031901126104d6576020600954604051908152f35b346104d65760003660031901126104d6576020600b54604051908152f35b346104d65760003660031901126104d6576020601354604051908152f35b346104d657610eb236610abe565b60005490926001600160a01b039290918316330361056c576001600160501b03169283156108265761ffff16908115610814577f5ae80e235aa4185560edc4561757298055ea0e559b780c97df589794f116673093602093610f2d9260405192610f1b84610934565b85845286840152166040820152612be1565b610f398160135461309b565b601355604051908152a1005b346104d65760003660031901126104d6576020600f54604051908152f35b346104d65760003660031901126104d6576000546040516001600160a01b039091168152602090f35b346104d65760003660031901126104d657610fa561297c565b5060408051610fb381610914565b60065491610fc083612996565b610fcc8251918261094f565b8381526020908181019460066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f956000905b8282106110235750505061068f9450835260075490830152519182918261057e565b6001858192885161103381610934565b8b5461ffff811682526001600160501b038160101c168483015260601c8a820152815201980191019096611001565b346104d657611070366106ff565b6000546001600160a01b039492939192908516330361056c578115610838576107946110a6916001600160501b039336916129ed565b92169081156108265761ffff16928315610814576110de92604051926110cb84610934565b8584526020840152166040820152612f30565b60175481810180911161080f577fb24080c7c013bdd471d104bbe4598292eba2b3f958a37695f148be6557faf0ce91602091601755604051908152a1005b346104d65760003660031901126104d6576020601154604051908152f35b346104d65760003660031901126104d65761115361297c565b506040805161116181610914565b6008549161116e83612996565b61117a8251918261094f565b8381526020908181019460086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3956000905b8282106111d15750505061068f9450835260095490830152519182918261057e565b600185819288516111e181610934565b8b5461ffff811682526001600160501b038160101c168483015260601c8a8201528152019801910190966111af565b346104d65760003660031901126104d6576020600254604051908152f35b346104d65761123c366106ff565b6000546001600160a01b039492939192908516330361056c57811561083857610794611272916001600160501b039336916129ed565b92169081156108265761ffff16928315610814576112aa926040519261129784610934565b8584526020840152166040820152612fa9565b60055481810180911161080f577ffb5fbbffe123626d7127c6af216e498aa36bde32c601860dbafd119db6e3902591602091600555604051908152a1005b346104d657610cd66000610c906112fe3661084a565b613145565b346104d65761131136610abe565b60005490926001600160a01b039290918316330361056c576001600160501b03169283156108265761ffff16908115610814577fafa7222c5da1e02ad94d251c424cc4cc7b2d9b02611cf6c7ea095a44e1adbbc69360209361138c926040519261137a84610934565b85845286840152166040820152612c5a565b6113988160095461309b565b600955604051908152a1005b346104d65760003660031901126104d6576113bd61297c565b50604080516113cb81610914565b601854916113d883612996565b6113e48251918261094f565b8381526020908181019460186000527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e956000905b82821061143b5750505061068f9450835260195490830152519182918261057e565b6001858192885161144b81610934565b8b5461ffff811682526001600160501b038160101c168483015260601c8a820152815201980191019096611419565b346104d65761148836610abe565b60005490926001600160a01b039290918316330361056c576001600160501b03169283156108265761ffff16908115610814577f37c822cd1c7bd8bc8b7a24e61c22ae70bec5ecf3c39700ba06f9ea558ea3443f9360209361150392604051926114f184610934565b85845286840152166040820152612cd3565b61150f81600b5461309b565b600b55604051908152a1005b346104d65760003660031901126104d6576020600554604051908152f35b346104d65761154736610abe565b60005490926001600160a01b039290918316330361056c576001600160501b03169283156108265761ffff16908115610814577f20742e221ef10222b04a19486b9838ea4b563fb91c4ad4573d0145fdeeb07000936020936115c292604051926115b084610934565b85845286840152166040820152612d4c565b6115ce8160075461309b565b600755604051908152a1005b346104d6576115e8366106ff565b6000546001600160a01b039492939192908516330361056c5781156108385761079461161e916001600160501b039336916129ed565b92169081156108265761ffff1692831561081457611656926040519261164384610934565b8584526020840152166040820152612eb7565b600f5481810180911161080f577ff28d4ecec5f1dac557f6addc1512f13d608f52d57aabf3b6aa06a7b11c5ed1ee91602091600f55604051908152a1005b346104d65760203660031901126104d6576004356001600160401b0381116104d6576116c49036906004016106d2565b6000546001600160a01b0316330361056c576116df91612a78565b7f379976e1287af3c12aafa34c6a1a61b0cbcb9dce67b3b220ece3b474a4a74276602060405160018152a1005b346104d65760003660031901126104d6576020600d54604051908152f35b346104d65760203660031901126104d657600435611747816104c5565b6000546001600160a01b03908116330361056c57600180549282166001600160a01b03198416811790915560408051929093166001600160a01b0390811683521660208201527fad22bb31e9e983d055eeb60a03a1e572d4905254640c9ee3cd36c8d6431248309181908101610567565b6004359060ff821682036104d657565b346104d65760203660031901126104d65760ff6117e36117b8565b166000526003602052602060018060a01b0360406000205416604051908152f35b346104d657611812366106ff565b6000546001600160a01b039492939192908516330361056c57811561083857610794611848916001600160501b039336916129ed565b92169081156108265761ffff1692831561081457611880926040519261186d84610934565b8584526020840152166040820152612be1565b60135481810180911161080f577f5ae80e235aa4185560edc4561757298055ea0e559b780c97df589794f116673091602091601355604051908152a1005b346104d65760003660031901126104d6576118d761297c565b50604080516118e581610914565b600454916118f283612996565b6118fe8251918261094f565b8381526020908181019460046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b956000905b8282106119555750505061068f9450835260055490830152519182918261057e565b6001858192885161196581610934565b8b5461ffff811682526001600160501b038160101c168483015260601c8a820152815201980191019096611933565b346104d657610cd66000610c906119aa3661084a565b6131b9565b346104d65760003660031901126104d6576119c861297c565b50604080516119d681610914565b601254916119e383612996565b6119ef8251918261094f565b8381526020908181019460126000527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444956000905b828210611a465750505061068f9450835260135490830152519182918261057e565b60018581928851611a5681610934565b8b5461ffff811682526001600160501b038160101c168483015260601c8a820152815201980191019096611a24565b346104d657611a93366106ff565b6000546001600160a01b039492939192908516330361056c57811561083857610794611ac9916001600160501b039336916129ed565b92169081156108265761ffff1692831561081457611b019260405192611aee84610934565b8584526020840152166040820152612dc5565b600d5481810180911161080f577ff1030c8bb6d31d4d60140638cacbfcf1025186ab44bdaef50ae0570c4ed563b991602091600d55604051908152a1005b346104d657611b4d36610abe565b60005490926001600160a01b039290918316330361056c576001600160501b03169283156108265761ffff16908115610814577ff1030c8bb6d31d4d60140638cacbfcf1025186ab44bdaef50ae0570c4ed563b993602093611bc89260405192611bb684610934565b85845286840152166040820152612dc5565b611bd481600d5461309b565b600d55604051908152a1005b346104d65760403660031901126104d657611bf96117b8565b60243590611c06826104c5565b6000546001600160a01b0316330361056c577f3469f6a12aa5e5edc4ea6e284300f2621e073fce4374d4673ded8f2ea7c18b4f91611c6d60ff6020931691826000526003845260406000209060018060a01b03166001600160601b0360a01b825416179055565b604051908152a1005b346104d657611c84366106ff565b6000546001600160a01b039492939192908516330361056c57811561083857610794611cba916001600160501b039336916129ed565b92169081156108265761ffff1692831561081457611cf29260405192611cdf84610934565b8584526020840152166040820152612b68565b60115481810180911161080f577fc283a17a72d45f1b0104011f0cee5279ac1f7937f1825cc7cd3b7c5a26cdac5f91602091601155604051908152a1005b346104d65760203660031901126104d6576004356001600160401b038082116104d657366023830112156104d6578160040135908082116104d65760059260243684861b83018201116104d657600080549095906001600160a01b0316330361056c5791368190036042190190865b868110611dd75760405187815288907f379976e1287af3c12aafa34c6a1a61b0cbcb9dce67b3b220ece3b474a4a7427690602090a180f35b8381861b8301013583811215611e1d578201908482013591878311611e19576044018236038113611e1957611e1492611e0f91612a78565b6129c3565b611d9f565b8980fd5b8880fd5b346104d657610cd66000610c90611e373661084a565b61322d565b346104d657611e4a36610abe565b60005490926001600160a01b039290918316330361056c576001600160501b03169283156108265761ffff16908115610814577f20722bcf9a0fefa422fc28ef7f543871719e4255f90cdf9681790f37f7776ef593602093611ec59260405192611eb384610934565b85845286840152166040820152612e3e565b611ed18160195461309b565b601955604051908152a1005b346104d657611eeb366106ff565b6000546001600160a01b039492939192908516330361056c57811561083857610794611f21916001600160501b039336916129ed565b92169081156108265761ffff1692831561081457611f599260405192611f4684610934565b8584526020840152166040820152613022565b60155481810180911161080f577ff2f988f80d3f76077d9435d2f88dd7138e3c506defb58fa11e416e5fde7d470691602091601555604051908152a1005b346104d65760003660031901126104d6576020601554604051908152f35b346104d657610cd66000610c90611fcb3661084a565b6132a1565b346104d65760203660031901126104d65760ff611feb6117b8565b166000818152600360205260409020546001600160a01b03919082161561203c5761068f91612028916000526003602052604060002054166137e7565b604051918291602083526020830190610993565b6040516357dc2eb360e11b8152600490fd5b346104d657610cd66000610c906120643661084a565b613315565b346104d65760003660031901126104d65761208261297c565b506040805161209081610914565b600a549161209d83612996565b6120a98251918261094f565b83815260209081810194600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8956000905b8282106121005750505061068f94508352600b5490830152519182918261057e565b6001858192885161211081610934565b8b5461ffff811682526001600160501b038160101c168483015260601c8a8201528152019801910190966120de565b346104d65760003660031901126104d65761215861297c565b506040805161216681610914565b6014549161217383612996565b61217f8251918261094f565b8381526020908181019460146000527fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec956000905b8282106121d65750505061068f9450835260155490830152519182918261057e565b600185819288516121e681610934565b8b5461ffff811682526001600160501b038160101c168483015260601c8a8201528152019801910190966121b4565b346104d65761222336610abe565b60005490926001600160a01b039290918316330361056c576001600160501b03169283156108265761ffff16908115610814577ff28d4ecec5f1dac557f6addc1512f13d608f52d57aabf3b6aa06a7b11c5ed1ee9360209361229e926040519261228c84610934565b85845286840152166040820152612eb7565b6122aa81600f5461309b565b600f55604051908152a1005b346104d6576122c4366106ff565b6000546001600160a01b039492939192908516330361056c578115610838576107946122fa916001600160501b039336916129ed565b92169081156108265761ffff1692831561081457612332926040519261231f84610934565b8584526020840152166040820152612d4c565b60075481810180911161080f577f20742e221ef10222b04a19486b9838ea4b563fb91c4ad4573d0145fdeeb0700091602091600755604051908152a1005b346104d65761237e36610abe565b60005490926001600160a01b039290918316330361056c576001600160501b03169283156108265761ffff16908115610814577fb24080c7c013bdd471d104bbe4598292eba2b3f958a37695f148be6557faf0ce936020936123f992604051926123e784610934565b85845286840152166040820152612f30565b6124058160175461309b565b601755604051908152a1005b346104d657610cd66000610c906124273661084a565b613389565b346104d65760003660031901126104d6576001546040516001600160a01b039091168152602090f35b346104d65760403660031901126104d65761246e6117b8565b6024356001600160401b0381116104d65761248d9036906004016106d2565b6000549092906001600160a01b0316330361056c57821561255657600383061580159061254b575b612539576125256124ef610794610567947f3469f6a12aa5e5edc4ea6e284300f2621e073fce4374d4673ded8f2ea7c18b4f9636916129ed565b6125068360ff166000526003602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b60405160ff90911681529081906020820190565b60405163e233eccd60e01b8152600490fd5b5061030083116124b5565b6040516330939e2960e11b8152600490fd5b346104d657610cd66000610c9061257e3661084a565b6133fd565b346104d657610cd66000610c906125993661084a565b613486565b346104d6576125ac366106ff565b6000546001600160a01b039492939192908516330361056c578115610838576107946125e2916001600160501b039336916129ed565b92169081156108265761ffff169283156108145761261a926040519261260784610934565b8584526020840152166040820152612cd3565b600b5481810180911161080f577f37c822cd1c7bd8bc8b7a24e61c22ae70bec5ecf3c39700ba06f9ea558ea3443f91602091600b55604051908152a1005b346104d657610cd66000610c9061266e3661084a565b6134fa565b346104d65761268136610abe565b60005490926001600160a01b039290918316330361056c576001600160501b03169283156108265761ffff16908115610814577ffb5fbbffe123626d7127c6af216e498aa36bde32c601860dbafd119db6e39025936020936126fc92604051926126ea84610934565b85845286840152166040820152612fa9565b6127088160055461309b565b600555604051908152a1005b346104d65760003660031901126104d65761272d61297c565b506040805161273b81610914565b6016549161274883612996565b6127548251918261094f565b8381526020908181019460166000527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b5124289956000905b8282106127ab5750505061068f9450835260175490830152519182918261057e565b600185819288516127bb81610934565b8b5461ffff811682526001600160501b038160101c168483015260601c8a820152815201980191019096612789565b346104d6576127f836610abe565b60005490926001600160a01b039290918316330361056c576001600160501b03169283156108265761ffff16908115610814577ff2f988f80d3f76077d9435d2f88dd7138e3c506defb58fa11e416e5fde7d470693602093612873926040519261286184610934565b85845286840152166040820152613022565b61287f8160155461309b565b601555604051908152a1005b346104d657610cd66000610c906128a13661084a565b61356e565b346104d65760003660031901126104d6576128bf61297c565b50604080516128cd81610914565b600c54916128da83612996565b6128e68251918261094f565b83815260209081810194600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7956000905b82821061293d5750505061068f94508352600d5490830152519182918261057e565b6001858192885161294d81610934565b8b5461ffff811682526001600160501b038160101c168483015260601c8a82015281520198019101909661291b565b6040519061298982610914565b6000602083606081520152565b6001600160401b03811161092f5760051b60200190565b634e487b7160e01b600052601160045260246000fd5b600019811461080f5760010190565b6001600160401b03811161092f57601f01601f191660200190565b9291926129f9826129d2565b91612a07604051938461094f565b8294818452818301116104d6578281602093846000960137010152565b90601f8111612a3257505050565b600091825260208220906020601f850160051c83019410612a6e575b601f0160051c01915b828110612a6357505050565b818155600101612a57565b9092508290612a4e565b9060025490600160401b82101561092f57612a9a600192838101600255610872565b939093612b63576001600160401b03821161092f57612ac382612abd86546108c4565b86612a24565b600090601f8311600114612afd57928293918392600094612af2575b50501b916000199060031b1c1916179055565b013592503880612adf565b601f1983169183612b1387600052602060002090565b93825b87828210612b4a57505010612b30575b505050811b019055565b0135600019600384901b60f8161c19169055388080612b26565b8585013587559095019460209384019387935001612b16565b6108ae565b60105490600160401b82101561092f5760018201806010558210156108a957601060005261ffff81511662010000600160601b03602083015160101b169160406001600160601b031991015160601b16911717907f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6720155565b60125490600160401b82101561092f5760018201806012558210156108a957601260005261ffff81511662010000600160601b03602083015160101b169160406001600160601b031991015160601b16911717907fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec34440155565b60085490600160401b82101561092f5760018201806008558210156108a957600860005261ffff81511662010000600160601b03602083015160101b169160406001600160601b031991015160601b16911717907ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b600a5490600160401b82101561092f576001820180600a558210156108a957600a60005261ffff81511662010000600160601b03602083015160101b169160406001600160601b031991015160601b16911717907fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80155565b60065490600160401b82101561092f5760018201806006558210156108a957600660005261ffff81511662010000600160601b03602083015160101b169160406001600160601b031991015160601b16911717907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0155565b600c5490600160401b82101561092f576001820180600c558210156108a957600c60005261ffff81511662010000600160601b03602083015160101b169160406001600160601b031991015160601b16911717907fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70155565b60185490600160401b82101561092f5760018201806018558210156108a957601860005261ffff81511662010000600160601b03602083015160101b169160406001600160601b031991015160601b16911717907fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e0155565b600e5490600160401b82101561092f576001820180600e558210156108a957600e60005261ffff81511662010000600160601b03602083015160101b169160406001600160601b031991015160601b16911717907fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0155565b60165490600160401b82101561092f5760018201806016558210156108a957601660005261ffff81511662010000600160601b03602083015160101b169160406001600160601b031991015160601b16911717907fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242890155565b60045490600160401b82101561092f5760018201806004558210156108a957600460005261ffff81511662010000600160601b03602083015160101b169160406001600160601b031991015160601b16911717907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0155565b60145490600160401b82101561092f5760018201806014558210156108a957601460005261ffff81511662010000600160601b03602083015160101b169160406001600160601b031991015160601b16911717907fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec0155565b9190820180921161080f57565b80518210156108a95760209160051b010190565b600e8054919260009182805b8585106130e15760405163264a7c1360e01b8152600490fd5b828252847fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0161ffff81541682019182811161080f5782891061313057505061312a90946129c3565b936130c8565b9496509450505050830392831161080f579190565b600c8054919260009182805b85851061316a5760405163264a7c1360e01b8152600490fd5b828252847fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70161ffff81541682019182811161080f578289106131305750506131b390946129c3565b93613151565b60068054919260009182805b8585106131de5760405163264a7c1360e01b8152600490fd5b828252847ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0161ffff81541682019182811161080f5782891061313057505061322790946129c3565b936131c5565b60088054919260009182805b8585106132525760405163264a7c1360e01b8152600490fd5b828252847ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30161ffff81541682019182811161080f5782891061313057505061329b90946129c3565b93613239565b60108054919260009182805b8585106132c65760405163264a7c1360e01b8152600490fd5b828252847f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6720161ffff81541682019182811161080f5782891061313057505061330f90946129c3565b936132ad565b60168054919260009182805b85851061333a5760405163264a7c1360e01b8152600490fd5b828252847fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242890161ffff81541682019182811161080f5782891061313057505061338390946129c3565b93613321565b60128054919260009182805b8585106133ae5760405163264a7c1360e01b8152600490fd5b828252847fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec34440161ffff81541682019182811161080f578289106131305750506133f790946129c3565b93613395565b60048054909260009081805b8484106134215760405163264a7c1360e01b81528790fd5b868252837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0161ffff81541682019182811161080f5782881061347057505061346a90936129c3565b92613409565b945094505050928094500392831161080f579190565b600a8054919260009182805b8585106134ab5760405163264a7c1360e01b8152600490fd5b828252847fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80161ffff81541682019182811161080f578289106131305750506134f490946129c3565b93613492565b60188054919260009182805b85851061351f5760405163264a7c1360e01b8152600490fd5b828252847fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e0161ffff81541682019182811161080f5782891061313057505061356890946129c3565b93613506565b60148054919260009182805b8585106135935760405163264a7c1360e01b8152600490fd5b828252847fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec0161ffff81541682019182811161080f578289106131305750506135dc90946129c3565b9361357a565b81601f820112156104d65780516135f8816129d2565b92613606604051948561094f565b818452602082840101116104d6576109c99160208085019101610970565b9190916040818403126104d6578051600f8110156104d6579260208201516001600160401b0381116104d6576109c992016135e2565b906001600160501b0361367a602092959495604085526040850190610993565b9416910152565b6040513d6000823e3d90fd5b9060209081838203126104d65782516001600160401b03938482116104d6570181601f820112156104d65780516136c381612996565b946136d1604051968761094f565b818652848087019260051b840101938085116104d657858401925b8584106136fd575050505050505090565b83518381116104d6578791613717848480948a01016135e2565b8152019301926136ec565b604051906137586021836020810193600085526137488151809260208686019101610970565b810103600181018552018361094f565b613797602b604051809361378760208301966a600b5981380380925939f360a81b885251809285850190610970565b810103600b81018452018261094f565b51906000f0906001600160a01b038216156137ae57565b60405162461bcd60e51b81526020600482015260116024820152701111541313d65351539517d19052531151607a1b6044820152606490fd5b803b9060001982019082821161080f5760019060405193603e601f19910116840160405282845260208401903c9056fea2646970667358221220d5bcdc19372152d349fbbb2faf9846e02d42520880443938c7a0f2fbf522119864736f6c63430008140033";

type NounsArtConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NounsArtConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NounsArt__factory extends ContractFactory {
  constructor(...args: NounsArtConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _descriptor: PromiseOrValue<string>,
    _inflator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NounsArt> {
    return super.deploy(
      _descriptor,
      _inflator,
      overrides || {}
    ) as Promise<NounsArt>;
  }
  override getDeployTransaction(
    _descriptor: PromiseOrValue<string>,
    _inflator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_descriptor, _inflator, overrides || {});
  }
  override attach(address: string): NounsArt {
    return super.attach(address) as NounsArt;
  }
  override connect(signer: Signer): NounsArt__factory {
    return super.connect(signer) as NounsArt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NounsArtInterface {
    return new utils.Interface(_abi) as NounsArtInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NounsArt {
    return new Contract(address, _abi, signerOrProvider) as NounsArt;
  }
}
