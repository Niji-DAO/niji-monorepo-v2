/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  NounsDAOProxyStorage,
  NounsDAOProxyStorageInterface,
} from "../../../../contracts/governance/NounsDAOInterfaces.sol/NounsDAOProxyStorage";

const _abi = [
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100155760e9908161001b8239f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c9081632678224714608c575080635c60da1b1460655763f851a44014603e57600080fd5b3460625780600319360112606257546040516001600160a01b039091168152602090f35b80fd5b5034606257806003193601126062576002546040516001600160a01b039091168152602090f35b90503460af578160031936011260af576001546001600160a01b03168152602090f35b5080fdfea2646970667358221220cab9c3b4a03353494e317811e962c30b9d47d6b3f5ab6e4c00aab5171e3981a564736f6c63430008140033";

type NounsDAOProxyStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NounsDAOProxyStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NounsDAOProxyStorage__factory extends ContractFactory {
  constructor(...args: NounsDAOProxyStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NounsDAOProxyStorage> {
    return super.deploy(overrides || {}) as Promise<NounsDAOProxyStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NounsDAOProxyStorage {
    return super.attach(address) as NounsDAOProxyStorage;
  }
  override connect(signer: Signer): NounsDAOProxyStorage__factory {
    return super.connect(signer) as NounsDAOProxyStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NounsDAOProxyStorageInterface {
    return new utils.Interface(_abi) as NounsDAOProxyStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NounsDAOProxyStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NounsDAOProxyStorage;
  }
}
