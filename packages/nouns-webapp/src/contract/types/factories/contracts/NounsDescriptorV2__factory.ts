/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NounsDescriptorV2,
  NounsDescriptorV2Interface,
} from "../../contracts/NounsDescriptorV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INounsArt",
        name: "_art",
        type: "address",
      },
      {
        internalType: "contract ISVGRenderer",
        name: "_renderer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BadPaletteLength",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyPalette",
    type: "error",
  },
  {
    inputs: [],
    name: "IndexNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract INounsArt",
        name: "art",
        type: "address",
      },
    ],
    name: "ArtUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "DataURIToggled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "PartsLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ISVGRenderer",
        name: "renderer",
        type: "address",
      },
    ],
    name: "RendererUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addBackDecorations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addBackDecorationsFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_background",
        type: "string",
      },
    ],
    name: "addBackground",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addBackgroundDecorations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addBackgroundDecorationsFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addBacks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addBacksFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addChokers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addChokersFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addClothes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addClothesFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addEars",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addEarsFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addHairs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addHairsFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addHats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addHatsFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addHeadphones",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addHeadphonesFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addLeftHands",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addLeftHandsFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_backgrounds",
        type: "string[]",
      },
    ],
    name: "addManyBackgrounds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCompressed",
        type: "bytes",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addSpecials",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "decompressedLength",
        type: "uint80",
      },
      {
        internalType: "uint16",
        name: "imageCount",
        type: "uint16",
      },
    ],
    name: "addSpecialsFromPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "arePartsLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "art",
    outputs: [
      {
        internalType: "contract INounsArt",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backDecorationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "backDecorations",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backgroundCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backgroundDecorationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "backgroundDecorations",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "backgrounds",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "backs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chokerCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "chokers",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "clotheCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "clothes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "backDecoration",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "backgroundDecoration",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "special",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "leftHand",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "back",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "clothe",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "choker",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "ear",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "hair",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "hat",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "headphone",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "dataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "earCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ears",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "backDecoration",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "backgroundDecoration",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "special",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "leftHand",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "back",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "clothe",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "choker",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "ear",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "hair",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "hat",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "headphone",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "generateSVGImage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "backDecoration",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "backgroundDecoration",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "special",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "leftHand",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "back",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "clothe",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "choker",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "ear",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "hair",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "hat",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "headphone",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "genericDataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "backDecoration",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "backgroundDecoration",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "special",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "leftHand",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "back",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "clothe",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "choker",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "ear",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "hair",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "hat",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "headphone",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "getPartsForSeed",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "image",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "palette",
            type: "bytes",
          },
        ],
        internalType: "struct ISVGRenderer.Part[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hairCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "hairs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hatCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "hats",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "headphoneCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "headphones",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isDataURIEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "leftHandCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "leftHands",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockParts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "palettes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renderer",
    outputs: [
      {
        internalType: "contract ISVGRenderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INounsArt",
        name: "_art",
        type: "address",
      },
    ],
    name: "setArt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "descriptor",
        type: "address",
      },
    ],
    name: "setArtDescriptor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IInflator",
        name: "inflator",
        type: "address",
      },
    ],
    name: "setArtInflator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "paletteIndex",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "palette",
        type: "bytes",
      },
    ],
    name: "setPalette",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "paletteIndex",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
    ],
    name: "setPalettePointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISVGRenderer",
        name: "_renderer",
        type: "address",
      },
    ],
    name: "setRenderer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "specialCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "specials",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleDataURIEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "backDecoration",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "backgroundDecoration",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "special",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "leftHand",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "back",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "clothe",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "choker",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "ear",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "hair",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "hat",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "headphone",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034620000db57601f620036b438819003918201601f19168301916001600160401b03831184841017620000e0578084926040948552833981010312620000db5780516001600160a01b039182821691829003620000db5760200151828116809103620000db576000549160018060a01b0319923384821617600055604051943391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600280546001805490951692909217909355600161ff0160a01b03191617600160a81b1790556135bd9081620000f78239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600090813560e01c8063010ecde71461242357806303e811e0146123bb57806304bde4dd14612356578063057ac32e146122d4578063058f5a331461226b578063095b3a481461223f5780630a3bfd67146121da57806315fef0b9146121ae57806319c047b3146120805780631ecf03cc1461203657806328f6d16514611fec5780632a1d076914611f7d5780632b60960114611f335780632be5db9914611eb1578063301bd28e14611e8957806332f6b61c14611e3f57806335e6738e14611dd6578063388e420f14611c7a57806339e65fd014611c305780634531c0a814611be657806346fe1a0314611b7d57806348369fe214611b185780634a66e16414611a965780634d1f22bf14611a145780634d9cc7f0146119ca5780634da5f471146119485780635331d29a146118df578063559fd9491461183f57806355f804b31461167557806356d3163d146116015780635e70664c1461156a5780636c0360eb14611498578063715018a614611439578063773b97711461141357806379f44e4f146113aa5780637efa6bd514611360578063837724e1146112fb5780638834308b146112925780638ada6b0f1461126a5780638b104ace146111e85780638bd54c06146111545780638da5cb5b1461112d5780638f207b6a146110e35780638f22db231461107a57806391b7916a14610f3157806398293d6f14610ecc578063a2eecb7014610e4a578063a937e91b14610de1578063b83e8fce14610d97578063b8e1963514610d32578063bc2d45fe14610cc3578063bca747b514610c5e578063ccb1c29114610bdc578063cd8e74f714610b92578063cd946f4014610b29578063ce2f4f5314610b03578063d4b1900d14610a81578063dfe8478b14610a0c578063e1bf8c51146109a7578063e6b1a3ae1461091d578063e79c9ea61461087c578063e989de7d14610817578063ed8aba5a146107b2578063edfc124214610745578063ee4b140e146106e0578063eecf8a361461065e578063f2fde38b14610589578063f4513a6a14610516578063f52755681461045d578063f6b6d993146103c05763fe0ee37b1461032e57600080fd5b346103bc57816003193601126103bc57600154815163fe0ee37b60e01b81529360209185919082906001600160a01b03165afa9182156103b15791610378575b6020925051908152f35b90506020823d82116103a9575b8161039260209383612607565b810103126103a457602091519061036e565b600080fd5b3d9150610385565b9051903d90823e3d90fd5b5080fd5b5082903461045957602036600319011261045957600154815163f6b6d99360e01b81528335938101939093528390839060249082906001600160a01b03165afa91821561044f5783610426949361042a575b505051918291602083526020830190612582565b0390f35b6104479293503d8091833e61043f8183612607565b8101906129cc565b908380610412565b81513d85823e3d90fd5b8280fd5b50918192346105125760603660031901126105125761047a61249e565b916104836124e1565b61048b6124fa565b9360018060a01b036104a18188541633146128bd565b6104b360ff60025460a01c1615612908565b6001541690813b1561050e578680946104df875198899687958694631ea4eaad60e31b8652850161299b565b03925af190811561050557506104f25750f35b6104fb906125a7565b6105025780f35b80fd5b513d84823e3d90fd5b8680fd5b5050fd5b50918192346105125760203660031901126105125781356001600160a01b0381811693918490036105855761054f8186541633146128bd565b6001541692833b1561058557602485928385519687948593633955254b60e11b85528401525af190811561050557506104f25750f35b8480fd5b508234610459576020366003190112610459576105a461249e565b83546001600160a01b03929183916105bf90831633146128bd565b1692831561060c575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b50918192346105125760603660031901126105125761067b61249e565b916106846124e1565b61068c6124fa565b9360018060a01b036106a28188541633146128bd565b6106b460ff60025460a01c1615612908565b6001541690813b1561050e578680946104df875198899687958694637767c51b60e11b8652850161299b565b508290346104595760203660031901126104595760015481516377258a0760e11b81528335938101939093528390839060249082906001600160a01b03165afa91821561044f5783610426949361042a57505051918291602083526020830190612582565b5091819234610512576107573661250b565b90949260018060a01b0361076f8189541633146128bd565b61078160ff60025460a01c1615612908565b6001541691823b156107ae5787946104df86928851998a97889687956376fe092160e11b87528601612968565b8780fd5b508290346104595760203660031901126104595760015481516376c55d2d60e11b81528335938101939093528390839060249082906001600160a01b03165afa91821561044f5783610426949361042a57505051918291602083526020830190612582565b5082903461045957602036600319011261045957600154815163e989de7d60e01b81528335938101939093528390839060249082906001600160a01b03165afa91821561044f5783610426949361042a57505051918291602083526020830190612582565b50918192346105125780600319360112610512576108986128ad565b6024356001600160401b038111610585576108b690369085016124b4565b93909160018060a01b036108ce8188541633146128bd565b6108e060ff60025460a01c1615612908565b6001541690813b1561050e578660ff916104df82968851998a97889687956373ce4f5360e11b875216908501528960248501526044840191612947565b508234610459576020366003190112610459576001600160a01b039035818116908190036109a3577f89382d75256b43b6826ad8d6cbd8e517eaf5e10f1ef4c8f123c9a25ac4529b559261097760209386541633146128bd565b61098960ff60025460a01c1615612908565b600180546001600160a01b0319168317905551908152a180f35b8380fd5b5082903461045957602036600319011261045957600154815163e1bf8c5160e01b81528335938101939093528390839060249082906001600160a01b03165afa91821561044f5783610426949361042a57505051918291602083526020830190612582565b50346103bc57816003193601126103bc5760207f360c3d72ee193226275b842f85231c259c934e85459fed80fa68e502ffa9dbde91610a5560018060a01b0385541633146128bd565b6002805460ff60a81b19811660a891821c60ff16159182901b60ff60a81b16179091559051908152a180f35b509181923461051257606036600319011261051257610a9e61249e565b91610aa76124e1565b610aaf6124fa565b9360018060a01b03610ac58188541633146128bd565b610ad760ff60025460a01c1615612908565b6001541690813b1561050e578680946104df87519889968795869463d4b1900d60e01b8652850161299b565b50346103bc57816003193601126103bc5760209060ff60025460a81c1690519015158152f35b509181923461051257610b3b3661250b565b90949260018060a01b03610b538189541633146128bd565b610b6560ff60025460a01c1615612908565b6001541691823b156107ae5787946104df86928851998a978896879563033651bd60e61b87528601612968565b50346103bc57816003193601126103bc57600154815163cd8e74f760e01b81529360209185919082906001600160a01b03165afa9182156103b15791610378576020925051908152f35b509181923461051257606036600319011261051257610bf961249e565b91610c026124e1565b610c0a6124fa565b9360018060a01b03610c208188541633146128bd565b610c3260ff60025460a01c1615612908565b6001541690813b1561050e578680946104df87519889968795869463ccb1c29160e01b8652850161299b565b5082903461045957602036600319011261045957600154815163bca747b560e01b81528335938101939093528390839060249082906001600160a01b03165afa91821561044f5783610426949361042a57505051918291602083526020830190612582565b50829034610459576020366003190112610459578260ff6024610ce46128ad565b6001548551635e16a2ff60e11b81529190931695810195909552849182906001600160a01b03165afa91821561044f5783610426949361042a57505051918291602083526020830190612582565b5082903461045957602036600319011261045957600154815163b8e1963560e01b81528335938101939093528390839060249082906001600160a01b03165afa91821561044f5783610426949361042a57505051918291602083526020830190612582565b50346103bc57816003193601126103bc576001548151635c1f47e760e11b81529360209185919082906001600160a01b03165afa9182156103b15791610378576020925051908152f35b509181923461051257610df33661250b565b90949260018060a01b03610e0b8189541633146128bd565b610e1d60ff60025460a01c1615612908565b6001541691823b156107ae5787946104df86928851998a978896879563a937e91b60e01b87528601612968565b509181923461051257606036600319011261051257610e6761249e565b91610e706124e1565b610e786124fa565b9360018060a01b03610e8e8188541633146128bd565b610ea060ff60025460a01c1615612908565b6001541690813b1561050e578680946104df875198899687958694630a2eecb760e41b8652850161299b565b508290346104595760203660031901126104595760015481516398293d6f60e01b81528335938101939093528390839060249082906001600160a01b03165afa91821561044f5783610426949361042a57505051918291602083526020830190612582565b5091346103bc5760209283600319360112610459576001600160401b03823581811161058557366023820112156105855780840135828111611076578060051b96602497368982860101116107ae5787546001600160a01b0390610f9890821633146128bd565b610faa60ff60025460a01c1615612908565b6001541698893b1561107257949383879493929451986348dbc8b560e11b8a5283888b01918b01525260448089019489010195808201958a92604219813603015b86851061101457505050508880898982828f8183818f03925af190811561050557506104f25750f35b9091929394959697986043198c820301895289358281121561106e578301604486820135910185821161106a57813603811361106a576110596001938a938493612947565b9b0199019796950193929190610feb565b8e80fd5b8d80fd5b8880fd5b8580fd5b50918192346105125761108c3661250b565b90949260018060a01b036110a48189541633146128bd565b6110b660ff60025460a01c1615612908565b6001541691823b156107ae5787946104df86928851998a9788968795638f22db2360e01b87528601612968565b50346103bc57816003193601126103bc5760015481516347903db560e11b81529360209185919082906001600160a01b03165afa9182156103b15791610378576020925051908152f35b50346103bc57816003193601126103bc57905490516001600160a01b039091168152602090f35b50823461045957816003193601126104595761116e6128ad565b6001600160a01b039290602435848116908190036103a45784611196879687541633146128bd565b6111a860ff60025460a01c1615612908565b60015416803b156110765785928360449260ff94875198899687956345eaa60360e11b8752169085015260248401525af190811561050557506104f25750f35b50918192346105125760603660031901126105125761120561249e565b9161120e6124e1565b6112166124fa565b9360018060a01b0361122c8188541633146128bd565b61123e60ff60025460a01c1615612908565b6001541690813b1561050e578680946104df875198899687958694634588256760e11b8652850161299b565b50346103bc57816003193601126103bc5760025490516001600160a01b039091168152602090f35b5091819234610512576112a43661250b565b90949260018060a01b036112bc8189541633146128bd565b6112ce60ff60025460a01c1615612908565b6001541691823b156107ae5787946104df86928851998a9788968795638834308b60e01b87528601612968565b5082903461045957602036600319011261045957600154815163837724e160e01b81528335938101939093528390839060249082906001600160a01b03165afa91821561044f5783610426949361042a57505051918291602083526020830190612582565b50346103bc57816003193601126103bc576001548151637efa6bd560e01b81529360209185919082906001600160a01b03165afa9182156103b15791610378576020925051908152f35b5091819234610512576113bc3661250b565b90949260018060a01b036113d48189541633146128bd565b6113e660ff60025460a01c1615612908565b6001541691823b156107ae5787946104df86928851998a97889687956379f44e4f60e01b87528601612968565b50346103bc57816003193601126103bc5760209060ff60025460a01c1690519015158152f35b8234610502578060031936011261050257600060018060a01b036114618184541633146128bd565b81546001600160a01b031981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346103bc57816003193601126103bc57805190826003546114b981612873565b8085529160019180831690811561154257506001146114f7575b5050506114e582610426940383612607565b51918291602083526020830190612582565b9450600385526000805160206135688339815191525b82861061152a575050506114e582602061042695820101946114d3565b8054602087870181019190915290950194810161150d565b6104269750869350602092506114e594915060ff191682840152151560051b820101946114d3565b50918192346105125760203660031901126105125781356001600160401b0381116115fc5761159c90369084016124b4565b84549193916001600160a01b03906115b790821633146128bd565b6115c960ff60025460a01c1615612908565b60015416803b156110765760208680946104df87519889968795869463179c199360e21b86528501526024840191612947565b505050fd5b508234610459576020366003190112610459576001600160a01b039035818116908190036109a3577f482cbbbcf912da3be80deb8503ae1e94c0b7d5d1d0ec0af3d9d6403e06e609ee9261165b60209386541633146128bd565b600280546001600160a01b0319168317905551908152a180f35b5091346103bc57602080600319360112610459576001600160401b038235818111610585576116a790369085016124b4565b9390916116be60018060a01b0387541633146128bd565b841161182c575060036116d18154612873565b601f81116117dd575b5084601f851160011461174b579561173a92918587987f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad9891611740575b5060001987831b1c1916600187901b1790555b51938385948552840191612947565b0390a180f35b905083013538611718565b81865260008051602061356883398151915290601f198616875b8181106117c657509161173a949391877f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad999a94106117ae575b5050600186811b01905561172b565b84013560001988841b60f8161c19169055388061179f565b919286600181928689013581550194019201611765565b818652600080516020613568833981519152601f860160051c810191858710611822575b601f0160051c01905b81811061181757506116da565b86815560010161180a565b9091508190611801565b634e487b7160e01b855260419052602484fd5b509034610502576101803660031901126105025761186461185f3661271d565b612f58565b825191602080840190808552835180925285850181878460051b880101950193965b8388106118935786860387f35b909192939483806118ce600193603f198b8203018752895190836118be835189845289840190612582565b9201519084818403910152612582565b970193019701969093929193611886565b5091819234610512576118f13661250b565b90949260018060a01b036119098189541633146128bd565b61191b60ff60025460a01c1615612908565b6001541691823b156107ae5787946104df86928851998a9788968795632998e94d60e11b87528601612968565b50918192346105125760603660031901126105125761196561249e565b9161196e6124e1565b6119766124fa565b9360018060a01b0361198c8188541633146128bd565b61199e60ff60025460a01c1615612908565b6001541690813b1561050e578680946104df875198899687958694634da5f47160e01b8652850161299b565b50346103bc57816003193601126103bc5760015481516304d9cc7f60e41b81529360209185919082906001600160a01b03165afa9182156103b15791610378576020925051908152f35b509181923461051257606036600319011261051257611a3161249e565b91611a3a6124e1565b611a426124fa565b9360018060a01b03611a588188541633146128bd565b611a6a60ff60025460a01c1615612908565b6001541690813b1561050e578680946104df875198899687958694634d1f22bf60e01b8652850161299b565b509181923461051257606036600319011261051257611ab361249e565b91611abc6124e1565b611ac46124fa565b9360018060a01b03611ada8188541633146128bd565b611aec60ff60025460a01c1615612908565b6001541690813b1561050e578680946104df875198899687958694631299b85960e21b8652850161299b565b5082903461045957602036600319011261045957600154815163241b4ff160e11b81528335938101939093528390839060249082906001600160a01b03165afa91821561044f5783610426949361042a57505051918291602083526020830190612582565b509181923461051257611b8f3661250b565b90949260018060a01b03611ba78189541633146128bd565b611bb960ff60025460a01c1615612908565b6001541691823b156107ae5787946104df86928851998a97889687956346fe1a0360e01b87528601612968565b50346103bc57816003193601126103bc5760015481516308a6381560e31b81529360209185919082906001600160a01b03165afa9182156103b15791610378576020925051908152f35b50346103bc57816003193601126103bc57600154815163039e65fd60e41b81529360209185919082906001600160a01b03165afa9182156103b15791610378576020925051908152f35b508234610459576101c0366003190112610459576001600160401b03813581811161058557611cac903690840161282c565b936024359182116105025750611cc49136910161282c565b6101803660431901126103a4578151611cdc816125eb565b65ffffffffffff9160443583811681036103a457825260643583811681036103a457602083015260843583811681036103a4578483015260a43583811681036103a457606083015260c43583811681036103a457608083015260e43583811681036103a45760a08301526101043583811681036103a45760c08301526101243583811681036103a45760e08301526101443583811681036103a4576101008301526101643583811681036103a4576101208301526101843583811681036103a4576101408301526101a43592831683036103a45761042694611dc393610160840152612d18565b9051918291602083526020830190612582565b509181923461051257611de83661250b565b90949260018060a01b03611e008189541633146128bd565b611e1260ff60025460a01c1615612908565b6001541691823b156107ae5787946104df86928851998a9788968795631af339c760e11b87528601612968565b50346103bc57816003193601126103bc576001548151630cbdad8760e21b81529360209185919082906001600160a01b03165afa9182156103b15791610378576020925051908152f35b50346103bc57816003193601126103bc5760015490516001600160a01b039091168152602090f35b509181923461051257606036600319011261051257611ece61249e565b91611ed76124e1565b611edf6124fa565b9360018060a01b03611ef58188541633146128bd565b611f0760ff60025460a01c1615612908565b6001541690813b1561050e578680946104df875198899687958694632be5db9960e01b8652850161299b565b50346103bc57816003193601126103bc576001548151632b60960160e01b81529360209185919082906001600160a01b03165afa9182156103b15791610378576020925051908152f35b8234610502578060031936011261050257611fa260018060a01b0382541633146128bd565b600254611fb560ff8260a01c1615612908565b60ff60a01b1916600160a01b176002557f1680ee6d421f70ed6030d2fc4fcb50217a5dd617858d56562b119eca59172e578180a180f35b50346103bc57816003193601126103bc5760015481516328f6d16560e01b81529360209185919082906001600160a01b03165afa9182156103b15791610378576020925051908152f35b50346103bc57816003193601126103bc5760015481516307b3c0f360e21b81529360209185919082906001600160a01b03165afa9182156103b15791610378576020925051908152f35b5082903461045957610180366003190112610459578261209f3661271d565b6120a881612f58565b9360018060a01b038365ffffffffffff826001541694511660248751809681936304bde4dd60e01b8352878301525afa9283156121a4578493612184575b50612146908551966120f7886125d0565b8752602087019384526002541692612133865197889586956311660d6b60e11b8752860152876024860152518760448601526084850190612cad565b9051838203604319016064850152612582565b038173__$7233c33f2e1e35848c685b0eb24649959e$__5af491821561044f5783610426949361042a57505051918291602083526020830190612582565b61214691935061219d903d8087833e61043f8183612607565b92906120e6565b85513d86823e3d90fd5b509034610502576101a03660031901126105025750611dc3610426926121d336612628565b9035612c09565b50829034610459576020366003190112610459576001548151630a3bfd6760e01b81528335938101939093528390839060249082906001600160a01b03165afa91821561044f5783610426949361042a57505051918291602083526020830190612582565b509034610502576101a03660031901126105025750611dc36104269261226436612628565b9035612a2d565b50918192346105125761227d3661250b565b90949260018060a01b036122958189541633146128bd565b6122a760ff60025460a01c1615612908565b6001541691823b156107ae5787946104df86928851998a978896879563058f5a3360e01b87528601612968565b5091819234610512576060366003190112610512576122f161249e565b916122fa6124e1565b6123026124fa565b9360018060a01b036123188188541633146128bd565b61232a60ff60025460a01c1615612908565b6001541690813b1561050e578680946104df8751988996879586946302bd619760e11b8652850161299b565b508290346104595760203660031901126104595760015481516304bde4dd60e01b81528335938101939093528390839060249082906001600160a01b03165afa91821561044f5783610426949361042a57505051918291602083526020830190612582565b5091819234610512576123cd3661250b565b90949260018060a01b036123e58189541633146128bd565b6123f760ff60025460a01c1615612908565b6001541691823b156107ae5787946104df86928851998a9788968795621f408f60e51b87528601612968565b50829034610459576020366003190112610459578261244061249e565b81546001600160a01b03919061245990831633146128bd565b816001541690813b156109a35783602492865197889586946301b9a39760e01b865216908401525af19081156105055750612492575080f35b61249b906125a7565b80f35b600435906001600160a01b03821682036103a457565b9181601f840112156103a4578235916001600160401b0383116103a457602083818601950101116103a457565b6024359069ffffffffffffffffffff821682036103a457565b6044359061ffff821682036103a457565b60606003198201126103a457600435906001600160401b0382116103a457612535916004016124b4565b909160243569ffffffffffffffffffff811681036103a4579060443561ffff811681036103a45790565b60005b8381106125725750506000910152565b8181015183820152602001612562565b9060209161259b8151809281855285808601910161255f565b601f01601f1916010190565b6001600160401b0381116125ba57604052565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b038211176125ba57604052565b61018081019081106001600160401b038211176125ba57604052565b90601f801991011681019081106001600160401b038211176125ba57604052565b6101809060231901126103a45760405190612642826125eb565b65ffffffffffff8260243582811681036103a457815260443582811681036103a457602082015260643582811681036103a457604082015260843582811681036103a457606082015260a43582811681036103a457608082015260c43582811681036103a45760a082015260e43582811681036103a45760c08201526101043582811681036103a45760e08201526101243582811681036103a4576101008201526101443582811681036103a4576101208201526101643582811681036103a4576101408201526101843591821682036103a4576101600152565b6101809060031901126103a45760405190612737826125eb565b65ffffffffffff8260043582811681036103a457815260243582811681036103a457602082015260443582811681036103a457604082015260643582811681036103a457606082015260843582811681036103a457608082015260a43582811681036103a45760a082015260c43582811681036103a45760c082015260e43582811681036103a45760e08201526101043582811681036103a4576101008201526101243582811681036103a4576101208201526101443582811681036103a4576101408201526101643591821682036103a4576101600152565b6001600160401b0381116125ba57601f01601f191660200190565b81601f820112156103a45780359061284382612811565b926128516040519485612607565b828452602083830101116103a457816000926020809301838601378301015290565b90600182811c921680156128a3575b602083101461288d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612882565b6004359060ff821682036103a457565b156128c457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b1561290f57565b60405162461bcd60e51b815260206004820152601060248201526f14185c9d1cc8185c99481b1bd8dad95960821b6044820152606490fd5b908060209392818452848401376000828201840152601f01601f1916010190565b92949369ffffffffffffffffffff61298e61ffff93604095606088526060880191612947565b9616602085015216910152565b6001600160a01b03909116815269ffffffffffffffffffff909116602082015261ffff909116604082015260600190565b6020818303126103a4578051906001600160401b0382116103a4570181601f820112156103a45780516129fe81612811565b92612a0c6040519485612607565b818452602082840101116103a457612a2a916020808501910161255f565b90565b9060ff60025460a81c16612b0a5750612a4590612b13565b60405190816000600354612a5881612873565b90600190818116908115612ae35750600114612a96575b505080612a8784602093612a2a96519485920161255f565b0103601f198101835282612607565b600360009081529192506000805160206135688339815191525b838310612ac857505050810160200182612a87612a6f565b80546020848901810191909152879550909201918101612ab0565b60ff191660208681019190915283151590930285019092019250849150612a879050612a6f565b612a2a91612c09565b8015612beb5780816000925b612bd15750612b2d82612811565b91612b3b6040519384612607565b80835281601f19612b4b83612811565b013660208601375b612b5c57505090565b90600019820190828211612bbb578192600a926030908484068201809211612bbb5786511115612ba55760f81b6001600160f81b03191660001a908501601f0153049081612b53565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b90916000198114612bbb576001019190600a900480612b1f565b50604051612bf8816125d0565b60018152600360fc1b602082015290565b90612c16612a2a92612b13565b604051612ca860426402737bab7160dd1b8060208501528451612c576025866020890193612c47818484018761255f565b8101036005810188520186612607565b612c726040519687936020850152518092602585019061255f565b81017f2069732061206d656d626572206f6620746865204e6f756e732044414f0000006025820152036022810185520183612607565b612d18565b908082519081815260208091019281808460051b8301019501936000915b848310612cdb5750505050505090565b9091929394958480612d08600193601f198682030187528a5190836118be83516040808552840190612582565b9801930193019194939290612ccb565b919091612d2482612f58565b6001549251604080516304bde4dd60e01b815265ffffffffffff9092166004830152946000949192916001600160a01b039086908590602490829085165afa938415612e9d578694612e81575b50865194608086018681106001600160401b03821117612e6d5792612e12612e239389989693612deb9a98968c528752602087019283528a8701958652606087019384526002541694612e018b519a8b98899863092ba0e960e41b8a5260048a01528d60248a015251608060448a015260c4890190612582565b93519360431994858983030160648a0152612582565b905183878303016084880152612582565b9151908483030160a4850152612cad565b038173__$7233c33f2e1e35848c685b0eb24649959e$__5af4928315612e6357508092612e4f57505090565b612a2a92503d8091833e61043f8183612607565b51903d90823e3d90fd5b634e487b7160e01b88526041600452602488fd5b612e969194503d8088833e61043f8183612607565b9238612d71565b87513d88823e3d90fd5b805115612ba55760200190565b805160011015612ba55760400190565b805160021015612ba55760600190565b805160031015612ba55760800190565b805160041015612ba55760a00190565b805160051015612ba55760c00190565b805160061015612ba55760e00190565b805160071015612ba5576101000190565b805160081015612ba5576101200190565b805160091015612ba5576101400190565b8051600a1015612ba5576101600190565b604090815191612f67836125eb565b600b835260005b61016081106134dc575060018060a01b03600154169165ffffffffffff6020918183820151169184519163e989de7d60e01b83526004938484015260249260008185818b5afa9081156133f0576000916134c3575b50612fcd816134ff565b875191612fd9836125d0565b825286820152612fe889612ea7565b52612ff288612ea7565b5080860151865163837724e160e01b81529083168582015260008185818b5afa9081156133f0576000916134aa575b5061302b816134ff565b875191613037836125d0565b82528682015261304689612eb4565b5261305088612eb4565b50606081015186516398293d6f60e01b81529083168582015260008185818b5afa9081156133f057600091613491575b5061308a816134ff565b875191613096836125d0565b8252868201526130a589612ec4565b526130af88612ec4565b50608081015186516376c55d2d60e11b81529083168582015260008185818b5afa9081156133f057600091613478575b506130e9816134ff565b8751916130f5836125d0565b82528682015261310489612ed4565b5261310e88612ed4565b5060a0810151865163241b4ff160e11b81529083168582015260008185818b5afa9081156133f05760009161345f575b50613148816134ff565b875191613154836125d0565b82528682015261316389612ee4565b5261316d88612ee4565b5060c0810151865163e1bf8c5160e01b81529083168582015260008185818b5afa9081156133f057600091613446575b506131a7816134ff565b8751916131b3836125d0565b8252868201526131c289612ef4565b526131cc88612ef4565b5060e08101518651630a3bfd6760e01b81529083168582015260008185818b5afa9081156133f05760009161342d575b50613206816134ff565b875191613212836125d0565b82528682015261322189612f04565b5261322b88612f04565b50610100810151865163b8e1963560e01b81529083168582015260008185818b5afa9081156133f057600091613414575b50613266816134ff565b875191613272836125d0565b82528682015261328189612f14565b5261328b88612f14565b50610120810151865163f6b6d99360e01b81529083168582015260008185818b5afa9081156133f0576000916133fb575b506132c6816134ff565b8751916132d2836125d0565b8252868201526132e189612f25565b526132eb88612f25565b50610140810151865163bca747b560e01b81529083168582015260008185818b5afa9081156133f057916101609160009695949387916133d7575b50613330816134ff565b89519161333c836125d0565b82528882015261334b8b612f36565b526133558a612f36565b5001511691855196879384926377258a0760e11b84528301525afa9283156133cc576000936133b1575b50613389836134ff565b915192613395846125d0565b83528201526133a382612f47565b526133ad81612f47565b5090565b6133c591933d8091833e61043f8183612607565b913861337f565b82513d6000823e3d90fd5b6133ea913d8091833e61043f8183612607565b38613326565b87513d6000823e3d90fd5b61340e913d8091833e61043f8183612607565b386132bc565b613427913d8091833e61043f8183612607565b3861325c565b613440913d8091833e61043f8183612607565b386131fc565b613459913d8091833e61043f8183612607565b3861319d565b613472913d8091833e61043f8183612607565b3861313e565b61348b913d8091833e61043f8183612607565b386130df565b6134a4913d8091833e61043f8183612607565b38613080565b6134bd913d8091833e61043f8183612607565b38613021565b6134d6913d8091833e61043f8183612607565b38612fc3565b60209082516134ea816125d0565b60608082528382015285820183015201612f6e565b60018060a01b036001541690805115612ba5576020600091015160f81c602460405180948193635e16a2ff60e11b835260048301525afa90811561355b57600091613548575090565b612a2a913d8091833e61043f8183612607565b6040513d6000823e3d90fdfec2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85ba2646970667358221220d0efc71a0f4076eba0e6209a135f57b3dacd1d406f67fd64ddcdb74bf25ed80364736f6c63430008140033";

type NounsDescriptorV2ConstructorParams =
  | [linkLibraryAddresses: NounsDescriptorV2LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NounsDescriptorV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class NounsDescriptorV2__factory extends ContractFactory {
  constructor(...args: NounsDescriptorV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        NounsDescriptorV2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: NounsDescriptorV2LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7233c33f2e1e35848c685b0eb24649959e\\$__", "g"),
      linkLibraryAddresses["contracts/libs/NFTDescriptorV2.sol:NFTDescriptorV2"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _art: PromiseOrValue<string>,
    _renderer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NounsDescriptorV2> {
    return super.deploy(
      _art,
      _renderer,
      overrides || {}
    ) as Promise<NounsDescriptorV2>;
  }
  override getDeployTransaction(
    _art: PromiseOrValue<string>,
    _renderer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_art, _renderer, overrides || {});
  }
  override attach(address: string): NounsDescriptorV2 {
    return super.attach(address) as NounsDescriptorV2;
  }
  override connect(signer: Signer): NounsDescriptorV2__factory {
    return super.connect(signer) as NounsDescriptorV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NounsDescriptorV2Interface {
    return new utils.Interface(_abi) as NounsDescriptorV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NounsDescriptorV2 {
    return new Contract(address, _abi, signerOrProvider) as NounsDescriptorV2;
  }
}

export interface NounsDescriptorV2LibraryAddresses {
  ["contracts/libs/NFTDescriptorV2.sol:NFTDescriptorV2"]: string;
}
