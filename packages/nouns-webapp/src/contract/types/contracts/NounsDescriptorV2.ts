/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export declare namespace INounsSeeder {
  export type SeedStruct = {
    background: PromiseOrValue<BigNumberish>;
    backDecoration: PromiseOrValue<BigNumberish>;
    backgroundDecoration: PromiseOrValue<BigNumberish>;
    special: PromiseOrValue<BigNumberish>;
    leftHand: PromiseOrValue<BigNumberish>;
    back: PromiseOrValue<BigNumberish>;
    clothe: PromiseOrValue<BigNumberish>;
    choker: PromiseOrValue<BigNumberish>;
    ear: PromiseOrValue<BigNumberish>;
    hair: PromiseOrValue<BigNumberish>;
    hat: PromiseOrValue<BigNumberish>;
    headphone: PromiseOrValue<BigNumberish>;
  };

  export type SeedStructOutput = [
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number
  ] & {
    background: number;
    backDecoration: number;
    backgroundDecoration: number;
    special: number;
    leftHand: number;
    back: number;
    clothe: number;
    choker: number;
    ear: number;
    hair: number;
    hat: number;
    headphone: number;
  };
}

export declare namespace ISVGRenderer {
  export type PartStruct = {
    image: PromiseOrValue<BytesLike>;
    palette: PromiseOrValue<BytesLike>;
  };

  export type PartStructOutput = [string, string] & {
    image: string;
    palette: string;
  };
}

export interface NounsDescriptorV2Interface extends utils.Interface {
  functions: {
    "addBackDecorations(bytes,uint80,uint16)": FunctionFragment;
    "addBackDecorationsFromPointer(address,uint80,uint16)": FunctionFragment;
    "addBackground(string)": FunctionFragment;
    "addBackgroundDecorations(bytes,uint80,uint16)": FunctionFragment;
    "addBackgroundDecorationsFromPointer(address,uint80,uint16)": FunctionFragment;
    "addBacks(bytes,uint80,uint16)": FunctionFragment;
    "addBacksFromPointer(address,uint80,uint16)": FunctionFragment;
    "addChokers(bytes,uint80,uint16)": FunctionFragment;
    "addChokersFromPointer(address,uint80,uint16)": FunctionFragment;
    "addClothes(bytes,uint80,uint16)": FunctionFragment;
    "addClothesFromPointer(address,uint80,uint16)": FunctionFragment;
    "addEars(bytes,uint80,uint16)": FunctionFragment;
    "addEarsFromPointer(address,uint80,uint16)": FunctionFragment;
    "addHairs(bytes,uint80,uint16)": FunctionFragment;
    "addHairsFromPointer(address,uint80,uint16)": FunctionFragment;
    "addHats(bytes,uint80,uint16)": FunctionFragment;
    "addHatsFromPointer(address,uint80,uint16)": FunctionFragment;
    "addHeadphones(bytes,uint80,uint16)": FunctionFragment;
    "addHeadphonesFromPointer(address,uint80,uint16)": FunctionFragment;
    "addLeftHands(bytes,uint80,uint16)": FunctionFragment;
    "addLeftHandsFromPointer(address,uint80,uint16)": FunctionFragment;
    "addManyBackgrounds(string[])": FunctionFragment;
    "addSpecials(bytes,uint80,uint16)": FunctionFragment;
    "addSpecialsFromPointer(address,uint80,uint16)": FunctionFragment;
    "arePartsLocked()": FunctionFragment;
    "art()": FunctionFragment;
    "backCount()": FunctionFragment;
    "backDecorationCount()": FunctionFragment;
    "backDecorations(uint256)": FunctionFragment;
    "backgroundCount()": FunctionFragment;
    "backgroundDecorationCount()": FunctionFragment;
    "backgroundDecorations(uint256)": FunctionFragment;
    "backgrounds(uint256)": FunctionFragment;
    "backs(uint256)": FunctionFragment;
    "baseURI()": FunctionFragment;
    "chokerCount()": FunctionFragment;
    "chokers(uint256)": FunctionFragment;
    "clotheCount()": FunctionFragment;
    "clothes(uint256)": FunctionFragment;
    "dataURI(uint256,(uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48))": FunctionFragment;
    "earCount()": FunctionFragment;
    "ears(uint256)": FunctionFragment;
    "generateSVGImage((uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48))": FunctionFragment;
    "genericDataURI(string,string,(uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48))": FunctionFragment;
    "getPartsForSeed((uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48))": FunctionFragment;
    "hairCount()": FunctionFragment;
    "hairs(uint256)": FunctionFragment;
    "hatCount()": FunctionFragment;
    "hats(uint256)": FunctionFragment;
    "headphoneCount()": FunctionFragment;
    "headphones(uint256)": FunctionFragment;
    "isDataURIEnabled()": FunctionFragment;
    "leftHandCount()": FunctionFragment;
    "leftHands(uint256)": FunctionFragment;
    "lockParts()": FunctionFragment;
    "owner()": FunctionFragment;
    "palettes(uint8)": FunctionFragment;
    "renderer()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setArt(address)": FunctionFragment;
    "setArtDescriptor(address)": FunctionFragment;
    "setArtInflator(address)": FunctionFragment;
    "setBaseURI(string)": FunctionFragment;
    "setPalette(uint8,bytes)": FunctionFragment;
    "setPalettePointer(uint8,address)": FunctionFragment;
    "setRenderer(address)": FunctionFragment;
    "specialCount()": FunctionFragment;
    "specials(uint256)": FunctionFragment;
    "toggleDataURIEnabled()": FunctionFragment;
    "tokenURI(uint256,(uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48,uint48))": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addBackDecorations"
      | "addBackDecorationsFromPointer"
      | "addBackground"
      | "addBackgroundDecorations"
      | "addBackgroundDecorationsFromPointer"
      | "addBacks"
      | "addBacksFromPointer"
      | "addChokers"
      | "addChokersFromPointer"
      | "addClothes"
      | "addClothesFromPointer"
      | "addEars"
      | "addEarsFromPointer"
      | "addHairs"
      | "addHairsFromPointer"
      | "addHats"
      | "addHatsFromPointer"
      | "addHeadphones"
      | "addHeadphonesFromPointer"
      | "addLeftHands"
      | "addLeftHandsFromPointer"
      | "addManyBackgrounds"
      | "addSpecials"
      | "addSpecialsFromPointer"
      | "arePartsLocked"
      | "art"
      | "backCount"
      | "backDecorationCount"
      | "backDecorations"
      | "backgroundCount"
      | "backgroundDecorationCount"
      | "backgroundDecorations"
      | "backgrounds"
      | "backs"
      | "baseURI"
      | "chokerCount"
      | "chokers"
      | "clotheCount"
      | "clothes"
      | "dataURI"
      | "earCount"
      | "ears"
      | "generateSVGImage"
      | "genericDataURI"
      | "getPartsForSeed"
      | "hairCount"
      | "hairs"
      | "hatCount"
      | "hats"
      | "headphoneCount"
      | "headphones"
      | "isDataURIEnabled"
      | "leftHandCount"
      | "leftHands"
      | "lockParts"
      | "owner"
      | "palettes"
      | "renderer"
      | "renounceOwnership"
      | "setArt"
      | "setArtDescriptor"
      | "setArtInflator"
      | "setBaseURI"
      | "setPalette"
      | "setPalettePointer"
      | "setRenderer"
      | "specialCount"
      | "specials"
      | "toggleDataURIEnabled"
      | "tokenURI"
      | "transferOwnership"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addBackDecorations",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addBackDecorationsFromPointer",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addBackground",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "addBackgroundDecorations",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addBackgroundDecorationsFromPointer",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addBacks",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addBacksFromPointer",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addChokers",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addChokersFromPointer",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addClothes",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addClothesFromPointer",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addEars",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addEarsFromPointer",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addHairs",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addHairsFromPointer",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addHats",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addHatsFromPointer",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addHeadphones",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addHeadphonesFromPointer",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addLeftHands",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addLeftHandsFromPointer",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addManyBackgrounds",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "addSpecials",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addSpecialsFromPointer",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "arePartsLocked",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "art", values?: undefined): string;
  encodeFunctionData(functionFragment: "backCount", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "backDecorationCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "backDecorations",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "backgroundCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "backgroundDecorationCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "backgroundDecorations",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "backgrounds",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "backs",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(functionFragment: "baseURI", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "chokerCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "chokers",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "clotheCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "clothes",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "dataURI",
    values: [PromiseOrValue<BigNumberish>, INounsSeeder.SeedStruct]
  ): string;
  encodeFunctionData(functionFragment: "earCount", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "ears",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "generateSVGImage",
    values: [INounsSeeder.SeedStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "genericDataURI",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      INounsSeeder.SeedStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getPartsForSeed",
    values: [INounsSeeder.SeedStruct]
  ): string;
  encodeFunctionData(functionFragment: "hairCount", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "hairs",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(functionFragment: "hatCount", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "hats",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "headphoneCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "headphones",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isDataURIEnabled",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "leftHandCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "leftHands",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(functionFragment: "lockParts", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "palettes",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(functionFragment: "renderer", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setArt",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setArtDescriptor",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setArtInflator",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setBaseURI",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setPalette",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "setPalettePointer",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setRenderer",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "specialCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "specials",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "toggleDataURIEnabled",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "tokenURI",
    values: [PromiseOrValue<BigNumberish>, INounsSeeder.SeedStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "addBackDecorations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addBackDecorationsFromPointer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addBackground",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addBackgroundDecorations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addBackgroundDecorationsFromPointer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addBacks", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addBacksFromPointer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addChokers", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addChokersFromPointer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addClothes", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addClothesFromPointer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addEars", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addEarsFromPointer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addHairs", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addHairsFromPointer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addHats", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addHatsFromPointer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addHeadphones",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addHeadphonesFromPointer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addLeftHands",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addLeftHandsFromPointer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addManyBackgrounds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addSpecials",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addSpecialsFromPointer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "arePartsLocked",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "art", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "backCount", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "backDecorationCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "backDecorations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "backgroundCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "backgroundDecorationCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "backgroundDecorations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "backgrounds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "backs", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "baseURI", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "chokerCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "chokers", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "clotheCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "clothes", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "dataURI", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "earCount", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ears", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "generateSVGImage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "genericDataURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPartsForSeed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "hairCount", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hairs", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hatCount", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hats", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "headphoneCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "headphones", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isDataURIEnabled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "leftHandCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "leftHands", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "lockParts", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "palettes", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "renderer", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setArt", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setArtDescriptor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setArtInflator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setBaseURI", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setPalette", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setPalettePointer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setRenderer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "specialCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "specials", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "toggleDataURIEnabled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tokenURI", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "ArtUpdated(address)": EventFragment;
    "BaseURIUpdated(string)": EventFragment;
    "DataURIToggled(bool)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "PartsLocked()": EventFragment;
    "RendererUpdated(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ArtUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BaseURIUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DataURIToggled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PartsLocked"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RendererUpdated"): EventFragment;
}

export interface ArtUpdatedEventObject {
  art: string;
}
export type ArtUpdatedEvent = TypedEvent<[string], ArtUpdatedEventObject>;

export type ArtUpdatedEventFilter = TypedEventFilter<ArtUpdatedEvent>;

export interface BaseURIUpdatedEventObject {
  baseURI: string;
}
export type BaseURIUpdatedEvent = TypedEvent<
  [string],
  BaseURIUpdatedEventObject
>;

export type BaseURIUpdatedEventFilter = TypedEventFilter<BaseURIUpdatedEvent>;

export interface DataURIToggledEventObject {
  enabled: boolean;
}
export type DataURIToggledEvent = TypedEvent<
  [boolean],
  DataURIToggledEventObject
>;

export type DataURIToggledEventFilter = TypedEventFilter<DataURIToggledEvent>;

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface PartsLockedEventObject {}
export type PartsLockedEvent = TypedEvent<[], PartsLockedEventObject>;

export type PartsLockedEventFilter = TypedEventFilter<PartsLockedEvent>;

export interface RendererUpdatedEventObject {
  renderer: string;
}
export type RendererUpdatedEvent = TypedEvent<
  [string],
  RendererUpdatedEventObject
>;

export type RendererUpdatedEventFilter = TypedEventFilter<RendererUpdatedEvent>;

export interface NounsDescriptorV2 extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: NounsDescriptorV2Interface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addBackDecorations(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addBackDecorationsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addBackground(
      _background: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addBackgroundDecorations(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addBackgroundDecorationsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addBacks(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addBacksFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addChokers(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addChokersFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addClothes(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addClothesFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addEars(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addEarsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addHairs(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addHairsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addHats(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addHatsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addHeadphones(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addHeadphonesFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addLeftHands(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addLeftHandsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addManyBackgrounds(
      _backgrounds: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addSpecials(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addSpecialsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    arePartsLocked(overrides?: CallOverrides): Promise<[boolean]>;

    art(overrides?: CallOverrides): Promise<[string]>;

    backCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    backDecorationCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    backDecorations(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    backgroundCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    backgroundDecorationCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    backgroundDecorations(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    backgrounds(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    backs(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    baseURI(overrides?: CallOverrides): Promise<[string]>;

    chokerCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    chokers(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    clotheCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    clothes(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    dataURI(
      tokenId: PromiseOrValue<BigNumberish>,
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    earCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    ears(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    generateSVGImage(
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    genericDataURI(
      name: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getPartsForSeed(
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<[ISVGRenderer.PartStructOutput[]]>;

    hairCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    hairs(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    hatCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    hats(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    headphoneCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    headphones(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    isDataURIEnabled(overrides?: CallOverrides): Promise<[boolean]>;

    leftHandCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    leftHands(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    lockParts(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    palettes(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    renderer(overrides?: CallOverrides): Promise<[string]>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setArt(
      _art: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setArtDescriptor(
      descriptor: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setArtInflator(
      inflator: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setBaseURI(
      _baseURI: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPalette(
      paletteIndex: PromiseOrValue<BigNumberish>,
      palette: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPalettePointer(
      paletteIndex: PromiseOrValue<BigNumberish>,
      pointer: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setRenderer(
      _renderer: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    specialCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    specials(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    toggleDataURIEnabled(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    tokenURI(
      tokenId: PromiseOrValue<BigNumberish>,
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  addBackDecorations(
    encodedCompressed: PromiseOrValue<BytesLike>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addBackDecorationsFromPointer(
    pointer: PromiseOrValue<string>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addBackground(
    _background: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addBackgroundDecorations(
    encodedCompressed: PromiseOrValue<BytesLike>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addBackgroundDecorationsFromPointer(
    pointer: PromiseOrValue<string>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addBacks(
    encodedCompressed: PromiseOrValue<BytesLike>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addBacksFromPointer(
    pointer: PromiseOrValue<string>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addChokers(
    encodedCompressed: PromiseOrValue<BytesLike>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addChokersFromPointer(
    pointer: PromiseOrValue<string>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addClothes(
    encodedCompressed: PromiseOrValue<BytesLike>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addClothesFromPointer(
    pointer: PromiseOrValue<string>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addEars(
    encodedCompressed: PromiseOrValue<BytesLike>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addEarsFromPointer(
    pointer: PromiseOrValue<string>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addHairs(
    encodedCompressed: PromiseOrValue<BytesLike>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addHairsFromPointer(
    pointer: PromiseOrValue<string>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addHats(
    encodedCompressed: PromiseOrValue<BytesLike>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addHatsFromPointer(
    pointer: PromiseOrValue<string>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addHeadphones(
    encodedCompressed: PromiseOrValue<BytesLike>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addHeadphonesFromPointer(
    pointer: PromiseOrValue<string>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addLeftHands(
    encodedCompressed: PromiseOrValue<BytesLike>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addLeftHandsFromPointer(
    pointer: PromiseOrValue<string>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addManyBackgrounds(
    _backgrounds: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addSpecials(
    encodedCompressed: PromiseOrValue<BytesLike>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addSpecialsFromPointer(
    pointer: PromiseOrValue<string>,
    decompressedLength: PromiseOrValue<BigNumberish>,
    imageCount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  arePartsLocked(overrides?: CallOverrides): Promise<boolean>;

  art(overrides?: CallOverrides): Promise<string>;

  backCount(overrides?: CallOverrides): Promise<BigNumber>;

  backDecorationCount(overrides?: CallOverrides): Promise<BigNumber>;

  backDecorations(
    index: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  backgroundCount(overrides?: CallOverrides): Promise<BigNumber>;

  backgroundDecorationCount(overrides?: CallOverrides): Promise<BigNumber>;

  backgroundDecorations(
    index: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  backgrounds(
    index: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  backs(
    index: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  baseURI(overrides?: CallOverrides): Promise<string>;

  chokerCount(overrides?: CallOverrides): Promise<BigNumber>;

  chokers(
    index: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  clotheCount(overrides?: CallOverrides): Promise<BigNumber>;

  clothes(
    index: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  dataURI(
    tokenId: PromiseOrValue<BigNumberish>,
    seed: INounsSeeder.SeedStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  earCount(overrides?: CallOverrides): Promise<BigNumber>;

  ears(
    index: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  generateSVGImage(
    seed: INounsSeeder.SeedStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  genericDataURI(
    name: PromiseOrValue<string>,
    description: PromiseOrValue<string>,
    seed: INounsSeeder.SeedStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  getPartsForSeed(
    seed: INounsSeeder.SeedStruct,
    overrides?: CallOverrides
  ): Promise<ISVGRenderer.PartStructOutput[]>;

  hairCount(overrides?: CallOverrides): Promise<BigNumber>;

  hairs(
    index: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  hatCount(overrides?: CallOverrides): Promise<BigNumber>;

  hats(
    index: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  headphoneCount(overrides?: CallOverrides): Promise<BigNumber>;

  headphones(
    index: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  isDataURIEnabled(overrides?: CallOverrides): Promise<boolean>;

  leftHandCount(overrides?: CallOverrides): Promise<BigNumber>;

  leftHands(
    index: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  lockParts(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  palettes(
    index: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  renderer(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setArt(
    _art: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setArtDescriptor(
    descriptor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setArtInflator(
    inflator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setBaseURI(
    _baseURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPalette(
    paletteIndex: PromiseOrValue<BigNumberish>,
    palette: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPalettePointer(
    paletteIndex: PromiseOrValue<BigNumberish>,
    pointer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setRenderer(
    _renderer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  specialCount(overrides?: CallOverrides): Promise<BigNumber>;

  specials(
    index: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  toggleDataURIEnabled(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  tokenURI(
    tokenId: PromiseOrValue<BigNumberish>,
    seed: INounsSeeder.SeedStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  transferOwnership(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addBackDecorations(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addBackDecorationsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addBackground(
      _background: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    addBackgroundDecorations(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addBackgroundDecorationsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addBacks(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addBacksFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addChokers(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addChokersFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addClothes(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addClothesFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addEars(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addEarsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addHairs(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addHairsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addHats(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addHatsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addHeadphones(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addHeadphonesFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addLeftHands(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addLeftHandsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addManyBackgrounds(
      _backgrounds: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    addSpecials(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addSpecialsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    arePartsLocked(overrides?: CallOverrides): Promise<boolean>;

    art(overrides?: CallOverrides): Promise<string>;

    backCount(overrides?: CallOverrides): Promise<BigNumber>;

    backDecorationCount(overrides?: CallOverrides): Promise<BigNumber>;

    backDecorations(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    backgroundCount(overrides?: CallOverrides): Promise<BigNumber>;

    backgroundDecorationCount(overrides?: CallOverrides): Promise<BigNumber>;

    backgroundDecorations(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    backgrounds(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    backs(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    baseURI(overrides?: CallOverrides): Promise<string>;

    chokerCount(overrides?: CallOverrides): Promise<BigNumber>;

    chokers(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    clotheCount(overrides?: CallOverrides): Promise<BigNumber>;

    clothes(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    dataURI(
      tokenId: PromiseOrValue<BigNumberish>,
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    earCount(overrides?: CallOverrides): Promise<BigNumber>;

    ears(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    generateSVGImage(
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    genericDataURI(
      name: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    getPartsForSeed(
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<ISVGRenderer.PartStructOutput[]>;

    hairCount(overrides?: CallOverrides): Promise<BigNumber>;

    hairs(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    hatCount(overrides?: CallOverrides): Promise<BigNumber>;

    hats(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    headphoneCount(overrides?: CallOverrides): Promise<BigNumber>;

    headphones(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    isDataURIEnabled(overrides?: CallOverrides): Promise<boolean>;

    leftHandCount(overrides?: CallOverrides): Promise<BigNumber>;

    leftHands(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    lockParts(overrides?: CallOverrides): Promise<void>;

    owner(overrides?: CallOverrides): Promise<string>;

    palettes(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    renderer(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    setArt(
      _art: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setArtDescriptor(
      descriptor: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setArtInflator(
      inflator: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setBaseURI(
      _baseURI: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setPalette(
      paletteIndex: PromiseOrValue<BigNumberish>,
      palette: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    setPalettePointer(
      paletteIndex: PromiseOrValue<BigNumberish>,
      pointer: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setRenderer(
      _renderer: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    specialCount(overrides?: CallOverrides): Promise<BigNumber>;

    specials(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    toggleDataURIEnabled(overrides?: CallOverrides): Promise<void>;

    tokenURI(
      tokenId: PromiseOrValue<BigNumberish>,
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "ArtUpdated(address)"(art?: null): ArtUpdatedEventFilter;
    ArtUpdated(art?: null): ArtUpdatedEventFilter;

    "BaseURIUpdated(string)"(baseURI?: null): BaseURIUpdatedEventFilter;
    BaseURIUpdated(baseURI?: null): BaseURIUpdatedEventFilter;

    "DataURIToggled(bool)"(enabled?: null): DataURIToggledEventFilter;
    DataURIToggled(enabled?: null): DataURIToggledEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;

    "PartsLocked()"(): PartsLockedEventFilter;
    PartsLocked(): PartsLockedEventFilter;

    "RendererUpdated(address)"(renderer?: null): RendererUpdatedEventFilter;
    RendererUpdated(renderer?: null): RendererUpdatedEventFilter;
  };

  estimateGas: {
    addBackDecorations(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addBackDecorationsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addBackground(
      _background: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addBackgroundDecorations(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addBackgroundDecorationsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addBacks(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addBacksFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addChokers(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addChokersFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addClothes(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addClothesFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addEars(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addEarsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addHairs(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addHairsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addHats(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addHatsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addHeadphones(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addHeadphonesFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addLeftHands(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addLeftHandsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addManyBackgrounds(
      _backgrounds: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addSpecials(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addSpecialsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    arePartsLocked(overrides?: CallOverrides): Promise<BigNumber>;

    art(overrides?: CallOverrides): Promise<BigNumber>;

    backCount(overrides?: CallOverrides): Promise<BigNumber>;

    backDecorationCount(overrides?: CallOverrides): Promise<BigNumber>;

    backDecorations(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    backgroundCount(overrides?: CallOverrides): Promise<BigNumber>;

    backgroundDecorationCount(overrides?: CallOverrides): Promise<BigNumber>;

    backgroundDecorations(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    backgrounds(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    backs(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    baseURI(overrides?: CallOverrides): Promise<BigNumber>;

    chokerCount(overrides?: CallOverrides): Promise<BigNumber>;

    chokers(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    clotheCount(overrides?: CallOverrides): Promise<BigNumber>;

    clothes(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    dataURI(
      tokenId: PromiseOrValue<BigNumberish>,
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    earCount(overrides?: CallOverrides): Promise<BigNumber>;

    ears(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    generateSVGImage(
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    genericDataURI(
      name: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPartsForSeed(
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    hairCount(overrides?: CallOverrides): Promise<BigNumber>;

    hairs(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    hatCount(overrides?: CallOverrides): Promise<BigNumber>;

    hats(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    headphoneCount(overrides?: CallOverrides): Promise<BigNumber>;

    headphones(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isDataURIEnabled(overrides?: CallOverrides): Promise<BigNumber>;

    leftHandCount(overrides?: CallOverrides): Promise<BigNumber>;

    leftHands(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    lockParts(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    palettes(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    renderer(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setArt(
      _art: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setArtDescriptor(
      descriptor: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setArtInflator(
      inflator: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setBaseURI(
      _baseURI: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPalette(
      paletteIndex: PromiseOrValue<BigNumberish>,
      palette: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPalettePointer(
      paletteIndex: PromiseOrValue<BigNumberish>,
      pointer: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setRenderer(
      _renderer: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    specialCount(overrides?: CallOverrides): Promise<BigNumber>;

    specials(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    toggleDataURIEnabled(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    tokenURI(
      tokenId: PromiseOrValue<BigNumberish>,
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addBackDecorations(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addBackDecorationsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addBackground(
      _background: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addBackgroundDecorations(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addBackgroundDecorationsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addBacks(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addBacksFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addChokers(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addChokersFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addClothes(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addClothesFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addEars(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addEarsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addHairs(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addHairsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addHats(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addHatsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addHeadphones(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addHeadphonesFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addLeftHands(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addLeftHandsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addManyBackgrounds(
      _backgrounds: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addSpecials(
      encodedCompressed: PromiseOrValue<BytesLike>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addSpecialsFromPointer(
      pointer: PromiseOrValue<string>,
      decompressedLength: PromiseOrValue<BigNumberish>,
      imageCount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    arePartsLocked(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    art(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    backCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    backDecorationCount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    backDecorations(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    backgroundCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    backgroundDecorationCount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    backgroundDecorations(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    backgrounds(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    backs(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    baseURI(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    chokerCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    chokers(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    clotheCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    clothes(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    dataURI(
      tokenId: PromiseOrValue<BigNumberish>,
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    earCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ears(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    generateSVGImage(
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    genericDataURI(
      name: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPartsForSeed(
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    hairCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    hairs(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    hatCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    hats(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    headphoneCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    headphones(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isDataURIEnabled(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    leftHandCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    leftHands(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    lockParts(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    palettes(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    renderer(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setArt(
      _art: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setArtDescriptor(
      descriptor: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setArtInflator(
      inflator: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setBaseURI(
      _baseURI: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPalette(
      paletteIndex: PromiseOrValue<BigNumberish>,
      palette: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPalettePointer(
      paletteIndex: PromiseOrValue<BigNumberish>,
      pointer: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setRenderer(
      _renderer: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    specialCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    specials(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    toggleDataURIEnabled(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    tokenURI(
      tokenId: PromiseOrValue<BigNumberish>,
      seed: INounsSeeder.SeedStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
